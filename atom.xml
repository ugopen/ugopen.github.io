<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知识储存库</title>
  
  <subtitle>“尽一切努力提高生产率”</subtitle>
  <link href="http://notes.caxtoolkit.com/atom.xml" rel="self"/>
  
  <link href="http://notes.caxtoolkit.com/"/>
  <updated>2025-08-09T14:42:20.851Z</updated>
  <id>http://notes.caxtoolkit.com/</id>
  
  <author>
    <name>蚂蚁Emmet</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>creo toolkit二次开发基础知识</title>
    <link href="http://notes.caxtoolkit.com/post/eb1cd0f5.html"/>
    <id>http://notes.caxtoolkit.com/post/eb1cd0f5.html</id>
    <published>2025-08-09T21:16:00.000Z</published>
    <updated>2025-08-09T14:42:20.851Z</updated>
    
    <content type="html"><![CDATA[<h2 id="creo-与-Visual-Studio-对应版本"><a href="#creo-与-Visual-Studio-对应版本" class="headerlink" title="creo 与 Visual Studio 对应版本"></a>creo 与 Visual Studio 对应版本</h2><table><thead><tr><th align="center">Creo</th><th align="center">Visual Studio</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">Creo 2.0</td><td align="center">Visual Studio 2010</td><td align="center"></td></tr><tr><td align="center">Creo 3.0</td><td align="center">Visual Studio 2015</td><td align="center"></td></tr><tr><td align="center">Creo 4.0</td><td align="center">Visual Studio 2015</td><td align="center"></td></tr><tr><td align="center">Creo 6.0</td><td align="center">Visual Studio 2017</td><td align="center"></td></tr><tr><td align="center">Creo 7.0</td><td align="center">Visual Studio 2019</td><td align="center"></td></tr></tbody></table><h2 id="creo-parametric-toolkit-目录说明"><a href="#creo-parametric-toolkit-目录说明" class="headerlink" title="creo parametric toolkit 目录说明"></a>creo parametric toolkit 目录说明</h2><table><thead><tr><th>目录</th><th>说明</th></tr></thead><tbody><tr><td>prototoolkit</td><td>顶级目录</td></tr><tr><td>prototoolkit&#x2F;includes</td><td>包括引用文件</td></tr><tr><td>prototoolkit&#x2F;protk_appls</td><td>示例应用程序源文件与消息文件</td></tr><tr><td>prototoolkit&#x2F;&lt;machine_type&gt;&#x2F;obj</td><td>数据库文件与示例 makefile、静态库、动态库文件</td></tr></tbody></table><span id="more"></span><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p><code>属性 -&gt; C/C++ -&gt; 常规 -&gt; 附加包含目录</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\PTC\Creo 2.0\Common Files\M040\protoolkit\includes</span><br></pre></td></tr></table></figure><p><code>属性 -&gt; 链接器 -&gt; 常规 -&gt; 附加包含目录</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\PTC\Creo 2.0\Common Files\M040\protoolkit\x86e_win64\obj</span><br></pre></td></tr></table></figure><p><code>属性 -&gt; 链接器 -&gt; 输入 -&gt; 附加依赖项</code>常用添加项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mpr.lib</span><br><span class="line">psapi.lib</span><br><span class="line">ws2_32.lib</span><br><span class="line">netapi32.lib</span><br><span class="line">protk_dllmd.lib</span><br></pre></td></tr></table></figure><p>对与Debug和Release模式，运行库的选择有所不同：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Debug模式：多线程调试(/MTd)，推荐。</span><br><span class="line">Debug模式：多线程调试DLL (/MDd)，不推荐。</span><br><span class="line"></span><br><span class="line">Release模式：多线程(/MT)，推荐。</span><br><span class="line">Release模式：多线程DLL (/MD) ，不推荐。</span><br></pre></td></tr></table></figure><table><thead><tr><th>Creo版本</th><th>库文件：&#x2F;(MT)或&#x2F;(MTd)</th><th>库文件：&#x2F;(MD)或&#x2F;(MDd)</th></tr></thead><tbody><tr><td>ProE4.0</td><td>protk_dll.lib</td><td>protk_dllmd.lib</td></tr><tr><td>ProE5.0</td><td>protk_dll.lib</td><td>protk_dllmd.lib</td></tr><tr><td>Creo2.0</td><td>protk_dll.lib</td><td>protk_dllmd.lib</td></tr><tr><td>Creo3.0</td><td>protk_dll_NU.lib、ucore.lib、udata.lib</td><td>protk_dllmd.lib、ucore.lib、udata.lib</td></tr><tr><td>Creo4.0</td><td>protk_dll_NU.lib、ucore.lib、udata.lib</td><td>protk_dllmd_NU.lib、ucore.lib、udata.lib</td></tr><tr><td>Creo5.x.x.x</td><td>protk_dll_NU.lib、ucore.lib、udata.lib</td><td>protk_dllmd_NU.lib、ucore.lib、udata.lib</td></tr></tbody></table><h2 id="启动文件"><a href="#启动文件" class="headerlink" title="启动文件"></a>启动文件</h2><p>定义<code>.dat</code>后缀的配置文件，主要作用是定义键盘快捷键与 Creo 命令（包括二次开发自定义命令）之间的映射关系。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">name MaterialSet</span><br><span class="line">exec_file E:\e-book\CREO\creo_toolkit\MaterialSet\x64\Debug\MaterialSet.dll</span><br><span class="line">text_dir  E:\e-book\CREO\creo_toolkit\MaterialSet\text</span><br><span class="line">startup dll </span><br><span class="line">allow_stop TRUE </span><br><span class="line">revision   1.0</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">name：本项目的名称</span><br><span class="line">exec_file：dll的绝对路径</span><br><span class="line">text_dir：资源路径（一般默认选择CREO安装路径下的TEXT文件夹）</span><br><span class="line">startup：DLL类型的文件</span><br><span class="line">allow_stop：是否允许关闭该对话框</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.hudi.site/">工匠之心</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;creo-与-Visual-Studio-对应版本&quot;&gt;&lt;a href=&quot;#creo-与-Visual-Studio-对应版本&quot; class=&quot;headerlink&quot; title=&quot;creo 与 Visual Studio 对应版本&quot;&gt;&lt;/a&gt;creo 与 Visual Studio 对应版本&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;Creo&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Visual Studio&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;Creo 2.0&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Visual Studio 2010&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;Creo 3.0&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Visual Studio 2015&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;Creo 4.0&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Visual Studio 2015&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;Creo 6.0&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Visual Studio 2017&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;Creo 7.0&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Visual Studio 2019&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;creo-parametric-toolkit-目录说明&quot;&gt;&lt;a href=&quot;#creo-parametric-toolkit-目录说明&quot; class=&quot;headerlink&quot; title=&quot;creo parametric toolkit 目录说明&quot;&gt;&lt;/a&gt;creo parametric toolkit 目录说明&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;目录&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;prototoolkit&lt;/td&gt;
&lt;td&gt;顶级目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;prototoolkit&amp;#x2F;includes&lt;/td&gt;
&lt;td&gt;包括引用文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;prototoolkit&amp;#x2F;protk_appls&lt;/td&gt;
&lt;td&gt;示例应用程序源文件与消息文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;prototoolkit&amp;#x2F;&amp;lt;machine_type&amp;gt;&amp;#x2F;obj&lt;/td&gt;
&lt;td&gt;数据库文件与示例 makefile、静态库、动态库文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="creo" scheme="http://notes.caxtoolkit.com/categories/creo/"/>
    
    
    <category term="creo toolkit二次开发" scheme="http://notes.caxtoolkit.com/tags/creo-toolkit%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>gitlab服务器数据备份迁移</title>
    <link href="http://notes.caxtoolkit.com/post/97ac5c4.html"/>
    <id>http://notes.caxtoolkit.com/post/97ac5c4.html</id>
    <published>2024-12-20T19:28:18.000Z</published>
    <updated>2025-08-09T14:42:20.852Z</updated>
    
    <content type="html"><![CDATA[<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>新服务器的gitlab版本必需和旧服务器的gitlab版本一致，否则会有未知风险，导致迁移失败；</p><span id="more"></span><h2 id="挂载硬盘空间（非必须）"><a href="#挂载硬盘空间（非必须）" class="headerlink" title="挂载硬盘空间（非必须）"></a>挂载硬盘空间<code>（非必须）</code></h2><p>查看系统未挂载空间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vgdisplay ubuntu-vg</span><br></pre></td></tr></table></figure><p><img src="https://image.camcad.cn//vscode/20241220201450.png" alt="20241220201450"><br><code>Free  PE / Size</code>表示空闲空间。<br>查看系统空间分配情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo df -lh</span><br></pre></td></tr></table></figure><p><img src="https://image.camcad.cn//vscode/20241220201721.png" alt="20241220201721"><br>将所有空闲空间全部挂载到<code>/</code>（根目录）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo lvextend -l +100%FREE /dev/mapper/ubuntu--vg-ubuntu--lv</span><br><span class="line">sudo resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv</span><br></pre></td></tr></table></figure><h2 id="Gitlab数据备份"><a href="#Gitlab数据备份" class="headerlink" title="Gitlab数据备份"></a>Gitlab数据备份</h2><p>在gitlab旧服务器输入如下命令，进行数据备份。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure><p>以上命令执行结束后，会在<code>/var/opt/gitlab/backups</code>目录下创建gitlab最新备份数据。<br><img src="https://image.camcad.cn//vscode/20241220194435.png" alt="20241220194435"><br>将<code>/var/opt/gitlab/backups</code>目录下最新的压缩包，<code>/etc/gitlab/</code>目录如下文件复制到新服务器上。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/gitlab/gitlab.rb</span><br><span class="line">/etc/gitlab/gitlab-secrets.json</span><br></pre></td></tr></table></figure><h2 id="Gitlab数据迁移"><a href="#Gitlab数据迁移" class="headerlink" title="Gitlab数据迁移"></a>Gitlab数据迁移</h2><h3 id="gitlab版本确认"><a href="#gitlab版本确认" class="headerlink" title="gitlab版本确认"></a>gitlab版本确认</h3><p>在旧服务器上查看gitlab安装版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt policy gitlab-ce</span><br></pre></td></tr></table></figure><p><img src="https://image.camcad.cn//vscode/20241220195137.png" alt="20241220195137"></p><p>其中<code>17.2.1-ce.0</code>表示gitlab安装的版本，新服务器上也需要安装相同版本。</p><h3 id="服务器发行版本确认"><a href="#服务器发行版本确认" class="headerlink" title="服务器发行版本确认"></a>服务器发行版本确认</h3><p>在gitlab软件下载前，需要提前确认系统的发行版本，下载对应发行版本的安装包。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure><p><img src="https://image.camcad.cn//vscode/20241220200440.png" alt="20241220200440"><br><code>noble</code>表示服务器发行版本，对应的gitlab安装包也需要下载对应的发行版本。</p><h3 id="gitalb软件下载"><a href="#gitalb软件下载" class="headerlink" title="gitalb软件下载"></a>gitalb软件下载</h3><p>社区版安装包下载：<a href="https://packages.gitlab.com/gitlab/gitlab-ce">https://packages.gitlab.com/gitlab/gitlab-ce</a><br><img src="http://image.camcad.cn/2024/03/gitlab-ce.png" alt="gitlab-ce"></p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>从服务器获取软件列表，并在本地保存为文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>本地安装软件与本地软件列表对比，如本地安装版本低，会提示更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p>升级系统依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get dist-upgrade</span><br></pre></td></tr></table></figure><p>gitlab依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ca-certificates curl openssh-server postfix</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>将下载的安装包上传到新服务器上，输入如下命令进行安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i 软件包</span><br><span class="line"></span><br><span class="line">sudo dpkg -i gitlab-ce_15.4.6-ce.0_amd64.deb</span><br></pre></td></tr></table></figure><p><img src="https://image.camcad.cn//vscode/20241220203250.png" alt="20241220203250"><br>修改<code>/etc/gitlab/gitlab.rb</code>配置文件，重新输入如下命令加载配置和启动gitlab。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br><span class="line">sudo gitlab-ctl restart</span><br></pre></td></tr></table></figure><p>查看gitlab是否能够正常启动。<br><img src="https://image.camcad.cn//vscode/20241220205419.png" alt="20241220205419"></p><p><img src="https://image.camcad.cn//vscode/20241220205510.png" alt="20241220205510"></p><h3 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h3><p>停止gitlab相关服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl stop unicorn</span><br><span class="line">sudo gitlab-ctl stop sidekiq</span><br><span class="line">sudo gitlab-ctl stop nginx</span><br><span class="line">sudo gitlab-ctl stop puma</span><br></pre></td></tr></table></figure><p>将新服务器<code>/var/opt/gitlab/backups</code>目录设置读写执行权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 777 /var/opt/gitlab/backups</span><br></pre></td></tr></table></figure><p>将旧服务器备份的数据复制到新服务器<code>/var/opt/gitlab/backups</code>目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp ./1734618038_2024_12_19_17.2.1_gitlab_backup.tar /var/opt/gitlab/backups</span><br></pre></td></tr></table></figure><p>执行迁移命令如下操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">迁移压缩包：</span><br><span class="line">1734618038_2024_12_19_17.2.1_gitlab_backup.tar</span><br><span class="line"></span><br><span class="line">格式：</span><br><span class="line">sudo gitlab-rake gitlab:backup:restore BACKUP=编号</span><br><span class="line"></span><br><span class="line">sudo gitlab-rake gitlab:backup:restore BACKUP=1734618038_2024_12_19_17.2.1</span><br></pre></td></tr></table></figure><p><img src="https://image.camcad.cn//vscode/20241220211821.png" alt="20241220211821"></p><h3 id="替换配置"><a href="#替换配置" class="headerlink" title="替换配置"></a>替换配置</h3><p>将旧服务器<code>/etc/gitlab/</code>目录如下文件复制到新服务器上。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/gitlab/gitlab.rb</span><br><span class="line">/etc/gitlab/gitlab-secrets.json</span><br></pre></td></tr></table></figure><p>调整配置和密钥相关文件，重新加载配置和启动gitlab服务。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br><span class="line">sudo gitlab-ctl restart</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;p&gt;新服务器的gitlab版本必需和旧服务器的gitlab版本一致，否则会有未知风险，导致迁移失败；&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/categories/gitlab/"/>
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/tags/gitlab/"/>
    
    <category term="ubuntu" scheme="http://notes.caxtoolkit.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-CAM参数说明</title>
    <link href="http://notes.caxtoolkit.com/post/54963531.html"/>
    <id>http://notes.caxtoolkit.com/post/54963531.html</id>
    <published>2024-09-14T09:55:48.000Z</published>
    <updated>2025-08-09T14:42:20.830Z</updated>
    
    <content type="html"><![CDATA[<p><code>uf_param_indices.h</code>文件，包含UF CAM中可用参数索引的列表。</p><span id="more"></span><table><thead><tr><th>宏变量</th><th>描述</th><th>类型</th><th>名称</th><th>变量名称</th><th>合适值</th><th>变量</th></tr></thead><tbody><tr><td>UF_PARAM_DISP_PATH</td><td>此索引包含一个指向一组用于显示刀具路径的参数的指针</td><td>UF_PARAM_type_pointer</td><td>显示路径选项</td><td><prefix>_display_path_option</td><td>UF_PARAM_disp_path_t</td><td>5</td></tr><tr><td>UF_PARAM_DISP_TOOL</td><td>此索引包含一个指向一组用于显示刀具的参数的指针</td><td>UF_PARAM_type_pointer</td><td>显示刀具选项</td><td><prefix>_display_tool_options</td><td>UF_PARAM_disp_tool_t</td><td>6</td></tr><tr><td>UF_PARAM_DISP_PATTERN</td><td>此索引包含一个指向一组用于显示图案的参数的指针</td><td>UF_PARAM_type_pointer</td><td>显示图案选项</td><td><prefix>_display_pattern_options</td><td>UF_PARAM_disp_pattern_t</td><td>7</td></tr><tr><td>UF_PARAM_FEED_SIDE_CUT</td><td>此索引包含一个指向侧切进给率结构的指针</td><td>UF_PARAM_type_pointer</td><td>进给侧切</td><td><prefix>_feed_side_cut</td><td>UF_PARAM_feedrate_t</td><td>9</td></tr><tr><td>UF_PARAM_FEED_RAPID</td><td>此索引包含一个指向快速进给率结构的指针</td><td>UF_PARAM_type_pointer</td><td>进给快速</td><td><prefix>_feed_rapid</td><td>UF_PARAM_feedrate_t</td><td>10</td></tr><tr><td>UF_PARAM_FEED_ENGAGE</td><td>此索引包含一个指向切入进给率结构的指针</td><td>UF_PARAM_type_pointer</td><td>进给切入</td><td><prefix>_feed_engage</td><td>UF_PARAM_feedrate_t</td><td>11</td></tr><tr><td>UF_PARAM_FEED_RETRACT</td><td>此索引包含一个指向退刀进给率结构的指针</td><td>UF_PARAM_type_pointer</td><td>进给退刀</td><td><prefix>_feed_retract</td><td>UF_PARAM_feedrate_t</td><td>12</td></tr><tr><td>UF_PARAM_FEED_APPROACH</td><td>此索引包含一个指向接近进给率结构的指针</td><td>UF_PARAM_type_pointer</td><td>进给接近</td><td><prefix>_feed_approach</td><td>UF_PARAM_feedrate_t</td><td>13</td></tr><tr><td>UF_PARAM_FEED_DEPARTURE</td><td>此索引包含一个指向离开进给率结构的指针</td><td>UF_PARAM_type_pointer</td><td>进给离开</td><td><prefix>_feed_departure</td><td>UF_PARAM_feedrate_t</td><td>14</td></tr><tr><td>UF_PARAM_FEED_RETURN</td><td>此索引包含一个指向返回进给率结构的指针</td><td>UF_PARAM_type_pointer</td><td>进给返回</td><td><prefix>_feed_return</td><td>UF_PARAM_feedrate_t</td><td>15</td></tr><tr><td>UF_PARAM_FEED_TRAVERSAL</td><td>此索引包含一个指向横移进给率结构的指针</td><td>UF_PARAM_type_pointer</td><td>进给横移</td><td><prefix>_feed_traversal</td><td>UF_PARAM_feedrate_t</td><td>16</td></tr><tr><td>UF_PARAM_FEED_CUT</td><td>此索引包含一个指向切削进给率结构的指针</td><td>UF_PARAM_type_pointer</td><td>进给切削</td><td><prefix>_feed_cut</td><td>UF_PARAM_feedrate_t</td><td>17</td></tr><tr><td>UF_PARAM_FEED_FIRST_CUT</td><td>此索引包含一个指向首次切削进给率结构的指针</td><td>UF_PARAM_type_pointer</td><td>进给首次切削</td><td><prefix>_feed_first_cut</td><td>UF_PARAM_feedrate_t</td><td>18</td></tr><tr><td>UF_PARAM_FEED_STEPOVER</td><td>此索引包含一个指向步距进给率结构的指针</td><td>UF_PARAM_type_pointer</td><td>进给步距</td><td><prefix>_feed_stepover</td><td>UF_PARAM_feedrate_t</td><td>19</td></tr><tr><td>UF_PARAM_CORNER_CONTROL_METHOD</td><td>拐角控制方法</td><td>UF_PARAM_type_int</td><td>拐角控制方法</td><td><prefix>_corner_control_method</td><td>对于车床：<br>0 &#x3D; 未定义<br>1 &#x3D; 绕圆（添加圆弧）<br>2 &#x3D; 清除拐角（延长切线）<br>3 &#x3D; 圆角拐角<br>4 &#x3D; 倒角拐角<br>对于 2 - 2.5 轴铣床：<br>0 &#x3D; 未定义<br>1 &#x3D; 激活（添加圆弧）<br>2 &#x3D; 未激活（延长切线）<br>对于 3 - 5 轴铣床：<br>0 &#x3D; 未定义<br>1 &#x3D; 无拐角控制<br>2 &#x3D; 发出警告<br>3 &#x3D; 抬起直到越过拐角<br>4 &#x3D; 使用切线扩展<br>5 &#x3D; 停止处理</td><td>24</td></tr><tr><td>UF_PARAM_FROM_STATUS</td><td>起点状态</td><td>UF_PARAM_type_int</td><td>起点状态</td><td><prefix>_from_status</td><td>0 &#x3D; 未定义<br>1 &#x3D; 激活<br>2 &#x3D; 未激活</td><td>27</td></tr><tr><td>UF_PARAM_RETURN_METHOD</td><td>此参数定义了刀具从操作的最后一个刀具位置移动到返回点的策略</td><td>UF_PARAM_type_int</td><td>返回方法</td><td><prefix>_return_method</td><td>对于车削，使用：UF_PARAM_turn_return_method_t<br>否则使用：<br>0 &#x3D; 自动<br>1 &#x3D; 直接移动<br>2 &#x3D; 垂直然后水平<br>3 &#x3D; 水平然后垂直<br>4 &#x3D; 垂直间隙平面然后直接<br>5 &#x3D; 水平间隙平面然后直接<br>6 &#x3D; 垂直间隙<br>7 &#x3D; 水平间隙<br>8 &#x3D; 垂直然后水平然后直接（仅 ID）<br>9 &#x3D; 垂直然后水平然后垂直（仅 ID）<br>10 &#x3D; 垂直然后到水平间隙（仅 ID）</td><td>30</td></tr><tr><td>UF_PARAM_RETURN_STATUS</td><td>（返回点状态）此参数指定回避返回状态</td><td>UF_PARAM_type_int</td><td>返回状态</td><td><prefix>_return_status</td><td>0 &#x3D; 未定义<br>1 &#x3D; 激活<br>2 &#x3D; 未激活</td><td>32</td></tr><tr><td>UF_PARAM_GOHOME_STATUS</td><td>归零点状态</td><td>UF_PARAM_type_int</td><td>归零点状态</td><td><prefix>_gohome_status</td><td>0 &#x3D; 未定义<br>1 &#x3D; 激活<br>2 &#x3D; 未激活<br>3 &#x3D; 使用起点位置<br>4 &#x3D; 输出“GOHOME”</td><td>34</td></tr><tr><td>UF_PARAM_BOUNDARY_TOL</td><td>此参数指定边界公差</td><td>UF_PARAM_type_2d_length</td><td>边界公差</td><td><prefix>_boundary_tolerances</td><td>正实数</td><td>37</td></tr><tr><td>UF_PARAM_RCS_LINKED_TO_MCS</td><td>RCS 与 MCS 的链接状态</td><td>UF_PARAM_type_logical</td><td>RCS 链接到 MCS 状态</td><td><prefix>_rcs_linked_to_mcs_status</td><td>FALSE &#x3D; 未链接<br>TRUE &#x3D; 链接</td><td>41</td></tr><tr><td>UF_PARAM_CLR_MIN</td><td>最小间隙距离（安全距离）</td><td>UF_PARAM_type_double_length</td><td>最小间隙</td><td><prefix>_clearance_min</td><td>零或正 UF_PARAM_type_double_length</td><td>42</td></tr><tr><td>UF_PARAM_START_METHOD</td><td>此参数定义了刀具从最后一个刀具位置移动到操作起点的策略</td><td>UF_PARAM_type_int</td><td>起点方法</td><td><prefix>_start_method</td><td>对于车削，使用：UF_PARAM_turn_start_method_t<br>否则使用：<br>0 &#x3D; 未定义<br>1 &#x3D; 直接移动<br>2 &#x3D; 垂直然后水平<br>3 &#x3D; 水平然后垂直<br>4 &#x3D; 水平间隙然后直接<br>5 &#x3D; 垂直间隙然后直接</td><td>45</td></tr><tr><td>UF_PARAM_START_STATUS</td><td>起点状态</td><td>UF_PARAM_type_int</td><td>起点状态</td><td><prefix>_start_status</td><td>0 &#x3D; 未定义<br>1 &#x3D; 激活<br>2 &#x3D; 未激活</td><td>47</td></tr><tr><td>UF_PARAM_START_OF_ENGAGE_METHOD</td><td>此参数定义了刀具从最后一个刀具位置移动到操作的切入点的策略</td><td>UF_PARAM_type_int</td><td>切入起点方法</td><td><prefix>_start_of_engage_method</td><td>UF_PARAM_turn_start_ofengage_method_t</td><td>48</td></tr><tr><td>UF_PARAM_GOHOME_METHOD</td><td>此参数定义了刀具从最后一个刀具位置移动到操作的归零点的策略</td><td>UF_PARAM_type_int</td><td>归零点方法</td><td><prefix>_gohome_method</td><td>UF_PARAM_turn_gohome_method_t</td><td>49</td></tr><tr><td>UF_PARAM_STOCK_DRIVE</td><td>用于驱动几何体的库存</td><td>UF_PARAM_type_double_length</td><td>库存驱动</td><td><prefix>_stock_drive</td><td>实数</td><td>54</td></tr><tr><td>UF_PARAM_MOTION_OUTPUT_TYPE</td><td>输出到刀具路径的运动类型</td><td>UF_PARAM_type_int</td><td>运动输出类型</td><td><prefix>_motion_output_type</td><td>UF_PARAM_motion_output_t</td><td>55</td></tr><tr><td>UF_PARAM_NURBS_OP</td><td>NURBS 输出标志，用于连接段</td><td>UF_PARAM_type_int</td><td>NURBS 连接段标志</td><td><prefix>_nurbs_joining_segments_flag</td><td>UF_PARAM_nurbs_output_flag_t</td><td>56</td></tr><tr><td>UF_PARAM_NURBS_FIT_TOL</td><td>NURBS 拟合公差</td><td>UF_PARAM_type_double_length</td><td>NURBS 拟合公差</td><td><prefix>_nurbs_fitting_tolerance</td><td>UF_PARAM_type_double_length</td><td>57</td></tr><tr><td>UF_PARAM_NURBS_ANG_TOL</td><td>NURBS 角度公差</td><td>UF_PARAM_type_double</td><td>NURBS 角度公差</td><td><prefix>_nurbs_angular_tolerance</td><td>UF_PARAM_type_double</td><td>58</td></tr><tr><td>UF_PARAM_MCS</td><td>机器坐标系</td><td>UF_PARAM_type_tag</td><td>MCS</td><td><prefix>_mcs</td><td>标签</td><td>59</td></tr><tr><td>UF_PARAM_RCS</td><td>参考坐标系</td><td>UF_PARAM_type_tag</td><td>RCS</td><td><prefix>_rcs</td><td></td><td>60</td></tr><tr><td>UF_PARAM_FIXTURE_OFFSET_STATUS</td><td>夹具偏移状态</td><td>UF_PARAM_type_int</td><td>夹具偏移状态</td><td><prefix>_fixture_offset_status</td><td>0&#x2F;1（开&#x2F;关）</td><td>61</td></tr><tr><td>UF_PARAM_FIXTURE_OFFSET_NUM</td><td>夹具偏移值</td><td>UF_PARAM_type_int</td><td>夹具偏移值</td><td><prefix>_fixture_offset_value</td><td></td><td>62</td></tr><tr><td>UF_PARAM_SCS_TYPE</td><td>主轴坐标系定义类型</td><td>UF_PARAM_type_int</td><td>主轴定义类型</td><td><prefix>_spindle_definition_type</td><td>UF_PARAM_scs_type_t</td><td>64</td></tr><tr><td>UF_PARAM_SUPPRESS_PATH_DISPLAY</td><td>此索引包含一个切换指示，用于指示在计算刀具路径时是否抑制其显示</td><td>UF_PARAM_type_int</td><td>抑制路径显示选项</td><td><prefix>_suppress_path_display_option</td><td>0 &#x3D; 不抑制刀具路径在生成期间的显示<br>1 &#x3D; 在路径生成期间抑制刀具路径的显示</td><td>65</td></tr><tr><td>UF_PARAM_CSYS_PURPOSE</td><td></td><td>UF_PARAM_type_int</td><td>坐标系目的</td><td><prefix>_coordinate_system_purpose</td><td>UF_PARAM_csys_purpose_t</td><td>66</td></tr><tr><td>UF_PARAM_SPECIAL_OUTPUT</td><td></td><td>UF_PARAM_type_int</td><td>特殊输出</td><td><prefix>_special_output</td><td>UF_PARAM_special_output_t</td><td>67</td></tr><tr><td>UF_PARAM_TEMPLATE_TYPE</td><td>对象模板类型</td><td>UF_PARAM_type_string</td><td>模板类型</td><td><prefix>_template_type</td><td></td><td>105</td></tr><tr><td>UF_PARAM_TEMPLATE_SUBTYPE</td><td>模板子类型</td><td>UF_PARAM_type_string</td><td>模板子类型</td><td><prefix>__template_subtype</td><td></td><td>106</td></tr><tr><td>UF_PARAM_TOL_IN_OUT</td><td>内外公差</td><td>UF_PARAM_type_2d_length</td><td>内外公差</td><td><prefix>_inside_outside_tolerances</td><td></td><td>109</td></tr><tr><td>UF_PARAM_OUTPUT_LOAD_TOOL</td><td>指示在添加标记时输出 LOAD&#x2F;TOOL 后处理命令的标志</td><td>UF_PARAM_type_logical</td><td>输出加载工具状态</td><td><prefix>_output_load_tool_status</td><td>True&#x2F;False</td><td>117</td></tr><tr><td>UF_PARAM_DIAGNOSTICS</td><td>在生成操作的过程中，如果遇到任何条件，该参数将包含发现的条件的错误代码。它最多支持 10 个条件。与任何错误代码相关的任何消息都可以像查询任何其他错误代码一样进行查询。如果该参数不存在，则表示没有遇到条件。注意：每次生成操作时，该参数都会从操作中删除</td><td>UF_PARAM_type_vla_int</td><td>诊断数组</td><td><prefix>_diagnositics_array</td><td>数组的正整数</td><td>123</td></tr><tr><td>UF_PARAM_CORNER_CIR_FEED_COMP</td><td>参数指示圆形进给率补偿是否开启</td><td>UF_PARAM_type_int</td><td>拐角圆形进给补偿</td><td><prefix>_corner_circular_feed_compensation</td><td>UF_PARAM_corner_cir_feed_comp_t</td><td>201</td></tr><tr><td>UF_PARAM_CORNER_FILLET_TYPE</td><td>参数指示刀具路径拐角处的倒圆类型</td><td>UF_PARAM_type_int</td><td>拐角倒圆类型</td><td><prefix>_corner_fillet_type</td><td>UF_PARAM_corner_fillet_type_t</td><td>202</td></tr><tr><td>UF_PARAM_CORNER_FILLET_PATH_RADIUS</td><td>参数是拐角倒圆的半径</td><td>UF_PARAM_type_double_length</td><td>拐角倒圆路径半径</td><td><prefix>_corner_fillet_path_radius</td><td>正 UF_PARAM_type_double_length</td><td>203</td></tr><tr><td>UF_PARAM_CORNER_MAX_TLAXIS</td><td>最大刀具轴在拐角处的变化</td><td>UF_PARAM_type_double</td><td>拐角最大刀具轴</td><td><prefix>_corner_max_tool_axis</td><td></td><td>204</td></tr><tr><td>UF_PARAM_CORNER_MAX_ANGLE</td><td>参数是拐角控制的最大角度，即用于拐角倒圆或拐角减速的最大角度</td><td>UF_PARAM_type_double</td><td>拐角最大包含角度</td><td><prefix>_corner_max_included_angle</td><td>0.0 &lt; 最大角度 &lt; 180.0</td><td>205</td></tr><tr><td>UF_PARAM_CORNER_MIN_ANGLE</td><td>参数是拐角控制的最小角度，即用于拐角倒圆或拐角减速的最小角度</td><td>UF_PARAM_type_double</td><td>拐角最小包含角度</td><td><prefix>_corner_min_included_angle</td><td>0.0 &lt;&#x3D; 最小角度 &lt; 180.0</td><td>206</td></tr><tr><td>UF_PARAM_CORNER_SLOWDOWN_STATUS</td><td>参数指示拐角减速是否开启</td><td>UF_PARAM_type_int</td><td>拐角减速状态</td><td><prefix>_corner_slowdown_status</td><td>UF_PARAM_corner_slowdown_status_t</td><td>207</td></tr><tr><td>UF_PARAM_CORNER_SLOWDOWN_LENGTH_METHOD</td><td>参数确定如果减速开启，将使用哪种减速方法</td><td>UF_PARAM_type_int</td><td>拐角减速长度方法</td><td><prefix>_corner_slowdown_length_method</td><td>UF_PARAM_corner_slowdown_length_method_t</td><td>208</td></tr><tr><td>UF_PARAM_CORNER_TL_DIAM_PERCENT</td><td>参数（如果选择了“百分比刀具”方法用于拐角减速）是减速长度与刀具直径的比率的 100 倍</td><td>UF_PARAM_type_double</td><td>拐角刀具直径百分比</td><td><prefix>_corner_tool_diameter_percent</td><td>正 UF_PARAM_type_double</td><td>209</td></tr><tr><td>UF_PARAM_CORNER_NUM_STEPS</td><td>参数是用于实现减速的进给率递减的数量</td><td>UF_PARAM_type_int</td><td>拐角减速步数</td><td><prefix>_corner_slowdown_num_steps</td><td>正 UF_PARAM_type_int</td><td>210</td></tr><tr><td>UF_PARAM_CORNER_PREV_TL_DIAM</td><td>参数（如果选择了“上一个刀具直径”方法用于拐角减速）是上一个用于切削零件的刀具的直径</td><td>UF_PARAM_type_double_length</td><td>拐角上一个刀具直径</td><td><prefix>_corner_previous_tool_diameter</td><td>正 UF_PARAM_type_double_length</td><td>211</td></tr><tr><td>UF_PARAM_CORNER_FEED_ADJUST_PERCENT</td><td>参数（仅用于拐角减速）是减速结束时的进给率与减速开始时的进给率的比率的 100 倍</td><td>UF_PARAM_type_double</td><td>拐角进给调整百分比</td><td><prefix>_corner_feed_adjust_percent</td><td>正 UF_PARAM_type_double</td><td>212</td></tr><tr><td>UF_PARAM_ENGRET_AUTO_TYPE</td><td>参数表示当前选择的自动切入和切出的类型</td><td>UF_PARAM_type_int</td><td>切入切出自动类型</td><td><prefix>_engage_retract_auto_type</td><td>0 - 线性<br>1 - 圆形</td><td>214</td></tr><tr><td>UF_PARAM_ENGRET_AUTO_OVERLAP</td><td>参数是自动切入和自动切出使用的重叠距离（仅在切割闭合路径时使用）</td><td>UF_PARAM_type_double_length</td><td>切入切出自动重叠</td><td><prefix>_engage_retract_auto_overlap</td><td>非负 UF_PARAM_type_double_length</td><td>215</td></tr><tr><td>UF_PARAM_ENGRET_AUTO_RADIUS</td><td>参数是用于圆形切入和圆形切出的圆弧半径</td><td>UF_PARAM_type_double_length</td><td>切入切出自动半径</td><td><prefix>_engage_retract_auto_radius</td><td>正 UF_PARAM_type_double_length</td><td>216</td></tr><tr><td>UF_PARAM_ENGRET_AUTO_ACTIVE_RANGE</td><td>参数是自动切入和切出使用的激活范围</td><td>UF_PARAM_type_double_length</td><td>切入切出自动激活范围</td><td>UF_PARAM_type_double_length</td><td>217</td><td></td></tr><tr><td>UF_PARAM_ENG_AUTO_RAMP_METHOD</td><td>参数表示如果自动切入处于活动状态，则使用的斜坡类型</td><td>UF_PARAM_type_int</td><td>切入自动斜坡方法</td><td><prefix>_engage_auto_ramp_method</td><td>UF_PARAM_eng_auto_ramp_method_t</td><td>218</td></tr><tr><td>UF_PARAM_ENG_AUTO_RAMP_ANGLE</td><td>参数是自动切入使用斜坡时的斜坡角度</td><td>UF_PARAM_type_double</td><td>切入自动斜坡角度</td><td><prefix>_engage_auto_ramp_angle</td><td>UF_PARAM_type_double<br>0 &lt; 斜坡角度 &lt; 90</td><td>219</td></tr><tr><td>UF_PARAM_CLRPLANE_STATUS</td><td>参数是间隙平面的状态</td><td>UF_PARAM_type_int</td><td>间隙平面状态</td><td><prefix>_clearance_plane_status</td><td>UF_PARAM_clrplane_status_t</td><td>220</td></tr><tr><td>UF_PARAM_CLRPLANE_USAGE</td><td>参数表示何时进行到或离开间隙平面的移动（仅当 UF_PARAM_CLRPLANE_STATUS 为 1 时使用）</td><td>UF_PARAM_type_int</td><td>间隙平面用法</td><td><prefix>_clearance_plane_usage</td><td>UF_PARAM_clrplane_usage_t</td><td>221</td></tr><tr><td>UF_PARAM_ENG_AUTO_MIN_RAMP_LENGTH</td><td>参数是自动切入使用斜坡时的最小斜坡长度</td><td>UF_PARAM_type_double</td><td>切入自动最小斜坡长度</td><td><prefix>_engage_auto_minimum_ramp_length</td><td>正 UF_PARAM_type_double</td><td>224</td></tr><tr><td>UF_PARAM_ENG_AUTO_HELICAL_DIAMETER</td><td>参数是自动切入使用螺旋斜坡时的螺旋直径（表示为刀具直径的百分比）</td><td>UF_PARAM_type_double</td><td>切入自动螺旋直径</td><td><prefix>_engage_auto_helical_diameter</td><td>正 UF_PARAM_type_double</td><td>225</td></tr><tr><td>UF_PARAM_LWPLANE_STATUS</td><td>参数是下限平面的状态</td><td>UF_PARAM_type_int</td><td>下限平面状态</td><td><prefix>_lower_plane_status</td><td>UF_PARAM_lwplane_status_t</td><td>226</td></tr><tr><td>UF_PARAM_LWPLANE_USAGE</td><td>参数表示当存在活动的下限平面（LLP）且刀具末端低于 LLP 时应采取的操作</td><td>UF_PARAM_type_int</td><td>下限平面用法</td><td><prefix>_lower_plane_usage</td><td>UF_PARAM_lwplane_usage_t</td><td>229</td></tr><tr><td>UF_PARAM_CUTCOM_TYPE</td><td>参数指示要执行的切削类型（如果有）</td><td>UF_PARAM_type_int</td><td>切削类型</td><td><prefix>_cutcom_type</td><td>UF_PARAM_cutcom_type_t</td><td>230</td></tr><tr><td>UF_PARAM_CUTCOM_ANGLE</td><td>参数是切削移动和切削移动之间允许的最小角度</td><td>UF_PARAM_type_double</td><td>切削角度</td><td><prefix>_cutcom_angle</td><td>非负 UF_PARAM_type_double</td><td>231</td></tr><tr><td>UF_PARAM_CUTCOM_DIST</td><td>参数是切削移动的最小长度</td><td>UF_PARAM_type_double_length</td><td>切削距离</td><td><prefix>_cutcom_distance</td><td>正 UF_PARAM_type_double_length</td><td>232</td></tr><tr><td>UF_PARAM_CUTCOM_REGISTER_NUM</td><td>参数是切削寄存器编号（在 NX2.0 中已被 UF_PARAM_TL_CUTCOM_REG 取代，从 NX4.0 开始在用户函数中将被淘汰）（仅当参数 UF_PARAM_CUTCOM_REGISTER_STATUS 为 1 时使用）</td><td>UF_PARAM_type_int</td><td>切削寄存器编号</td><td><prefix>_cutcom_register_number</td><td>UF_PARAM_type_int</td><td>233</td></tr><tr><td>UF_PARAM_CUTCOM_REGISTER_STATUS</td><td>参数确定在输出切削语句到 CLSF 时是否输出寄存器编号</td><td>UF_PARAM_type_int</td><td>切削寄存器状态</td><td><prefix>_cutcom_register_status</td><td>UF_PARAM_cutcom_register_status_t</td><td>234</td></tr><tr><td>UF_PARAM_CUTCOM_PLANE_STATUS</td><td>参数确定在切削移动不在主平面时是否输出切削移动所在平面到 CLSF</td><td>UF_PARAM_type_int</td><td>切削平面状态</td><td><prefix>_cutcom_plane_status</td><td>0 - 不输出切削平面数据<br>1 - 输出切削平面数据到 CLSF（前提是切削移动在主平面）</td><td>235</td></tr><tr><td>UF_PARAM_CUTLEV_METHOD</td><td>参数确定切削深度类型</td><td>UF_PARAM_type_int</td><td>切削深度方法</td><td><prefix>_cut_level_method</td><td>UF_PARAM_cutlev_method_t</td><td>236</td></tr><tr><td>UF_PARAM_ENG_INIT_TYPE</td><td>参数是初始切入类型</td><td>UF_PARAM_type_int</td><td>切入初始类型</td><td><prefix>_engage_initial_type</td><td>UF_PARAM_eng_init_type_t</td><td>240</td></tr><tr><td>UF_PARAM_ENG_INTER_TYPE</td><td>参数是内部切入类型</td><td>UF_PARAM_type_int</td><td>切入内部类型</td><td><prefix>_engage_internal_type</td><td>UF_PARAM_eng_inter_type_t</td><td>241</td></tr><tr><td>UF_PARAM_ENG_DIST</td><td>参数是切入移动的长度（用于切入方法：刀具轴；角度，角度，距离；和向量）</td><td>UF_PARAM_type_double_length</td><td>切入距离</td><td><prefix>_engage_distance</td><td>UF_PARAM_type_double_length</td><td>244</td></tr><tr><td>UF_PARAM_ENG_ANGLES</td><td>参数是用于切入类型：角度，角度，距离；和角度，角度，平面的角度对</td><td>UF_PARAM_type_2d</td><td>切入角度</td><td><prefix>_engage_angles</td><td>UF_PARAM_type_2d</td><td>246</td></tr><tr><td>UF_PARAM_PREDRILL_TYPE</td><td>参数指示如果有预钻孔，哪些区域（如果有）将在切削开始的点处有预钻孔。对于预钻孔选项，所有区域，无论是初始还是内部切入，都必须是刀具轴类型。对于选项，底部区域，无论是初始还是内部切入，都必须是自动的</td><td>UF_PARAM_type_int</td><td>预钻孔类型</td><td><prefix>_pre_drill_type</td><td>UF_PARAM_predrill_type_t</td><td>247</td></tr><tr><td>UF_PARAM_RET_FINAL_TYPE</td><td>参数是最终切出类型</td><td>UF_PARAM_type_int</td><td>切出最终类型</td><td><prefix>_retract_final_type</td><td>UF_PARAM_ret_final_type_t</td><td>250</td></tr><tr><td>UF_PARAM_RET_INTER_TYPE</td><td>参数是内部切出类型</td><td>UF_PARAM_type_int</td><td>切出内部类型</td><td><prefix>_retract_internal_type</td><td>UF_PARAM_ret_inter_type_t</td><td>251</td></tr><tr><td>UF_PARAM_RET_POINT</td><td>参数是最终切出方法中使用的点，例如从一个点等</td><td>UF_PARAM_type_3d_length</td><td>切出点</td><td><prefix>_retract_point</td><td>UF_PARAM_type_3d_length</td><td>252</td></tr><tr><td>UF_PARAM_RET_DIST</td><td>参数是切出移动的长度（用于切出方法：刀具轴；角度，角度，距离；和向量）</td><td>UF_PARAM_type_double_length</td><td>切出距离</td><td><prefix>_retract_distance</td><td>UF_PARAM_type_double_length</td><td>254</td></tr><tr><td>UF_PARAM_RET_ANGLES</td><td>参数是用于切出类型：角度，角度，距离；和角度，角度，平面的角度对</td><td>UF_PARAM_type_2d</td><td>切出角度</td><td><prefix>_retract_angles</td><td>UF_PARAM_type_2d</td><td>256</td></tr><tr><td>UF_PARAM_RET_AUTO_DIST</td><td>参数是自动切出的切出间隙（仅当自动类型为线性时使用）</td><td>UF_PARAM_type_double_length</td><td>切出自动距离</td><td><prefix>_retract_auto_distance</td><td>正 UF_PARAM_type_double_length</td><td>257</td></tr><tr><td>UF_PARAM_CLR_HORIZ</td><td>参数是水平间隙</td><td>UF_PARAM_type_double_length</td><td>间隙水平</td><td><prefix>_clearance_horizontal</td><td>非负 UF_PARAM_type_double_length</td><td>258</td></tr><tr><td>UF_PARAM_CLR_VERT</td><td>参数是垂直间隙距离</td><td>UF_PARAM_type_double_length</td><td>间隙垂直</td><td><prefix>_clearance_vertical</td><td>非负 UF_PARAM_type_double_length</td><td>259</td></tr><tr><td>UF_PARAM_CUT_ISLAND_CLEANUP_STATUS</td><td>参数表示如果使用“跟随周边”切削方法，是否进行岛屿清理</td><td>UF_PARAM_type_int</td><td>切削岛屿清理状态</td><td><prefix>_cut_island_cleanup_status</td><td>UF_PARAM_cut_island_cleanup_status_t</td><td>260</td></tr><tr><td>UF_PARAM_CUT_PROFILE_PASS_STATUS</td><td>参数表示是否生成精加工路径（用于各种 Zig 切削方法、Zig - zag 和“跟随周边”）</td><td>UF_PARAM_type_int</td><td>切削轮廓路径状态</td><td><prefix>_cut_profile_pass_status</td><td>UF_PARAM_cut_profile_pass_status_t</td><td>262</td></tr><tr><td>UF_PARAM_STOCK_PROFILE_PASS</td><td>参数是精加工路径的库存</td><td>UF_PARAM_type_double_length</td><td>库存轮廓路径</td><td><prefix>_stock_profile_pass</td><td>UF_PARAM_type_double_length</td><td>263</td></tr><tr><td>UF_PARAM_STOCK_FLOOR</td><td>参数是地板库存</td><td>UF_PARAM_type_double_length</td><td>库存地板</td><td><prefix>_stock_floor</td><td>UF_PARAM_type_double_length</td><td>264</td></tr><tr><td>UF_PARAM_STOCK_PART</td><td>参数是零件侧库存</td><td>UF_PARAM_type_double_length</td><td>库存零件</td><td><prefix>_stock_part</td><td>UF_PARAM_type_double_length</td><td>265</td></tr><tr><td>UF_PARAM_BLANK_DIST</td><td>参数是零件几何形状偏移以产生毛坯几何形状而无需创建 CAD 几何形状的量</td><td>UF_PARAM_type_double_length</td><td>毛坯距离</td><td><prefix>_blank_distance</td><td>正 UF_PARAM_type_double_length</td><td>266</td></tr><tr><td>UF_PARAM_BLANK_OVERHANG</td><td>此参数控制刀具可能超出毛坯几何形状的最大量。距离是从刀具的前缘到毛坯边缘的测量，并表示为刀具直径的百分比</td><td>UF_PARAM_type_double</td><td>毛坯悬垂</td><td><prefix>_blank_overhang</td><td>UF_PARAM_type_double<br>0.0 &lt;&#x3D; 毛坯悬垂 &lt;&#x3D; 100.0</td><td>267</td></tr><tr><td>UF_PARAM_CTR_ANG_TOLER</td><td>角度公差，用于在跟踪面&#x2F;体时的拓扑结构</td><td>UF_PARAM_type_double</td><td>跟踪角度公差</td><td><prefix>_tracing_angular_tolerance</td><td>UF_PARAM_type_double</td><td>268</td></tr><tr><td>UF_PARAM_CTR_DIS_TOLER</td><td>距离公差，用于在跟踪面&#x2F;体时的拓扑结构</td><td>UF_PARAM_type_double_length</td><td>跟踪线性公差</td><td><prefix>_tracing_linear_tolerance</td><td>UF_PARAM_type_double_length</td><td>269</td></tr><tr><td>UF_PARAM_STEPOVER_TYPE</td><td>参数是步距类型</td><td>UF_PARAM_type_int</td><td>步距类型</td><td><prefix>_stepover_type</td><td>UF_PARAM_stepover_type_t</td><td>270</td></tr><tr><td>UF_PARAM_STEPOVER_SCALLOP</td><td>参数是步距 scallop 高度</td><td>UF_PARAM_type_double_length</td><td>步距 scallop</td><td><prefix>_stepover_scallop</td><td>正 UF_PARAM_type_double_length</td><td>271</td></tr><tr><td>UF_PARAM_STEPOVER_DIST</td><td>参数是如果步距类型为 1（即恒定），则使用的步距大小</td><td>UF_PARAM_type_double_length</td><td>步距距离</td><td><prefix>_stepover_distance</td><td>正 UF_PARAM_type_double_length</td><td>272</td></tr><tr><td>UF_PARAM_STEPOVER_PERCENT</td><td>参数是步距类型为“% 刀具直径”时使用的百分比值</td><td>UF_PARAM_type_double</td><td>步距百分比</td><td><prefix>_stepover_percent</td><td>正 UF_PARAM_type_double</td><td>273</td></tr><tr><td>UF_PARAM_STEPOVER_VAR_DISTS</td><td>参数是步距类型为变量时的步距大小值（此参数已过时，在 NX6 中使用 UF_PARAM_STEPOVER_VAR_DISTS_TOOL_DEPENDENT 代替）</td><td>UF_PARAM_type_vla_length</td><td>步距变量距离</td><td><prefix>_stepover_variable_distances</td><td>UF_PARAM_type_vla_length<br>数组的双精度数（大小 &#x3D; 6）</td><td>274</td></tr><tr><td>UF_PARAM_STEPOVER_VAR_PASSES</td><td>参数是与步距类型为变量的步距大小对应的通过次数</td><td>UF_PARAM_type_int_vla</td><td>步距变量通过次数</td><td><prefix>_stepover_variable_passes</td><td>UF_PARAM_type_int_vla<br>数组的整数（大小 &#x3D; 6）</td><td>275</td></tr><tr><td>UF_PARAM_STEPOVER_DEGREE</td><td>参数是步距类型为“角度”时使用的角度值</td><td>UF_PARAM_type_double</td><td>步距角度</td><td><prefix>_stepover_degree</td><td>正 UF_PARAM_type_double</td><td>276</td></tr><tr><td>UF_PARAM_CUT_FOLLOW_PROGRESSION</td><td>对于“跟随周边”和“螺旋”切削方法，参数确定连续的切削移动是朝向还是远离周边边界</td><td>UF_PARAM_type_int</td><td>跟随进展</td><td><prefix>_follow_progression</td><td>UF_PARAM_cut_follow_progression_t</td><td>277</td></tr><tr><td>UF_PARAM_CUT_WALL_CLEANUP_STATUS</td><td>参数确定是否进行扇形去除路径（zig、zig - zag、zig - with_countour、zig - with - stepover、仅“跟随周边”）。UF_PARAM_cut_wall_cleanup_automatic 仅适用于“跟随周边”</td><td>UF_PARAM_type_int</td><td>切削壁清理状态</td><td><prefix>_cut_wall_cleanup_staus</td><td>UF_PARAM_cut_wall_cleanup_status_t</td><td>278</td></tr><tr><td>UF_PARAM_TOOL_AXIS_TYPE</td><td>参数表示刀具轴类型</td><td>UF_PARAM_type_int</td><td>刀具轴类型</td><td><prefix>_tool_axis_type</td><td>UF_PARAM_tool_axis_type_t</td><td>280</td></tr><tr><td>UF_PARAM_STEPOVER_APPLY_METHOD</td><td>确定用于确定如何计算步距距离的方法</td><td>UF_PARAM_type_int</td><td>步距应用方法</td><td><prefix>_stepover_apply_method</td><td>UF_PARAM_stepover_apply_t</td><td>281</td></tr><tr><td>UF_PARAM_CUT_STEP_TYPE</td><td>此参数指定使用的步控制类型</td><td>UF_PARAM_type_int</td><td>切削步类型</td><td><prefix>_cut_step_type</td><td>UF_PARAM_step_control_t</td><td>282</td></tr><tr><td>UF_PARAM_CUT_STEP_MAX</td><td>此参数指定允许的最大步距离</td><td>UF_PARAM_type_double_length</td><td>切削步最大尺寸</td><td><prefix>_cut_step_max_size</td><td>正实数</td><td>283</td></tr><tr><td>UF_PARAM_CUT_TLAXIS_DELTA</td><td>此参数指定在拐角处允许的最大刀具轴变化</td><td>UF_PARAM_type_double</td><td>刀具轴最大变化</td><td><prefix>_tool_axis_max_delta</td><td>实数</td><td>284</td></tr><tr><td>UF_PARAM_TLAXIS_HEEL_CLEARANCE</td><td>此参数指定最小脚跟间隙</td><td>UF_PARAM_type_double</td><td>最小脚跟间隙</td><td><prefix>_minumum_heel_clearance</td><td>实数</td><td>286</td></tr><tr><td>UF_PARAM_TLAXIS_LEAD_ANGLE</td><td>此参数指定刀具轴超前角度</td><td>UF_PARAM_type_double</td><td>刀具轴超前角度</td><td><prefix>_tool_axis_lead_angle</td><td>实数</td><td>287</td></tr><tr><td>UF_PARAM_TLAXIS_THRU_POINT</td><td>此参数指定刀具轴焦点</td><td>UF_PARAM_type_3d_length</td><td>刀具轴焦点</td><td><prefix>_tool_axis_focal_point</td><td>实数数组</td><td>289</td></tr><tr><td>UF_PARAM_TLAXIS_ANGLES</td><td>此参数指定刀具轴角度</td><td>UF_PARAM_type_vla_real</td><td>刀具轴角度</td><td><prefix>_tool_axis_angles</td><td>实数数组（6）<br>0 - 2 刀具轴角度<br>3 - 5 双 4 轴角度</td><td>290</td></tr><tr><td>UF_PARAM_DRIVE_METHOD</td><td>此参数指定表面轮廓驱动方法</td><td>UF_PARAM_type_int</td><td>表面轮廓驱动方法</td><td><prefix>_surface_contour_drive_method</td><td>UF_PARAM_dpm_type_t</td><td>291</td></tr><tr><td>UF_PARAM_CTP_CHK_TOL</td><td>此参数指定表面轮廓检查表面公差</td><td>UF_PARAM_type_double_length</td><td>表面轮廓检查表面公差</td><td><prefix>_surface_contour_check_surface_tolerance</td><td>实数</td><td>292</td></tr><tr><td>UF_PARAM_TLAXIS_PERP_VEC</td><td>此参数指定这些刀具轴模式的参考向量：<br>UF_PARAM_tlaxis_type_away_from_line<br>UF_PARAM_tlaxis_type_toward_line<br>UF_PARAM_tlaxis_type_4axis_normal_to_part<br>UF_PARAM_tlaxis_type_4axis_normal_to_drive<br>UF_PARAM_tlaxis_type_4axis_relative_to_part<br>UF_PARAM_tlaxis_type_4axis_relative_to_drive<br>UF_PARAM_tlaxis_type_dual4axis_relative_to_part<br>UF_PARAM_tlaxis_type_dual4axis_relative_to_drive</td><td>UF_PARAM_type_3d</td><td>表面轮廓垂直向量</td><td><prefix>_surface_contour_perpto_vector</td><td>实数数组</td><td>295</td></tr><tr><td>UF_PARAM_TLAXIS_DUAL_VECS</td><td>此参数指定这些刀具轴模式的第二个参考向量：<br>UF_PARAM_tlaxis_type_dual4axis_relative_to_part<br>UF_PARAM_tlaxis_type_dual4axis_relative_to_drive</td><td>UF_PARAM_type_3d</td><td>表面轮廓双垂直向量</td><td><prefix>_surface_contour_dual_perpto_vector</td><td>实数数组</td><td>296</td></tr><tr><td>UF_PARAM_AVOIDANCE</td><td>此参数指定当处理器检测到检查表面的 gouge 时应采取的操作</td><td>UF_PARAM_type_int</td><td>避免</td><td><prefix>_surface_contour_check_surface_avoidance_action</td><td>UF_PARAM_avoid_type_t</td><td>297</td></tr><tr><td>UF_PARAM_CONVEX_CORNER</td><td>当凸角扩展启用时，此参数指定两个表面彼此形成的最大角度，以便处理器扩展角</td><td>UF_PARAM_type_double</td><td>表面轮廓凸角扩展角度</td><td><prefix>_surface_contour_convex_corner_extension_angle</td><td>角度在 0 到 180 度之间</td><td>298</td></tr><tr><td>UF_PARAM_CONVEX_TAX_VAR</td><td>当凸角提升启用时，此参数指定刀具轴向量的最小变化，以导致角处的提升</td><td>UF_PARAM_type_double</td><td>表面轮廓凸角提升角度</td><td><prefix>_surface_contour_convex_corner_lift_angle</td><td>角度在 0 到 180 度之间</td><td>299</td></tr><tr><td>UF_PARAM_CUT_METHOD</td><td>此参数指定区域的切削模式</td><td>UF_PARAM_type_int</td><td>切削方法</td><td><prefix>_cut_method</td><td>UF_PARAM_cut_method_t</td><td>300</td></tr><tr><td>UF_PARAM_PATTERN_SECONDARY</td><td>此参数指定在使用“跟随部分”切削方法切割区域时如何遍历开放路径</td><td>UF_PARAM_type_int</td><td>切削模式次要</td><td><prefix>_cut_pattern_secondary</td><td>UF_PARAM_pattern_secondary_t</td><td>302</td></tr><tr><td>UF_PARAM_CUT_LEVEL_ORDER</td><td>此参数指定切削层的切削顺序。切削顺序可以是层优先或深度优先</td><td>UF_PARAM_type_int</td><td>切削层顺序</td><td><prefix>_cut_level_order</td><td>UF_PARAM_cut_level_order_t</td><td>303</td></tr><tr><td>UF_PARAM_TRANSFER_METHOD</td><td>此参数指定刀具在转移移动期间将缩回的级别</td><td>UF_PARAM_type_int</td><td>区域转移方法</td><td><prefix>_region_transfer_method</td><td>UF_PARAM_transfer_method_t</td><td>304</td></tr><tr><td>UF_PARAM_DISP_REGION_STATUS</td><td>此参数指定在每个切削层显示区域的状态</td><td>UF_PARAM_type_int</td><td>显示区域状态</td><td><prefix>_display_region_status</td><td>UF_PARAM_disp_region_status_t</td><td>307</td></tr><tr><td>UF_PARAM_DISP_REGION_PAUSE_STATUS</td><td>此参数指定在处理每个区域后或显示切削区域后是否暂停</td><td>UF_PARAM_type_int</td><td>区域暂停状态</td><td><prefix>_region_pause_status</td><td>UF_PARAM_disp_region_pause_status_t</td><td>308</td></tr><tr><td>UF_PARAM_FLOWCUT_MODE</td><td>定义流切模式</td><td>UF_PARAM_type_int</td><td>流切模式</td><td><prefix>_flow_cut_mode</td><td>UF_PARAM_fcut_mode_t</td><td>418</td></tr><tr><td>UF_PARAM_FLOWCUT_OVERLAP_DIST</td><td>流切参考刀具直径沿切线表面定义的扩展区域的宽度</td><td>UF_PARAM_type_double_length</td><td>流切重叠距离</td><td><prefix>_flow_cut_overlap_distance</td><td>正的 UF_PARAM_type_double_length</td><td>419</td></tr><tr><td>UF_PARAM_OFFSETS_NUM</td><td>定义偏移通道的数量</td><td>UF_PARAM_type_int</td><td>偏移数量</td><td><prefix>_offsets_number</td><td>0 或正的 UF_PARAM_type_int</td><td>420</td></tr><tr><td>UF_PARAM_SEQUENCE_OPT</td><td>定义切割通道的顺序</td><td>UF_PARAM_type_int</td><td>顺序选项</td><td><prefix>_sequence_option</td><td>UF_PARAM_sequence_opt_t</td><td>421</td></tr><tr><td>UF_PARAM_STEEP_CUT_DIR</td><td>定义通过陡峭区域的切割方向</td><td>UF_PARAM_type_int</td><td>陡峭切割方向</td><td><prefix>_steep_cut_directin</td><td>UF_PARAM_steep_cut_dir_t</td><td>423</td></tr><tr><td>UF_PARAM_PLUNGE_DIRECTION</td><td>定义在钻孔铣削中，轮廓图案的切入方向</td><td>UF_PARAM_type_int</td><td>切入方向</td><td><prefix>_plunge_direction</td><td>UF_PARAM_plunge_direction_t</td><td>427</td></tr><tr><td>UF_PARAM_RET_AUTO_ANGLE</td><td>定义在钻孔铣削中，自动退刀的角度（以度为单位）</td><td>UF_PARAM_type_double</td><td>自动退刀角度</td><td><prefix>_retract_out_angle</td><td>非负的 UF_PARAM_type_double</td><td>428</td></tr><tr><td>UF_PARAM_MAX_CUT_WIDTH_TYPE</td><td>定义最大切削宽度的类型</td><td>UF_PARAM_type_int</td><td>最大切削宽度类型</td><td><prefix>_max_cut_width_type</td><td>UF_PARAM_max_cut_width_type_t</td><td>429</td></tr><tr><td>UF_PARAM_MAX_CUT_WIDTH_DIST</td><td>定义最大切削宽度的距离值（当最大切削宽度类型为距离时使用）</td><td>UF_PARAM_type_double_length</td><td>最大切削宽度距离</td><td><prefix>_max_cut_width_distance</td><td>正的 UF_PARAM_type_double_length</td><td>430</td></tr><tr><td>UF_PARAM_MAX_CUT_WIDTH_PERCENT</td><td>定义最大切削宽度的百分比值（当最大切削宽度类型为百分比刀具直径时使用）</td><td>UF_PARAM_type_double</td><td>最大切削宽度百分比</td><td><prefix>_max_cut_width_percent</td><td>正的 UF_PARAM_type_double</td><td>431</td></tr><tr><td>UF_PARAM_STEP_AHEAD_TYPE</td><td>定义步进类型</td><td>UF_PARAM_type_int</td><td>步进类型</td><td><prefix>_step_ahead_type</td><td>UF_PARAM_step_ahead_type_t</td><td>432</td></tr><tr><td>UF_PARAM_STEP_AHEAD_DIST</td><td>定义步进距离（当步进类型为距离时使用）</td><td>UF_PARAM_type_double_length</td><td>步进距离</td><td><prefix>_step_ahead_distance</td><td>正的 UF_PARAM_type_double_length</td><td>433</td></tr><tr><td>UF_PARAM_STEP_AHEAD_PERCENT</td><td>定义步进百分比（当步进类型为百分比刀具直径时使用）</td><td>UF_PARAM_type_double</td><td>步进百分比</td><td><prefix>_step_ahead_percent</td><td>正的 UF_PARAM_type_double</td><td>434</td></tr><tr><td>UF_PARAM_TROCHOID_PATH_STEPOVER_TYPE</td><td>定义 trochoidal 向外切削方法的路径步长类型</td><td>UF_PARAM_type_int</td><td>Trochoidal 路径步长类型</td><td><prefix>_trochoidal_path_stepover_type</td><td>UF_PARAM_trochoid_path_stepover_type_t</td><td>450</td></tr><tr><td>UF_PARAM_TROCHOID_PATH_STEPOVER_DIST</td><td>定义 trochoidal 向外切削方法的路径步长距离（当路径步长类型为距离时使用）</td><td>UF_PARAM_type_double_length</td><td>Trochoidal 路径步长距离</td><td><prefix>_trochoidal_path_stepover_distance</td><td>非负的 UF_PARAM_type_double_length</td><td>451</td></tr><tr><td>UF_PARAM_TROCHOID_PATH_STEPOVER_PERCENT</td><td>定义 trochoidal 向外切削方法的路径步长百分比（当路径步长类型为百分比刀具直径时使用）</td><td>UF_PARAM_type_double</td><td>Trochoidal 路径步长百分比</td><td><prefix>_trochoidal_path_stepover_percent</td><td>非负的 UF_PARAM_type_double</td><td>452</td></tr><tr><td>UF_PARAM_TOOL_EMBEDDING_LIMIT_PERCENT</td><td>定义工具嵌入限制的百分比（用于 trochoidal 向外切削方法和圆角修整）</td><td>UF_PARAM_type_double</td><td>工具嵌入限制百分比</td><td><prefix>_tool_embedding_limit</td><td>在 [100, 300] 范围内</td><td>453</td></tr><tr><td>UF_PARAM_TL_DIAMETER</td><td>指定刀具的直径</td><td>UF_PARAM_type_length</td><td>刀具直径</td><td><prefix>_tool_diameter</td><td>适用于刀具类型 UF_CUTTER_TYPE_MILL、UF_CUTTER_TYPE_DRILL、UF_CUTTER_TYPE_BARREL、UF_CUTTER_TYPE_T</td><td>1000</td></tr><tr><td>UF_PARAM_TL_HEIGHT</td><td>指定刀具的实际高度</td><td>UF_PARAM_type_length</td><td>刀具长度</td><td><prefix>_tool_length</td><td>适用于刀具类型 UF_CUTTER_TYPE_MILL、UF_CUTTER_TYPE_DRILL、UF_CUTTER_TYPE_BARREL、UF_CUTTER_TYPE_T</td><td>1001</td></tr><tr><td>UF_PARAM_TL_FLUTE_LN</td><td>指定刀具的 flute 长度（flute 长度是指从开始到结束齿的测量距离，不一定表示切削长度）</td><td>UF_PARAM_type_length</td><td>刀具 flute 长度</td><td><prefix>_tool_flute_length</td><td>适用于刀具类型 UF_CUTTER_TYPE_MILL、UF_CUTTER_TYPE_DRILL、UF_CUTTER_TYPE_BARREL、UF_CUTTER_TYPE_T</td><td>1002</td></tr><tr><td>UF_PARAM_TL_TAPER_ANG</td><td>指定刀具的锥度角度（如果锥度角度为正，则刀具顶部比底部宽；如果为负，则刀具底部比顶部宽；如果为零，则刀具侧面与刀具轴线平行）</td><td>UF_PARAM_type_double</td><td>刀具锥度角度</td><td><prefix>_tool_taper_angle</td><td>角度以弧度测量，适用于刀具类型 UF_CUTTER_TYPE_MILL</td><td>1003</td></tr><tr><td>UF_PARAM_TL_TIP_ANG</td><td>指定刀具尖端的角度（对于铣刀，这是刀尖处两个边缘相交形成的非负角度；对于车削刀具，它定义了凹槽刀具尖端的方向）</td><td>UF_PARAM_type_double</td><td>刀具尖端角度</td><td><prefix>_tool_tip_angle</td><td>角度以弧度测量，适用于刀具类型 UF_CUTTER_TYPE_MILL、UF_CUTTER_TYPE_GROOVE</td><td>1004</td></tr><tr><td>UF_PARAM_TL_COR1_RAD</td><td>指定刀具下圆角的半径</td><td>UF_PARAM_type_double_length</td><td>刀具下圆角半径</td><td><prefix>_tool_corner1_radius</td><td>适用于刀具类型 UF_CUTTER_TYPE_MILL、UF_CUTTER_TYPE_DRILL</td><td>1005</td></tr><tr><td>UF_PARAM_TL_XCEN_COR1</td><td>是刀具下圆角半径中心的水平距离（可以为正、负或零）的一部分定义</td><td>UF_PARAM_type_double_length</td><td>刀具下圆角中心 X</td><td><prefix>_tool_corner1_center_x</td><td>适用于刀具子类型 UF_CUTTER_SUBTYPE_MILL_7、UF_CUTTER_SUBTYPE_MILL_10</td><td>1006</td></tr><tr><td>UF_PARAM_TL_YCEN_COR1</td><td>是刀具下圆角半径中心的垂直距离（必须为非负）的一部分定义</td><td>UF_PARAM_type_double_length</td><td>刀具下圆角中心 Y</td><td><prefix>_tool_corner1_center_y</td><td>适用于刀具子类型 UF_CUTTER_SUBTYPE_MILL_7、UF_CUTTER_SUBTYPE_MILL_10</td><td>1007</td></tr><tr><td>UF_PARAM_TL_COR2_RAD</td><td>指定刀具上圆角的半径（仅适用于刀具子类型 UF_CUTTER_SUBTYPE_MILL_10）</td><td>UF_PARAM_type_double_length</td><td>刀具上圆角半径</td><td><prefix>_tool_corner2_radius</td><td>适用于刀具子类型 UF_CUTTER_SUBTYPE_MILL_10</td><td>1008</td></tr><tr><td>UF_PARAM_TL_XCEN_COR2</td><td>是刀具上圆角半径中心的水平距离（可以为正、负或零）的一部分定义（仅适用于刀具子类型 UF_CUTTER_SUBTYPE_MILL_10）</td><td>UF_PARAM_type_double_length</td><td>刀具上圆角中心 X</td><td><prefix>_tool_corner2_center_x</td><td>适用于刀具子类型 UF_CUTTER_SUBTYPE_MILL_10</td><td>1009</td></tr><tr><td>UF_PARAM_TL_YCEN_COR2</td><td>是刀具上圆角半径中心的垂直距离（必须为非负）的一部分定义（仅适用于刀具子类型 UF_CUTTER_SUBTYPE_MILL_10）</td><td>UF_PARAM_type_double_length</td><td>刀具上圆角中心 Y</td><td><prefix>_tool_corner2_center_y</td><td>适用于刀具子类型 UF_CUTTER_SUBTYPE_MILL_10</td><td>1010</td></tr><tr><td>UF_PARAM_TL_BARREL_RAD</td><td>指定刀具 barrel 的半径（仅适用于刀具类型 UF_CUTTER_TYPE_BARREL）</td><td>UF_PARAM_type_double_length</td><td>刀具 barrel 半径</td><td><prefix>_tool_barrel_radius</td><td>适用于刀具类型 UF_CUTTER_TYPE_BARREL</td><td>1011</td></tr><tr><td>UF_PARAM_TL_SHANK_DIA</td><td>指定刀具 shank 的直径（适用于刀具类型 UF_CUTTER_TYPE_BARREL 和 UF_CUTTER_TYPE_T）</td><td>UF_PARAM_type_double_length</td><td>刀具 shank 直径</td><td><prefix>_tool_shank_diameter</td><td>适用于刀具类型 UF_CUTTER_TYPE_BARREL、UF_CUTTER_TYPE_T</td><td>1012</td></tr><tr><td>UF_PARAM_TL_LOW_COR_RAD</td><td>指定刀具的下圆角半径（适用于刀具类型 UF_CUTTER_TYPE_BARREL 和 UF_CUTTER_TYPE_T）</td><td>UF_PARAM_type_double_length</td><td>刀具下圆角半径</td><td><prefix>_tool_lower_corner_radius</td><td>适用于刀具类型 UF_CUTTER_TYPE_BARREL、UF_CUTTER_TYPE_T</td><td>1013</td></tr><tr><td>UF_PARAM_TL_UP_COR_RAD</td><td>指定刀具的上圆角半径（适用于刀具类型 UF_CUTTER_TYPE_BARREL 和 UF_CUTTER_TYPE_T）</td><td>UF_PARAM_type_double_length</td><td>刀具上圆角半径</td><td><prefix>_tool_upper_corner_radius</td><td>适用于刀具类型 UF_CUTTER_TYPE_BARREL、UF_CUTTER_TYPE_T</td><td>1014</td></tr><tr><td>UF_PARAM_TL_YCEN_BARREL</td><td>指定刀具 barrel 外边缘中心的高度（仅适用于刀具类型 UF_CUTTER_TYPE_BARREL）</td><td>UF_PARAM_type_double_length</td><td>刀具 barrel 中心 Y</td><td><prefix>_tool_barrel_center_y</td><td>适用于刀具类型 UF_CUTTER_TYPE_BARREL</td><td>1015</td></tr><tr><td>UF_PARAM_TL_POINT_ANG</td><td>指定刀具的点角度（仅适用于刀具类型 UF_CUTTER_TYPE_DRILL）</td><td>UF_PARAM_type_double</td><td>刀具点角度</td><td><prefix>_tool_point_angle</td><td>角度以弧度测量，适用于刀具类型 UF_CUTTER_TYPE_DRILL</td><td>1016</td></tr><tr><td>UF_PARAM_TL_NUM_FLUTES</td><td>指定刀具的 flute 数量</td><td>UF_PARAM_type_int</td><td>刀具 flute 数量</td><td><prefix>_tool_flutes_number</td><td>适用于刀具类型 UF_CUTTER_TYPE_MILL、UF_CUTTER_TYPE_DRILL、UF_CUTTER_TYPE_BARREL、UF_CUTTER_TYPE_T</td><td>1017</td></tr><tr><td>UF_PARAM_TL_RELIEF_ANG</td><td>指定由刀具切削刃远离切削边缘的斜坡引起的角度（以弧度为单位）</td><td>UF_PARAM_type_double</td><td>刀具后角</td><td><prefix>_tool_relief_angle</td><td>适用于刀具类型 UF_CUTTER_TYPE_MILL</td><td>1019</td></tr><tr><td>UF_PARAM_TL_HOLDER_WIDTH</td><td>指定按钮刀具 holder 的宽度</td><td>UF_PARAM_type_double_length</td><td>刀具 holder 宽度</td><td><prefix>_tool_holder_width</td><td>适用于刀具类型 UF_CUTTER_TYPE_MILL</td><td>1021</td></tr><tr><td>UF_PARAM_TL_INSERT_WIDTH</td><td>描述车削中标准、环形接头和用户定义刀具的插入宽度（对于槽加工和螺纹加工，该参数仅在标准和梯形螺纹插入时出现）</td><td>UF_PARAM_type_double_length</td><td>刀具插入宽度</td><td><prefix>_tool_insert_width</td><td>适用于刀具类型 UF_CUTTER_TYPE_GROOVE、UF_CUTTER_TYPE_THREAD、UF_CUTTER_TYPE_FORM（标准、环形接头和用户定义刀具）</td><td>1022</td></tr><tr><td>UF_PARAM_TL_NOSE_WIDTH</td><td>描述车削中环形接头凹槽刀具或梯形螺纹刀具的鼻尖宽度（它表示刀具切削表面的宽度，对于标准凹槽刀具、全鼻半径凹槽刀具或用户定义凹槽刀具，该参数不适用）</td><td>UF_PARAM_type_double_length</td><td>刀具鼻尖宽度</td><td><prefix>_tool_nose_width</td><td>适用于刀具类型 UF_CUTTER_TYPE_GROOVE（环形接头）、UF_CUTTER_TYPE_THREAD（梯形）</td><td>1023</td></tr><tr><td>UF_PARAM_TL_ORIENTATION</td><td>指定车削刀具插入的角度（弧度）</td><td>UF_PARAM_type_double</td><td>刀具方向</td><td><prefix>_tool_orientation</td><td>适用于刀具类型 UF_CUTTER_TYPE_TURN、UF_CUTTER_TYPE_THREAD、UF_CUTTER_TYPE_GROOVE、UF_CUTTER_TYPE_FORM</td><td>1025</td></tr><tr><td>UF_PARAM_TL_INSERT_ANG</td><td>指定车削中 Form 刀具插入的极角（弧度）</td><td>UF_PARAM_type_double</td><td>刀具插入角度</td><td><prefix>_tool_insert_angle</td><td>适用于刀具类型 UF_CUTTER_TYPE_FORM</td><td>1029</td></tr><tr><td>UF_PARAM_TL_LEFT_COR_RAD</td><td>定义槽加工不对称刀具的左圆角半径</td><td>UF_PARAM_type_double_length</td><td>刀具左圆角半径</td><td><prefix>_tool_left_corner_radius</td><td>适用于刀具类型 UF_CUTTER_TYPE_GROOVE、UF_CUTTER_TYPE_THREAD</td><td>1030</td></tr><tr><td>UF_PARAM_TL_RIGHT_COR_RAD</td><td>定义槽加工不对称刀具的右圆角半径</td><td>UF_PARAM_type_double_length</td><td>刀具右圆角半径</td><td><prefix>_right_corner_radius</td><td>适用于刀具类型 UF_CUTTER_TYPE_GROOVE、UF_CUTTER_TYPE_THREAD</td><td>1031</td></tr><tr><td>UF_PARAM_TL_INSERT_LENGTH</td><td>指定槽加工和螺纹加工刀具插入的总长度</td><td>UF_PARAM_type_double_length</td><td>刀具插入长度</td><td><prefix>_tool_insert_length</td><td>适用于刀具类型 UF_CUTTER_TYPE_GROOVE、UF_CUTTER_TYPE_THREAD</td><td>1032</td></tr><tr><td>UF_PARAM_TL_MAX_DEPTH_TOG</td><td>必须激活此索引才能使用参数 UF_PARAM_TL_MAX_DEPTH</td><td>UF_PARAM_type_int</td><td>刀具最大深度切换</td><td><prefix>_tool_max_depth_toggle</td><td>0 &#x3D; 不激活，1 &#x3D; 激活</td><td>1033</td></tr><tr><td>UF_PARAM_TL_X_OFFSET_TOG</td><td>必须激活此索引才能使用参数 UF_PARAM_TL_X_OFFSET</td><td>UF_PARAM_type_int</td><td>刀具 X 偏移切换</td><td><prefix>_tool_x_offset_toggle</td><td>0 &#x3D; 不激活，1 &#x3D; 激活</td><td>1034</td></tr><tr><td>UF_PARAM_TL_Y_OFFSET_TOG</td><td>必须激活此索引才能使用参数 UF_PARAM_TL_Y_OFFSET</td><td>UF_PARAM_type_int</td><td>刀具 Y 偏移切换</td><td><prefix>_tool_y_offset_toggle</td><td>0 &#x3D; 不激活，1 &#x3D; 激活</td><td>1035</td></tr><tr><td>UF_PARAM_TL_THICKNESS</td><td>指定车削刀具插入的厚度</td><td>UF_PARAM_type_double_length</td><td>刀具厚度</td><td><prefix>_tool_thickness</td><td>适用于刀具类型 UF_CUTTER_TYPE_TURN、UF_CUTTER_TYPE_THREAD、UF_CUTTER_TYPE_GROOVE、UF_CUTTER_TYPE_FORM</td><td>1036</td></tr><tr><td>UF_PARAM_TL_ADJ_REG_TOG</td><td>必须激活此索引才能使用参数 UF_PARAM_TL_ADJ_REG</td><td>UF_PARAM_type_int</td><td>刀具调整寄存器切换</td><td><prefix>_tool_adjust_register_toggle</td><td>0 &#x3D; 不激活，1 &#x3D; 激活</td><td>1037</td></tr><tr><td>UF_PARAM_TL_CUTCOM_REG_TOG</td><td>必须激活此索引才能使用参数 UF_PARAM_TL_CUTCOM_REG</td><td>UF_PARAM_type_int</td><td>刀具 Cutcom 寄存器切换</td><td><prefix>_tool_cutcom_reg_toggle</td><td>0 &#x3D; 不激活，1 &#x3D; 激活</td><td>1038</td></tr><tr><td>UF_PARAM_TL_MANUAL_TOOLCHANGE</td><td>该索引是刀具是否可以手动加载的状态</td><td>UF_PARAM_type_logical</td><td>刀具手动换刀</td><td><prefix>_tool_manual_toolchange</td><td>1 或 0</td><td>1155</td></tr><tr><td>UF_PARAM_TL_HOLDER_NUMBER</td><td>该索引是刀具加载的刀架号码</td><td>UF_PARAM_type_int</td><td>刀具刀架号码</td><td><prefix>_tool_holder_num</td><td>所有</td><td>1156</td></tr><tr><td>UF_PARAM_TL_HEAD_DESIGN</td><td>该索引是车削刀具头部的类型指定</td><td>UF_PARAM_type_int</td><td>刀具头部设计</td><td><prefix>_tool_head_designation</td><td>所有</td><td>1157</td></tr><tr><td>UF_PARAM_TL_TEXT</td><td>该索引用于刀具的附加参数</td><td>UF_PARAM_type_string</td><td>刀具文本</td><td><prefix>_tool_text</td><td>所有</td><td>1158</td></tr><tr><td>UF_PARAM_TL_NUMBER_TOG</td><td>该索引用于激活或禁用刀具号码</td><td>UF_PARAM_type_int</td><td>刀具号码切换</td><td><prefix>_tool_number_toggle</td><td>0 &#x3D; 不激活，1 &#x3D; 激活</td><td>1159</td></tr><tr><td>UF_PARAM_TL_Z_OFFSET_TOG</td><td>必须激活此索引才能使用参数 UF_PARAM_TL_Z_OFFSET</td><td>UF_PARAM</td><td></td><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;uf_param_indices.h&lt;/code&gt;文件，包含UF CAM中可用参数索引的列表。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>国际化-GeoIP根据客户端地理位置，展示不同的内容</title>
    <link href="http://notes.caxtoolkit.com/post/1e0e0020.html"/>
    <id>http://notes.caxtoolkit.com/post/1e0e0020.html</id>
    <published>2024-08-09T08:46:56.000Z</published>
    <updated>2025-08-09T14:42:20.856Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是-GeoIP？"><a href="#什么是-GeoIP？" class="headerlink" title="什么是 GeoIP？"></a>什么是 GeoIP？</h2><p>通过在数据库中将地理位置和 IP 地址相互映射，软件程序便可以使用 IP 地址来确定其对应的地理位置，其中包括国家&#x2F;地区、州&#x2F;省、城市、邮政编码、纬度&#x2F;经度、ISP、区号和其他信息。</p><span id="more"></span><h2 id="更改源"><a href="#更改源" class="headerlink" title="更改源"></a>更改源</h2><h3 id="查看系统版本"><a href="#查看系统版本" class="headerlink" title="查看系统版本"></a>查看系统版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$cat /etc/os-release</span><br><span class="line"></span><br><span class="line">PRETTY_NAME=&quot;Debian GNU/Linux 11 (bullseye)&quot;</span><br><span class="line">NAME=&quot;Debian GNU/Linux&quot;</span><br><span class="line">VERSION_ID=&quot;11&quot;</span><br><span class="line">VERSION=&quot;11 (bullseye)&quot;</span><br><span class="line">VERSION_CODENAME=bullseye</span><br><span class="line">ID=debian</span><br><span class="line">HOME_URL=&quot;https://www.debian.org/&quot;</span><br><span class="line">SUPPORT_URL=&quot;https://www.debian.org/support&quot;</span><br><span class="line">BUG_REPORT_URL=&quot;https://bugs.debian.org/&quot;</span><br></pre></td></tr></table></figure><h3 id="系统源备份"><a href="#系统源备份" class="headerlink" title="系统源备份"></a>系统源备份</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.back</span><br></pre></td></tr></table></figure><h3 id="更改系统对应版本源（清华）"><a href="#更改系统对应版本源（清华）" class="headerlink" title="更改系统对应版本源（清华）"></a>更改系统对应版本源（清华）</h3><p>在 <code>/etc/apt/sources.list</code> 文件中，将所有的 deb 和 deb-src 行替换为清华大学的源地址。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span><br><span class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span><br></pre></td></tr></table></figure><p>注意：<code>bullseye</code> 是 Debian 11 的代号，如果你使用的是其他版本的 Debian，需要相应地更改代号。</p><h3 id="更新软件列表"><a href="#更新软件列表" class="headerlink" title="更新软件列表"></a>更新软件列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><h3 id="升级软件包"><a href="#升级软件包" class="headerlink" title="升级软件包"></a>升级软件包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><h3 id="升级系统依赖"><a href="#升级系统依赖" class="headerlink" title="升级系统依赖"></a>升级系统依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt dist-upgrade</span><br></pre></td></tr></table></figure><h2 id="Nginx-GeoIP2"><a href="#Nginx-GeoIP2" class="headerlink" title="Nginx + GeoIP2"></a>Nginx + GeoIP2</h2><h3 id="安装依赖（libmaxminddb）"><a href="#安装依赖（libmaxminddb）" class="headerlink" title="安装依赖（libmaxminddb）"></a>安装依赖（libmaxminddb）</h3><p><a href="https://github.com/maxmind/libmaxminddb">https://github.com/maxmind/libmaxminddb</a></p><p>查看依赖是否存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$dpkg -l | grep libmaxminddb</span><br><span class="line"></span><br><span class="line">ii  libmaxminddb0:amd64            1.5.2-1                        amd64        IP geolocation database library</span><br></pre></td></tr></table></figure><h3 id="安装-NGINX-GeoIP2-模块"><a href="#安装-NGINX-GeoIP2-模块" class="headerlink" title="安装 NGINX GeoIP2 模块"></a>安装 NGINX GeoIP2 模块</h3><p><a href="https://github.com/leev/ngx_http_geoip2_module?tab=readme-ov-file">https://github.com/leev/ngx_http_geoip2_module?tab&#x3D;readme-ov-file</a></p><h3 id="下载GeoIP2数据库"><a href="#下载GeoIP2数据库" class="headerlink" title="下载GeoIP2数据库"></a>下载GeoIP2数据库</h3><p><a href="https://www.maxmind.com/en/accounts/1049007/geoip/downloads">https://www.maxmind.com/en/accounts/1049007/geoip/downloads</a><br><img src="https://image.camcad.cn//vscode/20240818145344.png" alt="20240818145344"></p><h3 id="配置NGINX示例"><a href="#配置NGINX示例" class="headerlink" title="配置NGINX示例"></a>配置NGINX示例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line">load_module /usr/lib/nginx/modules/ngx_http_geoip2_module.so;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">        worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">        geoip2 /usr/share/GeoIP/GeoLite2-Country.mmdb &#123;</span><br><span class="line">                auto_reload 5m;</span><br><span class="line">                $geoip2_metadata_country_build metadata build_epoch;</span><br><span class="line">                $geoip2_data_country_code default=US source=$remote_addr country iso_code;</span><br><span class="line">                $geoip2_data_country_name country names en;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        geoip2 /usr/share/GeoIP/GeoLite2-City.mmdb &#123;</span><br><span class="line">                $geoip2_data_city_name default=unknown city names en;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        server &#123;</span><br><span class="line">                listen 80;</span><br><span class="line">                location / &#123;</span><br><span class="line">                        return 200 &quot;IPv4=$remote_addr, country_code=$geoip2_data_country_code, country_name=$geoip2_data_country_name, city_name=$geoip2_data_city_name&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上配置访问结果：<code>IPv4=167.114.111.92, country_code=CA, country_name=Canada, city_name=Montreal</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">load_module /usr/lib/nginx/modules/ngx_http_geoip2_module.so;</span><br><span class="line">worker_processes  2;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    gzip  on;</span><br><span class="line"></span><br><span class="line">    geoip2 /usr/share/GeoIP/GeoLite2-City.mmdb &#123;</span><br><span class="line">            $geoip2_data_country_code default=US source=$remote_addr country iso_code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">            listen       80;</span><br><span class="line">            server_name www.domainname.com;</span><br><span class="line"></span><br><span class="line">            location / &#123;</span><br><span class="line">                    rewrite ^/(.*) https://www.domainname.com/$1 permanent;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">            listen 443 ssl;</span><br><span class="line">            server_name www.domainname.com;</span><br><span class="line"></span><br><span class="line">            ssl_certificate /path/domainname.com.pem;</span><br><span class="line">            ssl_certificate_key /path/domainname.com.key;</span><br><span class="line">            ssl_session_cache shared:SSL:1m;</span><br><span class="line">            ssl_session_timeout 5m;</span><br><span class="line">            keepalive_timeout 70;</span><br><span class="line"></span><br><span class="line">            location / &#123;</span><br><span class="line">                    set $root_path html/www.domainname.com/en-US;</span><br><span class="line"></span><br><span class="line">                    if ($geoip2_data_country_code ~* &quot;CN|HK|TW&quot;) &#123;</span><br><span class="line">                            set $root_path html/www.domainname.com/zh-CN;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    root $root_path;</span><br><span class="line">                    index index.html index.htm;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-geoipupdate-自动更新-GeoIP-数据库"><a href="#使用-geoipupdate-自动更新-GeoIP-数据库" class="headerlink" title="使用 geoipupdate 自动更新 GeoIP 数据库"></a>使用 geoipupdate 自动更新 GeoIP 数据库</h3><h4 id="生成许可证密钥"><a href="#生成许可证密钥" class="headerlink" title="生成许可证密钥"></a>生成许可证密钥</h4><p>在账户的 <code>管理许可证密钥(Manage License Keys)</code> 页面中，我们可以生成个人的许可证密钥。许可证密钥可以用来获取数据库的永久下载链接，也可以授权 <code>geoipupdate</code> 程序自动更新数据库文件。</p><p><img src="https://image.camcad.cn//vscode/20240818150050.png" alt="20240818150050"></p><h4 id="安装和配置-GeoIP-更新程序"><a href="#安装和配置-GeoIP-更新程序" class="headerlink" title="安装和配置 GeoIP 更新程序"></a>安装和配置 GeoIP 更新程序</h4><p>在生成了 License key 之后，我们就可以使用永久链接来下载 GeoLite2 数据库文件了，例如下载 GeoLite2-City 数据库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export YOUR_LICENSE_KEY=O2Z1dEfuSBsRAk</span><br><span class="line">wget https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&amp;license_key=$YOUR_LICENSE_KEY&amp;suffix=tar.gz</span><br></pre></td></tr></table></figure><p>这种方法虽然每次能下载到最新版本的 GeoLite2 数据库文件，但是每次数据库更新都依靠手动下载必然是非常麻烦的，所以我们可以使用 MaxMind 提供的官方 GeoIP 数据库更新程序 <code>geoipupdate</code>。</p><h4 id="安装-GeoIP-更新程序"><a href="#安装-GeoIP-更新程序" class="headerlink" title="安装 GeoIP 更新程序"></a>安装 GeoIP 更新程序</h4><p>GeoIP 更新程序 <code>geoipupdate</code> 可以在 <a href="https://github.com/maxmind/geoipupdate">Github</a> 下载。如果使用的是 Ubuntu 系统，我们还可以添加 MaxMind 提供的个人软件包仓库（英文 Personal Package Archives，简称 PPA）到软件包管理器中。输入以下指令将 PPA 添加到软件包管理器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:maxmind/ppa</span><br></pre></td></tr></table></figure><p>然后通过输入以下指令来安装 <code>geoipupdate</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install geoipupdate</span><br></pre></td></tr></table></figure><h4 id="配置-GeoIP-更新程序"><a href="#配置-GeoIP-更新程序" class="headerlink" title="配置 GeoIP 更新程序"></a>配置 GeoIP 更新程序</h4><p>用文本编辑器打开 <code>/etc/GeoIP.conf</code>，把先前生成的许可证密钥对应的配置文件内容粘贴进去，或者手动输入 <code>AccountID、LicenseKey</code> 和 <code>EditionIDs</code>。剩余部分保持默认。</p><h4 id="运行-GeoIP-更新程序"><a href="#运行-GeoIP-更新程序" class="headerlink" title="运行 GeoIP 更新程序"></a>运行 GeoIP 更新程序</h4><p>运行 <code>geoipupdate</code> 指令，程序便会下载最新的 <code>GeoIP</code> 数据库文件到 <code>/usr/share/GeoIP</code> 目录。</p><h4 id="自动更新-GeoIP-数据库"><a href="#自动更新-GeoIP-数据库" class="headerlink" title="自动更新 GeoIP 数据库"></a>自动更新 GeoIP 数据库</h4><p>如果要自动下载更新最新的 GeoIP 数据库文件，我们还需要添加计划任务。<br>首先在终端中输入以下指令编辑计划任务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo crontab -e</span><br></pre></td></tr></table></figure><p>在 crontab 中添加 geoipupdate 自动更新计划任务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">0 2 * * 3,6 /usr/bin/geoipupdate</span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line">* * * * * 执行命令</span><br><span class="line">- - - - -</span><br><span class="line">| | | | |</span><br><span class="line">| | | | +----- 星期几 (0 - 7) (星期天为0或7)</span><br><span class="line">| | | +------- 月份 (1 - 12)</span><br><span class="line">| | +--------- 日期 (1 - 31)</span><br><span class="line">| +----------- 小时 (0 - 23)</span><br><span class="line">+------------- 分钟 (0 - 59)</span><br><span class="line"></span><br><span class="line">0：这表示分钟字段。任务将在每小时的第 0 分钟（即整点）运行。</span><br><span class="line"></span><br><span class="line">2：这表示小时字段。任务将在凌晨 2 点运行。</span><br><span class="line"></span><br><span class="line">*：这表示日期字段。星号表示“每一天”。</span><br><span class="line"></span><br><span class="line">*：这表示月份字段。星号表示“每个月”。</span><br><span class="line"></span><br><span class="line">3,6：这表示星期字段。数字 3 和 6 分别对应星期三（3）和星期六（6）。</span><br></pre></td></tr></table></figure><p>重置<code>crontab</code>配置生成。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> /etc/init.d/cron reload</span><br><span class="line">sudo /etc/init.d/cron restart</span><br></pre></td></tr></table></figure><p>以上 crontab 作业将在每周三和周六的凌晨 2:00 运行 <code>/usr/bin/geoipupdate</code> 命令。</p><h2 id="通过http请求方式"><a href="#通过http请求方式" class="headerlink" title="通过http请求方式"></a>通过http请求方式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://ip-api.com/json/$USER_IP</span><br><span class="line"></span><br><span class="line">https://ip-api.com/json/123.234.158.6</span><br></pre></td></tr></table></figure><p>返回数据（成功）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;China&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;countryCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CN&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;region&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SH&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;regionName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Shanghai&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nonknow&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;zip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;417000&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span> <span class="number">66666.6253</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lon&quot;</span><span class="punctuation">:</span> <span class="number">88888.857</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timezone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Asia/Shanghai&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;isp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Chinanet&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;org&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Chinanet SH&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;as&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AS9515 CHINANET-BACKBONE&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123.234.158.6&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>返回数据（失败）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fail&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SSL unavailable for this endpoint, order a key at https://members.ip-api.com/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://vickey.fun/2022/04/17/using-geoipupdate-to-auto-update-maxmind-database">使用 geoipupdate 自动更新 GeoIP 数据库</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是-GeoIP？&quot;&gt;&lt;a href=&quot;#什么是-GeoIP？&quot; class=&quot;headerlink&quot; title=&quot;什么是 GeoIP？&quot;&gt;&lt;/a&gt;什么是 GeoIP？&lt;/h2&gt;&lt;p&gt;通过在数据库中将地理位置和 IP 地址相互映射，软件程序便可以使用 IP 地址来确定其对应的地理位置，其中包括国家&amp;#x2F;地区、州&amp;#x2F;省、城市、邮政编码、纬度&amp;#x2F;经度、ISP、区号和其他信息。&lt;/p&gt;</summary>
    
    
    
    <category term="辅助" scheme="http://notes.caxtoolkit.com/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="nginx" scheme="http://notes.caxtoolkit.com/tags/nginx/"/>
    
    <category term="GeoIP" scheme="http://notes.caxtoolkit.com/tags/GeoIP/"/>
    
  </entry>
  
  <entry>
    <title>Oracle Instant Client（即时客户端） 安装与配置</title>
    <link href="http://notes.caxtoolkit.com/post/cb4cbaac.html"/>
    <id>http://notes.caxtoolkit.com/post/cb4cbaac.html</id>
    <published>2024-08-01T11:24:53.000Z</published>
    <updated>2025-08-09T14:42:20.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>由于Oracle数据库版本11.2或更低版本，无法使用<code>python oracledb</code>瘦模式连接数据库，因此对于Oracle数据库低于11.2的版本需要安装Oracle客户端才能访问。<br><img src="https://image.camcad.cn//vscode/QQ_1722504815387.png" alt="QQ_1722504815387"></p><span id="more"></span><h2 id="安装Oracle客户端"><a href="#安装Oracle客户端" class="headerlink" title="安装Oracle客户端"></a>安装Oracle客户端</h2><h3 id="创建Oracle用户"><a href="#创建Oracle用户" class="headerlink" title="创建Oracle用户"></a>创建Oracle用户</h3><p><a href="https://profile.oracle.com/myprofile/account/create-account.jspx">https://profile.oracle.com/myprofile/account/create-account.jspx</a></p><p><img src="https://image.camcad.cn//vscode/QQ_1722482993805.png" alt="QQ_1722482993805"></p><h3 id="Oracle即时客户端下载"><a href="#Oracle即时客户端下载" class="headerlink" title="Oracle即时客户端下载"></a>Oracle即时客户端下载</h3><p><a href="https://www.oracle.com/database/technologies/instant-client/downloads.html">https://www.oracle.com/database/technologies/instant-client/downloads.html</a></p><p><img src="https://image.camcad.cn//vscode/QQ_1722482897351.png" alt="QQ_1722482897351"><br><img src="https://image.camcad.cn//vscode/QQ_1722482956715.png" alt="QQ_1722482956715"></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>1)把下载的<code>instantclient-basic-windows.x64-11.2.0.4.0.zip</code>压缩包解压，放到<code>D:\Program Files\instantclient_11_2</code>目录下。</li><li>2)在“环境变量”的“系统变量”中增加如下变量。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ORACLE_HOME = D:\Program Files\instantclient_11_2</span><br><span class="line">TNS_ADMIN = D:\Program Files\instantclient_11_2</span><br><span class="line">NLS_LANG = SIMPLIFIED CHINESE_CHINA.ZHS16GBK</span><br></pre></td></tr></table></figure><p>修改<code>Path</code>变量，在后面添加<code>D:\Program Files\instantclient_11_2</code>。</p><h3 id="新建tnsnames-ora文件"><a href="#新建tnsnames-ora文件" class="headerlink" title="新建tnsnames.ora文件"></a>新建<code>tnsnames.ora</code>文件</h3><p>在<code>D:\Program Files\instantclient_11_2</code>新建一个<code>tnsnames.ora</code>文件，增加自己的数据库别名配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ERP_PROD =</span><br><span class="line">(DESCRIPTION =</span><br><span class="line">(ADDRESS_LIST =</span><br><span class="line">(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.74.135)(PORT = 1521))</span><br><span class="line">)</span><br><span class="line">(CONNECT_DATA =</span><br><span class="line">(SERVER = DEDICATED)</span><br><span class="line">(SERVICE_NAME = emmet)</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>HOST：数据库所在服务器的IP地址。</li><li>PORT：数据库监听的端口号。</li><li>SERVICE_NAME：数据库服务器的实例名。</li></ul><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><ul><li>1)删除<code>ORACLE_HOME，TNS_ADMIN，NLS_LANG</code>三个变量；</li><li>2)修改<code>Path</code>变量，去掉<code>D:\Program Files\instantclient_11_2</code>目录；</li><li>3)删除<code>D:\Program Files\instantclient_11_2</code>目录。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;由于Oracle数据库版本11.2或更低版本，无法使用&lt;code&gt;python oracledb&lt;/code&gt;瘦模式连接数据库，因此对于Oracle数据库低于11.2的版本需要安装Oracle客户端才能访问。&lt;br&gt;&lt;img src=&quot;https://image.camcad.cn//vscode/QQ_1722504815387.png&quot; alt=&quot;QQ_1722504815387&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="辅助" scheme="http://notes.caxtoolkit.com/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="Oracle" scheme="http://notes.caxtoolkit.com/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-CAM自定义刀轨</title>
    <link href="http://notes.caxtoolkit.com/post/ecd2efa7.html"/>
    <id>http://notes.caxtoolkit.com/post/ecd2efa7.html</id>
    <published>2024-06-18T21:23:04.000Z</published>
    <updated>2025-08-09T14:42:20.825Z</updated>
    
    <content type="html"><![CDATA[<p>此段代码使用加工<code>udop</code>做为函数入口自定义刀轨。刀轨走径为矩形。<br><code>注: </code>motion_ptr-&gt;feed_value 的值为0时生成G00，非0时生成G01。</p><span id="more"></span><p>加工CAM的入口函数是udop,此入口函数和常用的UG二次开发入口函数ufusr并列，不需要在ufusr中调用，直接在ufusr所在的CPP文件中写入udop函数即可，或者将udop放在一单独的.c文件中，在ufusr所在的CPP文件中包含也可以。</p><h3 id="1、代码"><a href="#1、代码" class="headerlink" title="1、代码"></a>1、代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf_defs.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf_cam.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf_exit.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf_oper.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf_param.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf_path.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf_udop.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf_ui.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;NXOpen/CAM_CAMObject.hxx&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;NXOpen/CAM_Operation.hxx&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;NXOpen/CAM_OperationCollection.hxx&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;NXOpen/CAM_UserDefinedOpr.hxx&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;NXOpen/CAM_CAMSetup.hxx&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;NXOpen/Part.hxx&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;NXOpen/PartCollection.hxx&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;NXOpen/NXException.hxx&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> NXOpen;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">ECHO</span><span class="params">(<span class="type">char</span> *format, ...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span> msg[UF_UI_MAX_STRING_LEN + <span class="number">1</span>];</span><br><span class="line">va_list args;</span><br><span class="line"><span class="built_in">va_start</span>(args, format);</span><br><span class="line"><span class="built_in">vsnprintf_s</span>(msg, <span class="built_in">sizeof</span>(msg), UF_UI_MAX_STRING_LEN, format, args);</span><br><span class="line"><span class="built_in">va_end</span>(args);</span><br><span class="line"><span class="built_in">UF_UI_open_listing_window</span>();</span><br><span class="line"><span class="built_in">UF_UI_write_listing_window</span>(msg);</span><br><span class="line"><span class="built_in">UF_print_syslog</span>(msg, FALSE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UF_CALL(X) (report_error( __FILE__, __LINE__, #X, (X)))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">report_error</span><span class="params">(<span class="type">char</span> *file, <span class="type">int</span> line, <span class="type">char</span> *call, <span class="type">int</span> irc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (irc)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> err[<span class="number">133</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">UF_get_fail_message</span>(irc, err);</span><br><span class="line"><span class="built_in">ECHO</span>(<span class="string">&quot;*** ERROR code %d at line %d in %s:\n&quot;</span>,</span><br><span class="line">irc, line, file);</span><br><span class="line"><span class="built_in">ECHO</span>(<span class="string">&quot;+++ %s\n&quot;</span>, err);</span><br><span class="line"><span class="built_in">ECHO</span>(<span class="string">&quot;%s;\n&quot;</span>, call);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>(irc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="type">void</span> <span class="title">udop</span><span class="params">(<span class="type">char</span> *param, <span class="type">int</span> *status, <span class="type">int</span> parm_len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span>                    op_name[UF_OPER_OPNAME_LEN];</span><br><span class="line">UF_UDOP_id_t            udop_id;</span><br><span class="line">UF_UDOP_purpose_t       purpose;</span><br><span class="line">UF_OPER_id_t            oper_id;</span><br><span class="line">UF_PATH_id_t            path_id;</span><br><span class="line">UF_CAM_exit_id_t        exit_id = (UF_CAM_exit_id_t)param;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_initialize</span>());</span><br><span class="line"></span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_UDOP_ask_udop</span>(exit_id, &amp;udop_id));</span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_UDOP_ask_oper</span>(udop_id, &amp;oper_id));</span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_UDOP_ask_purpose</span>(udop_id, &amp;purpose));</span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_OPER_ask_name</span>(oper_id, op_name));</span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_OPER_ask_path</span>(oper_id, &amp;path_id));</span><br><span class="line"><span class="built_in">ECHO</span>(<span class="string">&quot;UDOP Operation Name: %s\n&quot;</span>, op_name);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (purpose == UF_UDOP_GENERATE)</span><br><span class="line">&#123;</span><br><span class="line">UF_PATH_linear_motion_t    motion, *motion_ptr = &amp;motion;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定进给速率单位</span></span><br><span class="line">motion_ptr-&gt;feed_unit = UF_PATH_FEED_UNIT_PER_MINUTE;<span class="comment">// 每分钟进给</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//刀轴</span></span><br><span class="line">motion_ptr-&gt;tool_axis[<span class="number">0</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;tool_axis[<span class="number">1</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;tool_axis[<span class="number">2</span>] = <span class="number">1.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 快速定位</span></span><br><span class="line">motion_ptr-&gt;feed_value = <span class="number">0.0</span>;<span class="comment">//G代码为 G00</span></span><br><span class="line">motion_ptr-&gt;type = UF_PATH_MOTION_TYPE_RAPID;</span><br><span class="line"></span><br><span class="line">motion_ptr-&gt;position[<span class="number">0</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">1</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">2</span>] = <span class="number">100.0</span>;</span><br><span class="line"><span class="built_in">UF_PATH_create_linear_motion</span>(path_id, motion_ptr);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 切削刀轨</span></span><br><span class="line">motion_ptr-&gt;feed_value = <span class="number">3500.0</span>;<span class="comment">// G代码为 G01</span></span><br><span class="line">motion_ptr-&gt;type = UF_PATH_MOTION_TYPE_CUT;</span><br><span class="line"></span><br><span class="line">motion_ptr-&gt;position[<span class="number">0</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">1</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">2</span>] = <span class="number">3.0</span>;</span><br><span class="line"><span class="built_in">UF_PATH_create_linear_motion</span>(path_id, motion_ptr);</span><br><span class="line"></span><br><span class="line">motion_ptr-&gt;feed_value = <span class="number">500.0</span>;<span class="comment">// G代码为 G01</span></span><br><span class="line">motion_ptr-&gt;position[<span class="number">0</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">1</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">2</span>] = <span class="number">0.0</span>;</span><br><span class="line"><span class="built_in">UF_PATH_create_linear_motion</span>(path_id, motion_ptr);</span><br><span class="line"></span><br><span class="line">motion_ptr-&gt;position[<span class="number">0</span>] = <span class="number">100.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">1</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">2</span>] = <span class="number">0.0</span>;</span><br><span class="line"><span class="built_in">UF_PATH_create_linear_motion</span>(path_id, motion_ptr);</span><br><span class="line"></span><br><span class="line">motion_ptr-&gt;position[<span class="number">0</span>] = <span class="number">100.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">1</span>] = <span class="number">50.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">2</span>] = <span class="number">0.0</span>;</span><br><span class="line"><span class="built_in">UF_PATH_create_linear_motion</span>(path_id, motion_ptr);</span><br><span class="line"></span><br><span class="line">motion_ptr-&gt;position[<span class="number">0</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">1</span>] = <span class="number">50.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">2</span>] = <span class="number">0.0</span>;</span><br><span class="line"><span class="built_in">UF_PATH_create_linear_motion</span>(path_id, motion_ptr);</span><br><span class="line"></span><br><span class="line">motion_ptr-&gt;position[<span class="number">0</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">1</span>] = <span class="number">0.0</span>;</span><br><span class="line">motion_ptr-&gt;position[<span class="number">2</span>] = <span class="number">0.0</span>;</span><br><span class="line"><span class="built_in">UF_PATH_create_linear_motion</span>(path_id, motion_ptr);</span><br><span class="line"></span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_PATH_end_tool_path</span>(path_id));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (purpose == UF_UDOP_USER_PARAMS)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ECHO</span>(<span class="string">&quot;UDOP UF_UDOP_USER_PARAMS&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_terminate</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> DllExport <span class="type">void</span> <span class="title">udopcopy</span><span class="params">(<span class="type">char</span> *param, <span class="type">int</span> *return_code, <span class="type">int</span> parm_len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span>                    op_name[UF_OPER_OPNAME_LEN];</span><br><span class="line">UF_UDOP_id_t            udop_id;</span><br><span class="line">UF_UDOP_purpose_t       purpose;</span><br><span class="line">UF_OPER_id_t            oper_id;</span><br><span class="line">UF_PATH_id_t            path_id;</span><br><span class="line">UF_CAM_exit_id_t        exit_id = (UF_CAM_exit_id_t)param;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_initialize</span>());</span><br><span class="line"></span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_UDOP_ask_udop</span>(exit_id, &amp;udop_id));</span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_UDOP_ask_oper</span>(udop_id, &amp;oper_id));</span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_UDOP_ask_purpose</span>(udop_id, &amp;purpose));</span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_OPER_ask_name</span>(oper_id, op_name));</span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_OPER_ask_path</span>(oper_id, &amp;path_id));</span><br><span class="line"><span class="built_in">ECHO</span>(<span class="string">&quot;UDOPCOPY Current Operation Name: %s\n&quot;</span>, op_name);</span><br><span class="line"></span><br><span class="line">Session *theSession = Session::<span class="built_in">GetSession</span>();</span><br><span class="line">Part *dispPart = theSession-&gt;<span class="built_in">Parts</span>()-&gt;<span class="built_in">Work</span>();</span><br><span class="line">CAM::CAMSetup *camSetup = dispPart-&gt;<span class="built_in">CAMSetup</span>();</span><br><span class="line">CAM::OperationCollection *operColl = camSetup-&gt;<span class="built_in">CAMOperationCollection</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Find the operation that is created because of the copy (this exit is being called on it)</span></span><br><span class="line">NXOpen::CAM::UserDefinedOpr *currentOperation = (NXOpen::CAM::UserDefinedOpr *)operColl-&gt;<span class="built_in">FindObject</span>(op_name);</span><br><span class="line"><span class="built_in">ECHO</span>(<span class="string">&quot;UDOPCOPY Current Operation - Name: %s\n&quot;</span>, currentOperation-&gt;<span class="built_in">Name</span>().<span class="built_in">GetText</span>(), currentOperation-&gt;<span class="built_in">Tag</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// Now ask the copy for the source operation that made it </span></span><br><span class="line">NXOpen::CAM::UserDefinedOpr *copiedFromOperation = currentOperation-&gt;<span class="built_in">GetSourceUdop</span>();</span><br><span class="line"><span class="built_in">ECHO</span>(<span class="string">&quot;UDOPCOPY Source Operation - Name: %s, Tag: %d\n&quot;</span>, copiedFromOperation-&gt;<span class="built_in">Name</span>().<span class="built_in">GetText</span>(), copiedFromOperation-&gt;<span class="built_in">Tag</span>());</span><br><span class="line"></span><br><span class="line"><span class="built_in">UF_CALL</span>(<span class="built_in">UF_terminate</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="type">int</span> <span class="title">ufusr_ask_unload</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span>(UF_UNLOAD_IMMEDIATELY);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、设置变量"><a href="#2、设置变量" class="headerlink" title="2、设置变量"></a>2、设置变量</h3><p>编译出来的dll文件不能像普通的二次开发文件一样直接用<code>Crtl + U</code>调用，必须先在<code>...\UGII\ugii_env.dat</code>文件中定义好变量。<br><img src="https://image.camcad.cn//vscode/20240618223155.png" alt="20240618223155"></p><h3 id="3、调用变量"><a href="#3、调用变量" class="headerlink" title="3、调用变量"></a>3、调用变量</h3><p>然后使用UG的自定义加工模板调用此变量。<br><img src="https://image.camcad.cn//vscode/20240618223311.png" alt="20240618223311"></p><p><img src="https://image.camcad.cn//vscode/20240618223358.png" alt="20240618223358"></p><h3 id="4、生成结果"><a href="#4、生成结果" class="headerlink" title="4、生成结果"></a>4、生成结果</h3><p><img src="https://image.camcad.cn//vscode/20240618214258.png" alt="20240618214258"></p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p><a href="https://www.cnblogs.com/bizca/p/4667874.html">[01] NX开发 刀路生成</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;此段代码使用加工&lt;code&gt;udop&lt;/code&gt;做为函数入口自定义刀轨。刀轨走径为矩形。&lt;br&gt;&lt;code&gt;注: &lt;/code&gt;motion_ptr-&amp;gt;feed_value 的值为0时生成G00，非0时生成G01。&lt;/p&gt;</summary>
    
    
    
    <category term="NX二次开发" scheme="http://notes.caxtoolkit.com/categories/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="NX二次开发" scheme="http://notes.caxtoolkit.com/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    <category term="UG二次开发" scheme="http://notes.caxtoolkit.com/tags/UG%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-树列表(NXOpen::BlockStyler::Tree)快捷双击回调实现</title>
    <link href="http://notes.caxtoolkit.com/post/18fc9dcd.html"/>
    <id>http://notes.caxtoolkit.com/post/18fc9dcd.html</id>
    <published>2024-06-16T23:27:28.000Z</published>
    <updated>2025-08-09T14:42:20.828Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="497ab164763fa1064a4ad2a22424f64d33bee3d3701ef3b143fc1109af7e1e44"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="NX二次开发" scheme="http://notes.caxtoolkit.com/categories/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="公共" scheme="http://notes.caxtoolkit.com/tags/%E5%85%AC%E5%85%B1/"/>
    
    <category term="NX二次开发" scheme="http://notes.caxtoolkit.com/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    <category term="UG二次开发" scheme="http://notes.caxtoolkit.com/tags/UG%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>gitlab基础教程</title>
    <link href="http://notes.caxtoolkit.com/post/f2dadf21.html"/>
    <id>http://notes.caxtoolkit.com/post/f2dadf21.html</id>
    <published>2024-05-29T21:44:02.000Z</published>
    <updated>2025-08-09T14:42:20.852Z</updated>
    
    <content type="html"><![CDATA[<p>GitLab 是一个基于 Web 的 DevOps 生命周期工具，它提供了一个 Git 仓库管理界面，并且集成了 Wiki、问题跟踪、持续集成&#x2F;持续部署（CI&#x2F;CD）等功能。简单来说，GitLab 可以帮助开发者更高效地协作和管理他们的代码。</p><span id="more"></span><h3 id="GitLab-的主要特点包括："><a href="#GitLab-的主要特点包括：" class="headerlink" title="GitLab 的主要特点包括："></a>GitLab 的主要特点包括：</h3><ol><li><p><strong>代码仓库管理</strong>：GitLab 允许用户创建和管理 Git 代码仓库，支持分支管理、合并请求等。</p></li><li><p><strong>问题跟踪</strong>：提供了一个内置的问题跟踪系统，方便团队成员报告、讨论和解决软件问题。</p></li><li><p><strong>Wiki</strong>：每个项目都可以有一个 Wiki 页面，用于编写和共享项目文档。</p></li><li><p><strong>持续集成&#x2F;持续部署（CI&#x2F;CD）</strong>：GitLab CI&#x2F;CD 允许自动化测试和部署代码，提高开发效率。</p></li><li><p><strong>权限管理</strong>：可以为团队成员设置不同的权限，如只读、写入、管理员等。</p></li><li><p><strong>安全</strong>：提供多种安全功能，如两因素认证、审计日志等。</p></li><li><p><strong>集成</strong>：GitLab 可以与其他工具和服务集成，如 Slack、Jenkins 等。</p></li></ol><h3 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th></tr></thead><tbody><tr><td align="center">001</td><td align="left"><a href="https://notes.caxtoolkit.com/post/b0e2cfa3.html">ubuntu server搭建gitlab环境详细步骤</a></td></tr><tr><td align="center">002</td><td align="left"><a href="https://notes.caxtoolkit.com/post/e7d1d05.html">gitlab升级流程（ubuntu serve ）</a></td></tr><tr><td align="center">003</td><td align="left"><a href="https://notes.caxtoolkit.com/post/e5b819e9.html">gitlab开启Container Registry（容器镜像仓库）功能</a></td></tr><tr><td align="center">004</td><td align="left"><a href="https://notes.caxtoolkit.com/post/282df0ab.html">Windows上运行GitLab Runner</a></td></tr><tr><td align="center">005</td><td align="left"><a href="https://notes.caxtoolkit.com/post/6cef7c88.html">gitlab常用知识</a></td></tr><tr><td align="center">006</td><td align="left"><a href="https://notes.caxtoolkit.com/post/97ac5c4.html">gitlab服务器数据备份迁移</a></td></tr></tbody></table><h3 id="进阶操作"><a href="#进阶操作" class="headerlink" title="进阶操作"></a>进阶操作</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th></tr></thead><tbody><tr><td align="center">006</td><td align="left"><a href="https://notes.caxtoolkit.com/post/e5e0b1bf.html">gitlab-ci&#x2F;cd学习01：什么是CI&#x2F;CD</a></td></tr><tr><td align="center">007</td><td align="left"><a href="https://notes.caxtoolkit.com/post/26de28d.html">gitlab-ci&#x2F;cd学习02：建立.gitlab-ci.yml</a></td></tr><tr><td align="center">008</td><td align="left"><a href="https://notes.caxtoolkit.com/post/8671d331.html">gitlab-ci&#x2F;cd学习03：定义执行任务开始和结束要运行的脚本</a></td></tr><tr><td align="center">009</td><td align="left"><a href="https://notes.caxtoolkit.com/post/9c8d76a5.html">gitlab-ci&#x2F;cd学习04：工作阶段和相依性</a></td></tr><tr><td align="center">010</td><td align="left"><a href="https://notes.caxtoolkit.com/post/4ff7be47.html">gitlab-ci&#x2F;cd学习05：执行外部脚本</a></td></tr><tr><td align="center">011</td><td align="left"><a href="https://notes.caxtoolkit.com/post/812131ff.html">gitlab-ci&#x2F;cd学习06：指定分支</a></td></tr><tr><td align="center">012</td><td align="left"><a href="https://notes.caxtoolkit.com/post/78e6172.html">gitlab-ci&#x2F;cd学习07：使用变量</a></td></tr><tr><td align="center">013</td><td align="left"><a href="https://notes.caxtoolkit.com/post/57c50fa4.html">gitlab-ci&#x2F;cd学习08：gitlab ci与docker image</a></td></tr><tr><td align="center">014</td><td align="left"><a href="https://notes.caxtoolkit.com/post/ae4a6896.html">gitlab-ci&#x2F;cd学习09：gitlab runner与executor</a></td></tr><tr><td align="center">015</td><td align="left"><a href="https://notes.caxtoolkit.com/post/ec1e8394.html">gitlab-ci&#x2F;cd学习10：debian系统注册gitlab runner</a></td></tr><tr><td align="center">016</td><td align="left"><a href="https://notes.caxtoolkit.com/post/d092dd69.html">gitlab-ci&#x2F;cd学习11：把工程打包成docker image</a></td></tr><tr><td align="center">017</td><td align="left"><a href="https://notes.caxtoolkit.com/post/4df39e.html">gitlab-ci&#x2F;cd学习12：将工程推上Gitlab Container Registry</a></td></tr><tr><td align="center">018</td><td align="left"><a href="https://notes.caxtoolkit.com/post/e57fb111.html">gitlab-ci&#x2F;cd学习13：自动递增docker image版本</a></td></tr><tr><td align="center">019</td><td align="left"><a href="https://notes.caxtoolkit.com/post/f916f96d.html">gitlab-ci&#x2F;cd学习14：使用docker compose</a></td></tr><tr><td align="center">020</td><td align="left"><a href="https://notes.caxtoolkit.com/post/3e2c2269.html">gitlab-ci&#x2F;cd学习15：使用SSH连接服务器</a></td></tr><tr><td align="center">021</td><td align="left"><a href="https://notes.caxtoolkit.com/post/497256a2.html">gitlab-ci&#x2F;cd学习16：部署docker image到服务器上</a></td></tr><tr><td align="center">022</td><td align="left"><a href="https://notes.caxtoolkit.com/post/8255c28.html">gitlab-ci&#x2F;cd学习17：通过模板的方式部署多个服务</a></td></tr><tr><td align="center">023</td><td align="left"><a href="https://notes.caxtoolkit.com/post/d9e028cf.html">gitlab-ci&#x2F;cd学习18：手动控制部署production环境</a></td></tr><tr><td align="center">024</td><td align="left"><a href="https://notes.caxtoolkit.com/post/db503ee.html">gitlab-ci&#x2F;cd学习19：上传附件软件包库（Package Registry）</a></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;GitLab 是一个基于 Web 的 DevOps 生命周期工具，它提供了一个 Git 仓库管理界面，并且集成了 Wiki、问题跟踪、持续集成&amp;#x2F;持续部署（CI&amp;#x2F;CD）等功能。简单来说，GitLab 可以帮助开发者更高效地协作和管理他们的代码。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发：Part预览图片获取</title>
    <link href="http://notes.caxtoolkit.com/post/6bce4249.html"/>
    <id>http://notes.caxtoolkit.com/post/6bce4249.html</id>
    <published>2024-05-22T11:18:41.000Z</published>
    <updated>2025-08-09T14:42:20.825Z</updated>
    
    <content type="html"><![CDATA[<p>根据part绝对路径文件，获取Part预览图片，并保存到本地。</p><span id="more"></span><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Shows existing part preview image from windows explorer</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Execution modes:</span></span><br><span class="line"><span class="comment">//  1. From NX command prompt: </span></span><br><span class="line"><span class="comment">//     - run the command &quot;%UGII_ROOT_DIR%\\run_journal.exe&quot; show_preview_from_explorer.cs -args partname</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  2. From Windows Explorer:</span></span><br><span class="line"><span class="comment">//     - Create a file preview.reg with this content and import it to the registry (adjust the paths accordingly):</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        Windows Registry Editor Version 5.00</span></span><br><span class="line"><span class="comment">//        [HKEY_CLASSES_ROOT\UGpartfile\shell\PartPreview]</span></span><br><span class="line"><span class="comment">//        @=&quot;PartPreview&quot;</span></span><br><span class="line"><span class="comment">//        [HKEY_CLASSES_ROOT\UGpartfile\shell\PartPreview\command]</span></span><br><span class="line"><span class="comment">//        @=&quot;c:\\program files\\ugs\\nx 7.5\\ugii\\run_journal.exe c:\\show_preview_from_explorer.cs -args \&quot;%1\&quot;&quot;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//     - Windows Explorer -&gt; NX Partfile -&gt; MB3 -&gt; PartPreview</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> NXOpen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Preview</span> : <span class="title">Form</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Session theSession;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Part wp;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> success = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> System.Windows.Forms.PictureBox pictureBox1;</span><br><span class="line">    <span class="keyword">private</span> System.Windows.Forms.Button close_btn;</span><br><span class="line">    <span class="keyword">private</span> System.Windows.Forms.Button save_btn;</span><br><span class="line">    <span class="keyword">private</span> TextBox textRelease;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Preview</span>(<span class="params"><span class="built_in">string</span> filename</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        InitializeComponent();</span><br><span class="line"></span><br><span class="line">        PartLoadStatus loadStatus = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> failCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        Part mypart = theSession.Parts.Open(filename, <span class="keyword">out</span> loadStatus);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (loadStatus.NumberUnloadedParts &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            failCount = reportLoadStatus(loadStatus);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            success = getPreview(mypart);</span><br><span class="line">            mypart.Close(BasePart.CloseWholeTree.True, BasePart.CloseModified.CloseModified, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            theSession = Session.GetSession();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (args.Length &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Preview preview = <span class="keyword">new</span> Preview(args[<span class="number">0</span>]);</span><br><span class="line">                <span class="keyword">if</span> (success) preview.ShowDialog();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> MessageBox.Show(<span class="string">&quot;No NX part file specified...exit.&quot;</span>, <span class="string">&quot;Error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>( NXException ex)</span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(ex.Message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">getPreview</span>(<span class="params">Part prt</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        BasePart.HistoryEventInformation[] hInfo = prt.GetHistoryInformation();</span><br><span class="line">        <span class="built_in">string</span> strInfo = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; hInfo.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            strInfo += hInfo[i] + <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        textRelease.Text = strInfo;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> width = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> height = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span>[] pixels = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        prt.GetPreviewImage(<span class="keyword">out</span> width, <span class="keyword">out</span> height, <span class="keyword">out</span> pixels);</span><br><span class="line">        <span class="keyword">if</span> (width &gt; <span class="number">0</span> &amp;&amp; height &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Bitmap image1 = createBitmap(width, height, pixels);</span><br><span class="line">            pictureBox1.Image = image1;</span><br><span class="line">            save_btn.Enabled = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;Part has no valid preview&quot;</span>, <span class="string">&quot;Information&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Bitmap <span class="title">createBitmap</span>(<span class="params"><span class="built_in">int</span> w, <span class="built_in">int</span> h, <span class="built_in">int</span>[] px</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Bitmap bm = <span class="keyword">new</span> Bitmap(w, h);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> y = <span class="number">0</span>; y &lt; h; y++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> x = <span class="number">0</span>; x &lt; w; x++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">int</span> pixel = px[y * w + x];</span><br><span class="line">                Color col1 = Color.FromArgb(pixel);</span><br><span class="line">                Color col2 = Color.FromArgb(<span class="number">255</span>, col1);</span><br><span class="line">                bm.SetPixel(x, y, col2);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">reportLoadStatus</span>(<span class="params">PartLoadStatus loadStatus</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> file = loadStatus.GetPartName(counter);</span><br><span class="line">            <span class="built_in">string</span> failure = loadStatus.GetStatusDescription(counter);</span><br><span class="line">            <span class="built_in">int</span> statusCode = loadStatus.GetStatus(counter);</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;File: &quot;</span> + file + <span class="string">&quot;\nCode: &quot;</span> + statusCode + <span class="string">&quot;\nStatus: &quot;</span> + failure, <span class="string">&quot;Unloaded Part&quot;</span>);</span><br><span class="line"></span><br><span class="line">            counter += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (!(counter == loadStatus.NumberUnloadedParts));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> counter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">save_btn_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        SaveFileDialog save = <span class="keyword">new</span> SaveFileDialog();</span><br><span class="line">        save.Filter = <span class="string">&quot;Bitmap File(*.bmp)|*.bmp&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (save.ShowDialog() == DialogResult.OK)</span><br><span class="line">        &#123;</span><br><span class="line">            pictureBox1.Image.Save(save.FileName, System.Drawing.Imaging.ImageFormat.Bmp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">close_btn_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.pictureBox1 = <span class="keyword">new</span> System.Windows.Forms.PictureBox();</span><br><span class="line">        <span class="keyword">this</span>.close_btn = <span class="keyword">new</span> System.Windows.Forms.Button();</span><br><span class="line">        <span class="keyword">this</span>.save_btn = <span class="keyword">new</span> System.Windows.Forms.Button();</span><br><span class="line">        <span class="keyword">this</span>.textRelease = <span class="keyword">new</span> System.Windows.Forms.TextBox();</span><br><span class="line">        ((System.ComponentModel.ISupportInitialize)(<span class="keyword">this</span>.pictureBox1)).BeginInit();</span><br><span class="line">        <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="comment">// pictureBox1</span></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="keyword">this</span>.pictureBox1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;</span><br><span class="line">        <span class="keyword">this</span>.pictureBox1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">14</span>, <span class="number">12</span>);</span><br><span class="line">        <span class="keyword">this</span>.pictureBox1.Name = <span class="string">&quot;pictureBox1&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>.pictureBox1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">534</span>, <span class="number">400</span>);</span><br><span class="line">        <span class="keyword">this</span>.pictureBox1.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;</span><br><span class="line">        <span class="keyword">this</span>.pictureBox1.TabIndex = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">this</span>.pictureBox1.TabStop = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="comment">// close_btn</span></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="keyword">this</span>.close_btn.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">473</span>, <span class="number">481</span>);</span><br><span class="line">        <span class="keyword">this</span>.close_btn.Name = <span class="string">&quot;close_btn&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>.close_btn.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line">        <span class="keyword">this</span>.close_btn.TabIndex = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">this</span>.close_btn.Text = <span class="string">&quot;Close&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>.close_btn.UseVisualStyleBackColor = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.close_btn.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.close_btn_Click);</span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="comment">// save_btn</span></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="keyword">this</span>.save_btn.Enabled = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.save_btn.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">191</span>, <span class="number">481</span>);</span><br><span class="line">        <span class="keyword">this</span>.save_btn.Name = <span class="string">&quot;save_btn&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>.save_btn.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line">        <span class="keyword">this</span>.save_btn.TabIndex = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">this</span>.save_btn.Text = <span class="string">&quot;Save BMP&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>.save_btn.UseVisualStyleBackColor = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.save_btn.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.save_btn_Click);</span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="comment">// textRelease</span></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="keyword">this</span>.textRelease.BackColor = System.Drawing.SystemColors.Control;</span><br><span class="line">        <span class="keyword">this</span>.textRelease.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;</span><br><span class="line">        <span class="keyword">this</span>.textRelease.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">14</span>, <span class="number">418</span>);</span><br><span class="line">        <span class="keyword">this</span>.textRelease.Multiline = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.textRelease.Name = <span class="string">&quot;textRelease&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>.textRelease.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;</span><br><span class="line">        <span class="keyword">this</span>.textRelease.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">534</span>, <span class="number">57</span>);</span><br><span class="line">        <span class="keyword">this</span>.textRelease.TabIndex = <span class="number">4</span>;</span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="comment">// Preview</span></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="keyword">this</span>.AutoScaleDimensions = <span class="keyword">new</span> System.Drawing.SizeF(<span class="number">6F</span>, <span class="number">13F</span>);</span><br><span class="line">        <span class="keyword">this</span>.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;</span><br><span class="line">        <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">563</span>, <span class="number">516</span>);</span><br><span class="line">        <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.save_btn);</span><br><span class="line">        <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.close_btn);</span><br><span class="line">        <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.pictureBox1);</span><br><span class="line">        <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.textRelease);</span><br><span class="line">        <span class="keyword">this</span>.Name = <span class="string">&quot;Preview&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>.Text = <span class="string">&quot;NX Part Preview&quot;</span>;</span><br><span class="line">        ((System.ComponentModel.ISupportInitialize)(<span class="keyword">this</span>.pictureBox1)).EndInit();</span><br><span class="line">        <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">this</span>.PerformLayout();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>1、打开<code>工具-NX命令提示符</code></strong><br><img src="https://image.camcad.cn//vscode/20240522114950.png" alt="20240522114950"></p><p><strong>2、执行操作命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;%UGII_ROOT_DIR%\\run_journal.exe&quot; &quot;执行文件绝对路径.cs&quot; -args &quot;part绝对路径&quot;</span><br><span class="line"></span><br><span class="line">&quot;%UGII_ROOT_DIR%\\run_journal.exe&quot; “C:\\emmet.cs” -args &quot;C:\\000241_A_0.prt&quot;</span><br></pre></td></tr></table></figure><h3 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h3><p><img src="https://image.camcad.cn//vscode/20240522120007.png" alt="20240522120007"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://docs.sw.siemens.com/documentation/external/PL20200507135732916/en-US/nx_api_sc/nx/1953/nx_api_sc/en-US/nx_open_c_plus_plus_ref/a01212.html#a3b2699cc45f409332b1454bd5b9e3177">NXOpen::BasePart::GetPreviewImage</a></p><p><a href="https://solutions.industrysoftware.automation.siemens.com/view.php?sort=desc&rows=100&file_type=text&q=GetPreviewImage&file_type=text&i=nx_api3945&k=3&o=0">Sample NX Open .NET C# program : show preview from explorer</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;根据part绝对路径文件，获取Part预览图片，并保存到本地。&lt;/p&gt;</summary>
    
    
    
    <category term="NX二次开发" scheme="http://notes.caxtoolkit.com/categories/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="NX二次开发" scheme="http://notes.caxtoolkit.com/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    <category term="UG二次开发" scheme="http://notes.caxtoolkit.com/tags/UG%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Windows操作系统编译curl源代码</title>
    <link href="http://notes.caxtoolkit.com/post/f151eb4f.html"/>
    <id>http://notes.caxtoolkit.com/post/f151eb4f.html</id>
    <published>2024-05-08T22:24:42.000Z</published>
    <updated>2025-08-09T14:42:20.855Z</updated>
    
    <content type="html"><![CDATA[<p>libcurl-多协议文件传输库。</p><span id="more"></span><h3 id="下载源代码"><a href="#下载源代码" class="headerlink" title="下载源代码"></a>下载源代码</h3><p><a href="https://curl.se/download.html">https://curl.se/download.html</a><br><img src="https://image.camcad.cn/vscode/20240508223504.png" alt="20240508223504"></p><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p><strong>1、解压刚刚下载的源代码文件</strong></p><p><strong>2、找到<code>VS xxx x64本机工具命令提示符</code></strong><br><img src="https://image.camcad.cn/vscode/20240508223942.png" alt="20240508223942"></p><p><strong>3、执行curl源码目录下的<code>buildconf.bat</code>文件</strong><br><img src="https://image.camcad.cn/vscode/20240508224431.png" alt="20240508224431"></p><p><strong>4、跳转到curl源码目录<code>winbuild</code>文件夹下</strong><br><img src="https://image.camcad.cn/vscode/20240508224250.png" alt="20240508224250"></p><p><strong>5、执行<code>nmake</code>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmake /f Makefile.vc mode=static VC=12 RTLIBCFG=static MACHINE=x64 ENABLE_WINSSL=no ENABLE_SSPI=no DEBUG=no ENABLE_IDN=no</span><br></pre></td></tr></table></figure><p><code>说明：</code></p><ul><li><p>1、nmake &#x2F;f Makefile.vc：这个命令告诉 nmake（微软的 make 工具）使用 Makefile.vc 文件作为构建脚本。</p></li><li><p>2、mode&#x3D;static：这个参数指定了要编译的库的模式。在这里，它被设置为 static，意味着将生成一个静态库（.lib 文件），而不是一个动态链接库（.dll 文件）。</p></li><li><p>3、VC&#x3D;12：这个参数指定了使用的 Visual C++ 版本。在这里，它被设置为 12，代表 Visual Studio 2013。</p></li><li><p>4、RTLIBCFG&#x3D;static：这个参数指定了运行时库的配置。设置为 static 意味着将使用静态链接的 CRT（C 运行时库）。</p></li><li><p>5、MACHINE&#x3D;x64：这个参数定义了目标平台。在这里，它被设置为 x64，意味着编译的是 64 位版本。</p></li><li><p>6、ENABLE_WINSSL&#x3D;no：这个参数用于指定是否启用 Windows SSL 支持。设置为 no 意味着不启用。</p></li><li><p>7、ENABLE_SSPI&#x3D;no：这个参数用于指定是否启用 Windows SSPI（安全支持提供程序接口）支持。设置为 no 意味着不启用。</p></li><li><p>8、DEBUG&#x3D;no：这个参数用于指定是否生成调试信息。设置为 no 意味着不会生成调试信息。</p></li><li><p>9、ENABLE_IDN&#x3D;no：这个参数用于指定是否启用国际化域名（IDN）支持。设置为 no 意味着不启用。</p></li></ul><p><strong>6、编译完成后，会在源代码目录<code>builds</code>文件夹下生成相应文件</strong><br><img src="https://image.camcad.cn/vscode/20240508225020.png" alt="20240508225020"></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;curl/curl.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment (lib,<span class="string">&quot;libcurl_a.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment (lib,<span class="string">&quot;wldap32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment (lib,<span class="string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment (lib,<span class="string">&quot;Crypt32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">CURL *curl;</span><br><span class="line">CURLcode res;</span><br><span class="line">curl = curl_easy_init();</span><br><span class="line"><span class="keyword">if</span>(curl) &#123;</span><br><span class="line">  curl_easy_setopt(curl, CURLOPT_CUSTOMREQUEST, <span class="string">&quot;POST&quot;</span>);</span><br><span class="line">  curl_easy_setopt(curl, CURLOPT_URL, <span class="string">&quot;http://caxtoolkit.com:5000/emmet&quot;</span>);</span><br><span class="line">  curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, <span class="number">1L</span>);</span><br><span class="line">  curl_easy_setopt(curl, CURLOPT_DEFAULT_PROTOCOL, <span class="string">&quot;http&quot;</span>);</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">curl_slist</span> *<span class="title">headers</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">  headers = curl_slist_append(headers, <span class="string">&quot;Content-Type: application/json&quot;</span>);</span><br><span class="line">  curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers);</span><br><span class="line">  <span class="type">const</span> <span class="type">char</span> *data = <span class="string">&quot;&#123;\&quot;id\&quot;:\&quot;emmet.huang@foxmail.com\&quot;,\&quot;ver\&quot;:\&quot;1.0\&quot;&#125;&quot;</span>;</span><br><span class="line">  curl_easy_setopt(curl, CURLOPT_POSTFIELDS, data);</span><br><span class="line">  res = curl_easy_perform(curl);</span><br><span class="line">  curl_slist_free_all(headers);</span><br><span class="line">&#125;</span><br><span class="line">curl_easy_cleanup(curl);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="疑难杂症"><a href="#疑难杂症" class="headerlink" title="疑难杂症"></a>疑难杂症</h3><h4 id="无法解析外部符号"><a href="#无法解析外部符号" class="headerlink" title="无法解析外部符号"></a>无法解析外部符号</h4><p><img src="https://image.camcad.cn/vscode/20240508230516.png" alt="20240508230516"><br><code>解决办法：</code><br>在属性配置中，将 <code>C/C++</code> -&gt; <code>预处理器</code> -&gt; <code>预处理定义</code> 中添加 <code>CURL_STATICLIB</code></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://curl.se/download.html">https://curl.se/download.html</a></p><p><a href="https://www.cnblogs.com/132818Creator/p/14358595.html">libcurl报错 无法解析的外部符号 _imp_read等解决办法</a></p><p><a href="https://www.cnblogs.com/RioTian/p/17563205.html">【LibCurl】C++使用libcurl实现HTTP POST和GET、PUT </a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;libcurl-多协议文件传输库。&lt;/p&gt;</summary>
    
    
    
    <category term="辅助" scheme="http://notes.caxtoolkit.com/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="curl" scheme="http://notes.caxtoolkit.com/tags/curl/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习19：上传附件软件包库（Package Registry）</title>
    <link href="http://notes.caxtoolkit.com/post/db503ee.html"/>
    <id>http://notes.caxtoolkit.com/post/db503ee.html</id>
    <published>2024-05-02T17:47:28.000Z</published>
    <updated>2025-08-09T14:42:20.852Z</updated>
    
    <content type="html"><![CDATA[<p>这个配置是自动化流程中用于上传构建包到 GitLab 包注册表的典型示例。</p><span id="more"></span><h3 id="发布包文件"><a href="#发布包文件" class="headerlink" title="发布包文件"></a>发布包文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl --header &quot;JOB-TOKEN: $CI_JOB_TOKEN&quot; </span><br><span class="line">     --upload-file ./patch-muif.zip </span><br><span class="line">     $&#123;CI_API_V4_URL&#125;/projects/:id/packages/generic/:package_name/:package_version/:file_name</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>linux</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl --header <span class="string">&quot;PRIVATE-TOKEN: &lt;your_access_token&gt;&quot;</span> \</span><br><span class="line">     --upload-file path/to/file.txt \</span><br><span class="line">     <span class="string">&quot;https://gitlab.example.com/api/v4/projects/24/packages/generic/my_package/0.0.1/file.txt&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>windows</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upload:</span><br><span class="line">  stage: upload</span><br><span class="line">  script:</span><br><span class="line">    - Invoke-RestMethod -Headers @&#123; <span class="string">&quot;JOB-TOKEN&quot;</span>=<span class="string">&quot;<span class="variable">$CI_JOB_TOKEN</span>&quot;</span> &#125; -InFile path/to/file.txt -uri <span class="string">&quot;<span class="variable">$&#123;CI_API_V4_URL&#125;</span>/projects/<span class="variable">$&#123;CI_PROJECT_ID&#125;</span>/packages/generic/my_package/0.0.1/file.txt&quot;</span> -Method put</span><br></pre></td></tr></table></figure><p><img src="https://image.camcad.cn/vscode/20240502180332.png" alt="20240502180332"></p><figure class="highlight bash"><figcaption><span>.gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">workflow:</span><br><span class="line">  rules:</span><br><span class="line">    - <span class="keyword">if</span>: <span class="string">&#x27;$CI_COMMIT_TAG&#x27;</span></span><br><span class="line">      when: always</span><br><span class="line">    - when: never</span><br><span class="line"></span><br><span class="line">stages:</span><br><span class="line">  - upload</span><br><span class="line"></span><br><span class="line">variables:</span><br><span class="line">  PACKAGE_REGISTRY_URL: <span class="string">&quot;<span class="variable">$&#123;CI_API_V4_URL&#125;</span>/projects/<span class="variable">$&#123;CI_PROJECT_ID&#125;</span>/packages/generic/<span class="variable">$&#123;CI_COMMIT_TAG&#125;</span>/<span class="variable">$&#123;CI_COMMIT_TAG&#125;</span>&quot;</span></span><br><span class="line">  PACKAGE_NAME: <span class="string">&quot;<span class="variable">$&#123;CI_PROJECT_NAME&#125;</span>.zip&quot;</span></span><br><span class="line"></span><br><span class="line">upload_package:</span><br><span class="line">  tags:</span><br><span class="line">    - mydebian</span><br><span class="line">  stage: upload </span><br><span class="line">  script:</span><br><span class="line">    - |</span><br><span class="line">      curl --header <span class="string">&quot;JOB-TOKEN: <span class="variable">$&#123;CI_JOB_TOKEN&#125;</span>&quot;</span> --upload-file <span class="variable">$&#123;CI_PROJECT_DIR&#125;</span>/<span class="variable">$&#123;PACKAGE_NAME&#125;</span> <span class="variable">$&#123;PACKAGE_REGISTRY_URL&#125;</span>/<span class="variable">$&#123;PACKAGE_NAME&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将Windows运行程序与PowerShell一起使用时，必须在上载和下载阶段使用Invoke-WebRequest或Invoke-RestMethod，而不是curl。</span></span><br><span class="line">    <span class="comment"># - Invoke-RestMethod -Headers @&#123; &quot;JOB-TOKEN&quot;=&quot;$CI_JOB_TOKEN&quot; &#125; -InFile $&#123;CI_PROJECT_DIR&#125;/$&#123;PACKAGE_NAME&#125; -uri $&#123;PACKAGE_REGISTRY_URL&#125;/$&#123;PACKAGE_NAME&#125; -Method put</span></span><br></pre></td></tr></table></figure><p>您的 <code>.gitlab-ci.yml</code> 配置文件定义了一个工作流规则，一个变量部分，以及一个名为 <code>upload_package</code> 的作业。以下是配置的详细说明：</p><h3 id="工作流规则-Workflow-Rules"><a href="#工作流规则-Workflow-Rules" class="headerlink" title="工作流规则 (Workflow Rules)"></a>工作流规则 (Workflow Rules)</h3><ul><li><code>rules</code>：定义了触发 CI&#x2F;CD 流程的条件。<ul><li><code>if: &#39;$CI_COMMIT_TAG&#39;</code>：如果存在一个 Git 标签（<code>$CI_COMMIT_TAG</code>），则满足条件。</li><li><code>when: always</code>：满足上述条件时，总是运行作业。</li><li><code>when: never</code>：对于没有标签的提交，不运行作业。</li></ul></li></ul><h3 id="阶段-Stages"><a href="#阶段-Stages" class="headerlink" title="阶段 (Stages)"></a>阶段 (Stages)</h3><ul><li><code>upload</code>：定义了一个名为 <code>upload</code> 的阶段。</li></ul><h3 id="变量-Variables"><a href="#变量-Variables" class="headerlink" title="变量 (Variables)"></a>变量 (Variables)</h3><ul><li><code>PACKAGE_REGISTRY_URL</code>：定义了包注册表的 URL，其中包含了 GitLab API v4 URL、项目 ID、包的通用路径以及提交标签。</li><li><code>PACKAGE_NAME</code>：定义了要上传的包的名称，这里使用了 <code>$&#123;CI_PROJECT_NAME&#125;</code> 来表示项目名称，并且将文件扩展名设置为 <code>.zip</code>。</li></ul><h3 id="作业-Jobs"><a href="#作业-Jobs" class="headerlink" title="作业 (Jobs)"></a>作业 (Jobs)</h3><ul><li><code>upload_package</code><ul><li><code>tags</code>：指定了作业需要在具有 <code>mydebian</code> 标签的 Runner 上运行。</li><li><code>stage</code>：将作业分配到 <code>upload</code> 阶段。</li><li><code>script</code>：<ul><li><code>curl</code> 命令：<ul><li><code>--header &quot;JOB-TOKEN: $&#123;CI_JOB_TOKEN&#125;&quot;</code>：使用 <code>--header</code> 添加一个 HTTP 头，其中包含了作业令牌，用于认证。</li><li><code>--upload-file $&#123;CI_PROJECT_DIR&#125;/$&#123;PACKAGE_NAME&#125;</code>：指定要上传的文件路径，这里使用了 GitLab 预定义变量 <code>$&#123;CI_PROJECT_DIR&#125;</code> 来获取项目的工作目录，以及上面定义的 <code>PACKAGE_NAME</code>。</li><li><code>$&#123;PACKAGE_REGISTRY_URL&#125;/$&#123;PACKAGE_NAME&#125;</code>：指定上传文件的目标 URL。</li></ul></li></ul></li></ul></li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>作业 <code>upload_package</code> 只有在存在 Git 标签时才会运行，这是由工作流规则定义的。</li><li><code>curl</code> 命令用于将指定的包上传到 GitLab 的包注册表。这通常用于将构建的包存储在 GitLab 中，以便于后续的分发和使用。</li><li><code>$&#123;CI_JOB_TOKEN&#125;</code> 是一个敏感变量，用于提供对包注册表的访问权限。请确保 CI&#x2F;CD 流程中的安全设置能够保护这个令牌。</li><li><code>$&#123;CI_COMMIT_TAG&#125;</code> 和 <code>$&#123;CI_COMMIT_TAG_MESSAGE&#125;</code> 是 GitLab 提供的预定义变量，分别包含了当前的标签名和标签信息。</li></ol><p><img src="https://image.camcad.cn/vscode/20240502175445.png" alt="20240502175445"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://docs.gitlab.com/ee/user/packages/generic_packages/index.html#publish-a-generic-package-by-using-cicd">GitLab Generic Packages Repository</a></p><p><a href="https://cloud.tencent.com/developer/article/1768699">【GitLab CI&#x2F;CD】：Releases &amp; Package Registry</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这个配置是自动化流程中用于上传构建包到 GitLab 包注册表的典型示例。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习18：手动控制部署production环境</title>
    <link href="http://notes.caxtoolkit.com/post/d9e028cf.html"/>
    <id>http://notes.caxtoolkit.com/post/d9e028cf.html</id>
    <published>2024-05-02T16:18:04.000Z</published>
    <updated>2025-08-09T14:42:20.852Z</updated>
    
    <content type="html"><![CDATA[<p>手动控制部署production环境。</p><span id="more"></span><figure class="highlight bash"><figcaption><span>gitalb-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">stages:</span><br><span class="line">  - deploy_to_dev</span><br><span class="line">  - deploy_to_staging</span><br><span class="line">  - deploy_to_production</span><br><span class="line"></span><br><span class="line">.IDeploy:</span><br><span class="line">  tags:</span><br><span class="line">    - mydebian</span><br><span class="line">  variables:</span><br><span class="line">    SERVER_PRIVATE_KEY: <span class="string">&quot;&quot;</span></span><br><span class="line">    SERVER_USER: <span class="string">&quot;&quot;</span></span><br><span class="line">    SERVER_URL: <span class="string">&quot;&quot;</span></span><br><span class="line">    ENV: <span class="string">&quot;&quot;</span></span><br><span class="line">    APP_PORT: <span class="string">&quot;&quot;</span></span><br><span class="line">  before_script:</span><br><span class="line">    - <span class="built_in">eval</span> $(ssh-agent -s)</span><br><span class="line">    - ssh-add &lt;(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SERVER_PRIVATE_KEY</span>&quot;</span>)</span><br><span class="line">  script:</span><br><span class="line">    - scp -o StrictHostKeyChecking=no ./docker-compose.yml </span><br><span class="line">      <span class="variable">$SERVER_USER</span>@<span class="variable">$SERVER_URL</span>:/<span class="variable">$SERVER_USER</span></span><br><span class="line"></span><br><span class="line">    - ssh -o StrictHostKeyChecking=no <span class="variable">$SERVER_USER</span>@<span class="variable">$SERVER_URL</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">     docker login -u <span class="variable">$CI_REGISTRY_USER</span> -p <span class="variable">$CI_REGISTRY_PASSWORD</span> <span class="variable">$CI_REGISTRY</span> &amp;&amp;</span></span><br><span class="line"><span class="string">     apt-get install docker-compose &amp;&amp;</span></span><br><span class="line"><span class="string">     export COMPOSE_PROJECT_NAME=<span class="variable">$ENV</span> &amp;&amp;</span></span><br><span class="line"><span class="string">     export APP_PORT=<span class="variable">$APP_PORT</span> &amp;&amp;</span></span><br><span class="line"><span class="string">     docker-compose down &amp;&amp;</span></span><br><span class="line"><span class="string">     docker-compose up -d&quot;</span></span><br><span class="line">  environment:</span><br><span class="line">    name: <span class="variable">$ENV</span></span><br><span class="line">    url: http://<span class="variable">$SERVER_URL</span>:<span class="variable">$APP_PORT</span></span><br><span class="line"></span><br><span class="line">ssh_dev:</span><br><span class="line">  stage: deploy_to_dev</span><br><span class="line">  extends: .IDeploy</span><br><span class="line">  variables:</span><br><span class="line">    SERVER_PRIVATE_KEY: <span class="variable">$DEV_SERVER_PRIVATE_KEY</span></span><br><span class="line">    SERVER_USER: <span class="variable">$DEV_SERVER_USER</span></span><br><span class="line">    SERVER_URL: <span class="variable">$DEV_SERVER_URL</span></span><br><span class="line">    ENV: dev</span><br><span class="line">    APP_PORT: 8000</span><br><span class="line"></span><br><span class="line">ssh_staging:</span><br><span class="line">  stage: deploy_to_staging</span><br><span class="line">  extends: .IDeploy</span><br><span class="line">  variables:</span><br><span class="line">    SERVER_PRIVATE_KEY: <span class="variable">$DEV_SERVER_PRIVATE_KEY</span></span><br><span class="line">    SERVER_USER: <span class="variable">$DEV_SERVER_USER</span></span><br><span class="line">    SERVER_URL: <span class="variable">$DEV_SERVER_URL</span></span><br><span class="line">    ENV: staging</span><br><span class="line">    APP_PORT: 8090</span><br><span class="line"></span><br><span class="line">ssh_production:</span><br><span class="line">  stage: deploy_to_production</span><br><span class="line">  needs:</span><br><span class="line">    - job: ssh_staging</span><br><span class="line">  extends: .IDeploy</span><br><span class="line">  when: manual</span><br><span class="line">  variables:</span><br><span class="line">    SERVER_PRIVATE_KEY: <span class="variable">$DEV_SERVER_PRIVATE_KEY</span></span><br><span class="line">    SERVER_USER: <span class="variable">$DEV_SERVER_USER</span></span><br><span class="line">    SERVER_URL: <span class="variable">$DEV_SERVER_URL</span></span><br><span class="line">    ENV: production</span><br><span class="line">    APP_PORT: 80</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>docker-compose.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  myCat:</span><br><span class="line">    image: registry.camcad.cn:9528/ci-cd/shopping</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;<span class="variable">$&#123;APP_PORT&#125;</span>:8000&quot;</span></span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure><p>您的 <code>.gitlab-ci.yml</code> 配置文件定义了三个部署阶段，每个阶段都旨在部署到不同的环境：开发环境 (<code>deploy_to_dev</code>)、预生产环境 (<code>deploy_to_staging</code>) 和生产环境 (<code>deploy_to_production</code>)。此外，您还定义了一个模板作业 <code>.IDeploy</code>，它被其他具体的部署作业扩展。以下是配置的详细说明：</p><h3 id="阶段-Stages"><a href="#阶段-Stages" class="headerlink" title="阶段 (Stages)"></a>阶段 (Stages)</h3><ul><li><code>deploy_to_dev</code>：部署到开发环境的阶段。</li><li><code>deploy_to_staging</code>：部署到预生产环境的阶段。</li><li><code>deploy_to_production</code>：部署到生产环境的阶段。</li></ul><h3 id="模板作业-Job-Template"><a href="#模板作业-Job-Template" class="headerlink" title="模板作业 (Job Template)"></a>模板作业 (Job Template)</h3><ul><li><code>.IDeploy</code><ul><li><code>tags</code>：指定了作业需要在具有 <code>mydebian</code> 标签的 Runner 上运行。</li><li><code>variables</code>：定义了一组变量，这些变量在模板中被设置为空字符串，它们将在扩展此模板的作业中被覆盖。</li><li><code>before_script</code>：初始化 SSH 代理并添加私钥。</li><li><code>script</code>：执行一系列命令，包括使用 <code>scp</code> 复制 <code>docker-compose.yml</code> 文件，通过 SSH 执行远程服务器上的 Docker 命令。</li><li><code>environment</code>：定义了环境名称和 URL，这些将在作业运行时被使用。</li></ul></li></ul><h3 id="具体作业-Jobs"><a href="#具体作业-Jobs" class="headerlink" title="具体作业 (Jobs)"></a>具体作业 (Jobs)</h3><ul><li><code>ssh_dev</code><ul><li><code>stage</code>：将作业分配到 <code>deploy_to_dev</code> 阶段。</li><li><code>extends</code>：扩展了 <code>.IDeploy</code> 模板作业。</li><li><code>variables</code>：覆盖了模板中定义的变量，为开发环境提供了具体的值。</li></ul></li><li><code>ssh_staging</code><ul><li>类似于 <code>ssh_dev</code>，但是将作业分配到 <code>deploy_to_staging</code> 阶段，并且设置了不同的环境变量，用于预生产环境。</li></ul></li><li><code>ssh_production</code><ul><li><code>stage</code>：将作业分配到 <code>deploy_to_production</code> 阶段。</li><li><code>needs</code>：指定了此作业依赖于 <code>ssh_staging</code> 作业，这意味着 <code>ssh_production</code> 将在 <code>ssh_staging</code> 成功完成后执行。</li><li><code>when: manual</code>：表示这个作业需要手动触发才会运行。</li><li><code>extends</code>：同样扩展了 <code>.IDeploy</code> 模板作业。</li><li><code>variables</code>：覆盖了模板中的变量，但是这里有一个问题：<code>ENV</code> 变量被设置为 <code>staging</code> 而不是 <code>production</code>，这可能是一个配置错误。</li></ul></li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li><code>SERVER_PRIVATE_KEY</code>、<code>SERVER_USER</code>、<code>SERVER_URL</code>、<code>CI_REGISTRY_USER</code>、<code>CI_REGISTRY_PASSWORD</code> 和 <code>CI_REGISTRY</code> 需要在项目的 CI&#x2F;CD 设置中定义为受保护的变量，以确保安全。</li><li><code>-o StrictHostKeyChecking=no</code> 参数禁用了 SSH 连接时的严格主机密钥检查，这在自动化脚本中很常见，但可能会带来安全风险。</li><li><code>docker login</code> 命令中的 <code>$CI_REGISTRY</code> 应该是您的 Docker Registry 的 URL，确保它已经被正确设置。</li><li><code>needs</code> 关键字用于定义作业之间的依赖关系，确保按照正确的顺序执行部署。</li><li><code>when: manual</code> 关键字用于阻止作业自动运行，需要在 GitLab UI 中手动触发。</li></ol><p>请确保所有的变量都已经被正确设置，并且远程服务器的 Docker 服务已经启动。此外，检查 <code>docker-compose.yml</code> 文件以确保它适用于目标环境，并且所有服务都配置了正确的端口。</p><p><img src="https://image.camcad.cn/vscode/20240502162123.png" alt="20240502162123"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.youtube.com/watch?v=XLaNujWr2Rk&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=23">為你自己學 GitLab CI&#x2F;CD Day 23 - 手動部署 Production 環境</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;手动控制部署production环境。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习17：通过模板的方式部署多个服务</title>
    <link href="http://notes.caxtoolkit.com/post/8255c28.html"/>
    <id>http://notes.caxtoolkit.com/post/8255c28.html</id>
    <published>2024-05-02T15:23:08.000Z</published>
    <updated>2025-08-09T14:42:20.852Z</updated>
    
    <content type="html"><![CDATA[<p>这个配置是自动化部署流程中通过 SSH 连接到远程服务器并执行 Docker Compose 命令的典型示例，适用于需要部署到不同环境的场景。</p><span id="more"></span><figure class="highlight bash"><figcaption><span>gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">stages:</span><br><span class="line">  - deploy_to_dev</span><br><span class="line">  - deploy_to_staging</span><br><span class="line"></span><br><span class="line">.IDeploy:</span><br><span class="line">  tags:</span><br><span class="line">    - mydebian</span><br><span class="line">  variables:</span><br><span class="line">    SERVER_PRIVATE_KEY: <span class="string">&quot;&quot;</span></span><br><span class="line">    SERVER_USER: <span class="string">&quot;&quot;</span></span><br><span class="line">    SERVER_URL: <span class="string">&quot;&quot;</span></span><br><span class="line">    ENV: <span class="string">&quot;&quot;</span></span><br><span class="line">    APP_PORT: <span class="string">&quot;&quot;</span></span><br><span class="line">  before_script:</span><br><span class="line">    - <span class="built_in">eval</span> $(ssh-agent -s)</span><br><span class="line">    - ssh-add &lt;(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SERVER_PRIVATE_KEY</span>&quot;</span>)</span><br><span class="line">  script:</span><br><span class="line">    - scp -o StrictHostKeyChecking=no ./docker-compose.yml </span><br><span class="line">      <span class="variable">$SERVER_USER</span>@<span class="variable">$SERVER_URL</span>:/<span class="variable">$SERVER_USER</span></span><br><span class="line"></span><br><span class="line">    - ssh -o StrictHostKeyChecking=no <span class="variable">$SERVER_USER</span>@<span class="variable">$SERVER_URL</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">     docker login -u <span class="variable">$CI_REGISTRY_USER</span> -p <span class="variable">$CI_REGISTRY_PASSWORD</span> <span class="variable">$CI_REGISTRY</span> &amp;&amp;</span></span><br><span class="line"><span class="string">     apt-get install docker-compose &amp;&amp;</span></span><br><span class="line"><span class="string">     export COMPOSE_PROJECT_NAME=<span class="variable">$ENV</span> &amp;&amp;</span></span><br><span class="line"><span class="string">     export APP_PORT=<span class="variable">$APP_PORT</span> &amp;&amp;</span></span><br><span class="line"><span class="string">     docker-compose down &amp;&amp;</span></span><br><span class="line"><span class="string">     docker-compose up -d&quot;</span></span><br><span class="line">  environment:</span><br><span class="line">    name: <span class="variable">$ENV</span></span><br><span class="line">    url: http://<span class="variable">$SERVER_URL</span>:<span class="variable">$APP_PORT</span></span><br><span class="line"></span><br><span class="line">ssh_dev:</span><br><span class="line">  stage: deploy_to_dev</span><br><span class="line">  extends: .IDeploy</span><br><span class="line">  variables:</span><br><span class="line">    SERVER_PRIVATE_KEY: <span class="variable">$DEV_SERVER_PRIVATE_KEY</span></span><br><span class="line">    SERVER_USER: <span class="variable">$DEV_SERVER_USER</span></span><br><span class="line">    SERVER_URL: <span class="variable">$DEV_SERVER_URL</span></span><br><span class="line">    ENV: dev</span><br><span class="line">    APP_PORT: 8000</span><br><span class="line"></span><br><span class="line">ssh_staging:</span><br><span class="line">  stage: deploy_to_staging</span><br><span class="line">  extends: .IDeploy</span><br><span class="line">  variables:</span><br><span class="line">    SERVER_PRIVATE_KEY: <span class="variable">$DEV_SERVER_PRIVATE_KEY</span></span><br><span class="line">    SERVER_USER: <span class="variable">$DEV_SERVER_USER</span></span><br><span class="line">    SERVER_URL: <span class="variable">$DEV_SERVER_URL</span></span><br><span class="line">    ENV: staging</span><br><span class="line">    APP_PORT: 80</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>docker-compose.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  myCat:</span><br><span class="line">    image: registry.camcad.cn:9528/ci-cd/shopping</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;<span class="variable">$&#123;APP_PORT&#125;</span>:8000&quot;</span></span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure><p>您的 <code>.gitlab-ci.yml</code> 配置文件定义了两个部署阶段 <code>deploy_to_dev</code> 和 <code>deploy_to_staging</code>，以及一个名为 <code>.IDeploy</code> 的模板作业，它被 <code>ssh_dev</code> 和 <code>ssh_staging</code> 作业扩展。以下是配置的详细说明：</p><h3 id="阶段-Stages"><a href="#阶段-Stages" class="headerlink" title="阶段 (Stages)"></a>阶段 (Stages)</h3><ul><li><code>deploy_to_dev</code>：定义了一个名为 <code>deploy_to_dev</code> 的阶段，通常用于部署到开发环境。</li><li><code>deploy_to_staging</code>：定义了一个名为 <code>deploy_to_staging</code> 的阶段，用于部署到预生产环境。</li></ul><h3 id="模板作业-Job-Template"><a href="#模板作业-Job-Template" class="headerlink" title="模板作业 (Job Template)"></a>模板作业 (Job Template)</h3><ul><li><code>.IDeploy</code><ul><li><code>tags</code>：指定了作业需要在具有 <code>mydebian</code> 标签的 Runner 上运行。</li><li><code>variables</code>：定义了一些变量，这些变量在模板中被设置为空字符串或空值，它们将在扩展此模板的作业中被覆盖。</li><li><code>before_script</code>：初始化 SSH 代理并添加私钥。</li><li><code>script</code>：执行一系列命令，包括使用 <code>scp</code> 复制 <code>docker-compose.yml</code> 文件，通过 SSH 执行远程服务器上的 Docker 命令。</li><li><code>environment</code>：定义了环境名称和 URL，这些将在作业运行时被使用。</li></ul></li></ul><h3 id="作业-Jobs"><a href="#作业-Jobs" class="headerlink" title="作业 (Jobs)"></a>作业 (Jobs)</h3><ul><li><code>ssh_dev</code><ul><li><code>stage</code>：将作业分配到 <code>deploy_to_dev</code> 阶段。</li><li><code>extends</code>：扩展了 <code>.IDeploy</code> 模板作业。</li><li><code>variables</code>：覆盖了模板中定义的变量，为开发环境提供了具体的值。</li></ul></li><li><code>ssh_staging</code><ul><li>类似于 <code>ssh_dev</code>，但是将作业分配到 <code>deploy_to_staging</code> 阶段，并且设置了不同的环境变量，用于预生产环境。</li></ul></li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li><code>SERVER_PRIVATE_KEY</code>、<code>SERVER_USER</code>、<code>SERVER_URL</code>、<code>CI_REGISTRY_USER</code>、<code>CI_REGISTRY_PASSWORD</code> 和 <code>CI_REGISTRY</code> 需要在项目的 CI&#x2F;CD 设置中定义为受保护的变量，以确保安全。</li><li><code>-o StrictHostKeyChecking=no</code> 参数禁用了 SSH 连接时的严格主机密钥检查，这在自动化脚本中很常见，但可能会带来安全风险。</li><li><code>docker-compose down</code> 命令会停止并删除所有服务及其网络，这可能会导致数据丢失，因此请确保这是预期的行为。</li><li><code>export COMPOSE_PROJECT_NAME=$ENV</code> 和 <code>export APP_PORT=$APP_PORT</code> 命令设置了环境变量，这些变量需要在 <code>docker-compose.yml</code> 文件中被正确使用。<br><img src="https://image.camcad.cn/vscode/20240502153253.png" alt="20240502153253"><br><img src="https://image.camcad.cn/vscode/20240502154604.png" alt="20240502154604"></li></ol><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://docs.docker.com/compose/compose-file/">New to Docker Compose?</a></p><p><a href="https://docs.docker.com/compose/environment-variables/envvars/">Set or change pre-defined environment variables in Docker Compose</a></p><p><a href="https://www.youtube.com/watch?v=k9XmJTh0vk4&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=21">為你自己學 GitLab CI&#x2F;CD Day 21 - 部署 Staging 伺服器</a></p><p><a href="https://www.youtube.com/watch?v=yA9awgMzUL8&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=22">為你自己學 GitLab CI&#x2F;CD Day 22 - 整理重複的工作</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这个配置是自动化部署流程中通过 SSH 连接到远程服务器并执行 Docker Compose 命令的典型示例，适用于需要部署到不同环境的场景。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习16：部署docker image到服务器上</title>
    <link href="http://notes.caxtoolkit.com/post/497256a2.html"/>
    <id>http://notes.caxtoolkit.com/post/497256a2.html</id>
    <published>2024-05-02T12:19:59.000Z</published>
    <updated>2025-08-09T14:42:20.852Z</updated>
    
    <content type="html"><![CDATA[<p>目的是通过 SSH 连接到远程服务器并执行一系列部署命令。</p><span id="more"></span><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight bash"><figcaption><span>gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">stages:</span><br><span class="line">  - deploy</span><br><span class="line"></span><br><span class="line">ssh_server:</span><br><span class="line">  stage: deploy</span><br><span class="line">  tags:</span><br><span class="line">    - mydebian</span><br><span class="line">  before_script:</span><br><span class="line">    - <span class="built_in">eval</span> $(ssh-agent -s)</span><br><span class="line">    - ssh-add &lt;(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$DEV_SERVER_PRIVATE_KEY</span>&quot;</span>)</span><br><span class="line">  script:</span><br><span class="line">    - scp -o StrictHostKeyChecking=no ./docker-compose.yml</span><br><span class="line">     <span class="variable">$DEV_SERVER_USER</span>@<span class="variable">$DEV_SERVER_URL</span>:/<span class="variable">$DEV_SERVER_USER</span></span><br><span class="line">    - ssh -o StrictHostKeyChecking=no <span class="variable">$DEV_SERVER_USER</span>@<span class="variable">$DEV_SERVER_URL</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">     docker login -u <span class="variable">$CI_REGISTRY_USER</span> -p <span class="variable">$CI_REGISTRY_PASSWORD</span> <span class="variable">$CI_REGISTRY</span> &amp;&amp;</span></span><br><span class="line"><span class="string">     apt-get install docker-compose &amp;&amp;</span></span><br><span class="line"><span class="string">     docker-compose down &amp;&amp;</span></span><br><span class="line"><span class="string">     docker-compose up -d</span></span><br><span class="line"><span class="string">     &quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>docker-compose.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  myCat:</span><br><span class="line">    image: registry.camcad.cn:9528/ci-cd/shopping</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;80:8000&quot;</span></span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure><h3 id="阶段-Stages"><a href="#阶段-Stages" class="headerlink" title="阶段 (Stages)"></a>阶段 (Stages)</h3><ul><li><code>deploy</code>：定义了一个名为 <code>deploy</code> 的阶段，通常用于部署过程中。</li></ul><h3 id="作业-Jobs"><a href="#作业-Jobs" class="headerlink" title="作业 (Jobs)"></a>作业 (Jobs)</h3><ul><li><code>ssh_server</code><ul><li><code>stage</code>：将作业分配到 <code>deploy</code> 阶段。</li><li><code>tags</code>：指定了作业需要在具有 <code>mydebian</code> 标签的 Runner 上运行。</li></ul></li></ul><h3 id="before-script"><a href="#before-script" class="headerlink" title="before_script"></a>before_script</h3><ul><li><code>eval $(ssh-agent -s)</code>：初始化 SSH 代理。</li><li><code>ssh-add &lt;(echo &quot;$DEV_SERVER_PRIVATE_KEY&quot;)</code>：将远程服务器的私钥添加到 SSH 代理中，以便后续的 SSH 连接可以使用该私钥进行认证。</li></ul><h3 id="script"><a href="#script" class="headerlink" title="script"></a>script</h3><ul><li><code>scp -o StrictHostKeyChecking=no ./docker-compose.yml $DEV_SERVER_USER@$DEV_SERVER_URL:/$DEV_SERVER_USER</code>：使用 <code>scp</code> 命令将本地的 <code>docker-compose.yml</code> 文件复制到远程服务器的指定用户目录下。</li><li><code>ssh -o StrictHostKeyChecking=no $DEV_SERVER_USER@$DEV_SERVER_URL &quot;...&quot;</code>：通过 SSH 连接到远程服务器并执行多个命令：<ul><li><code>docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY</code>：使用 GitLab 提供的用户名和密码登录到 GitLab Container Registry。</li><li><code>apt-get install docker-compose</code>：在远程服务器上安装 Docker Compose。</li><li><code>docker-compose down</code>：停止并删除所有由 <code>docker-compose.yml</code> 定义的容器、网络和卷。</li><li><code>docker-compose up -d</code>：在后台启动（或重启）所有服务。</li></ul></li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>请确保所有使用的环境变量（如 <code>$DEV_SERVER_PRIVATE_KEY</code>, <code>$DEV_SERVER_USER</code>, <code>$DEV_SERVER_URL</code>, <code>$CI_REGISTRY_USER</code>, <code>$CI_REGISTRY_PASSWORD</code>, <code>$CI_REGISTRY</code>）都已经在 GitLab CI&#x2F;CD 变量中正确设置。</li><li>使用 <code>-o StrictHostKeyChecking=no</code> 可以避免 SSH 连接时的主机密钥检查，这在自动化脚本中很常见，但可能会带来安全风险，因为它允许连接到未知的主机。</li><li>请确保远程服务器的 Docker 服务已经启动，因为 <code>docker-compose</code> 命令依赖于 Docker 服务。</li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://docs.docker.com/compose/compose-file/">New to Docker Compose?</a></p><p><a href="https://www.youtube.com/watch?v=eZ_ht6IRUx4&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=20">為你自己學 GitLab CI&#x2F;CD Day 20 - 部署 Image 到伺服器上</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;目的是通过 SSH 连接到远程服务器并执行一系列部署命令。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习15：使用SSH连接服务器</title>
    <link href="http://notes.caxtoolkit.com/post/3e2c2269.html"/>
    <id>http://notes.caxtoolkit.com/post/3e2c2269.html</id>
    <published>2024-05-02T00:26:29.000Z</published>
    <updated>2025-08-09T14:42:20.852Z</updated>
    
    <content type="html"><![CDATA[<p>该作业的目的是通过 SSH 连接到一个远程服务器并执行命令。</p><span id="more"></span><h3 id="生成ssh-keygen"><a href="#生成ssh-keygen" class="headerlink" title="生成ssh-keygen"></a>生成ssh-keygen</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -f 存放位置</span><br><span class="line"></span><br><span class="line">ssh-keygen -f ~/.ssh/gitlab-ci-cd</span><br></pre></td></tr></table></figure><p><strong>1、将私钥（PRIVATE KEY）添加到CI-CD环境变量中</strong><br><strong>2、将公钥（PUBLIC KEY）添加到被连接服务器<code>~/.ssh/authorized_keys</code>文件中</strong></p><h3 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h3><p><img src="https://image.camcad.cn/vscode/20240502003921.png" alt="20240502003921"></p><h3 id="gitlab-ci-yml-脚本"><a href="#gitlab-ci-yml-脚本" class="headerlink" title="gitlab-ci.yml 脚本"></a>gitlab-ci.yml 脚本</h3><figure class="highlight bash"><figcaption><span>gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">stages:</span><br><span class="line">  - connection</span><br><span class="line"></span><br><span class="line">ssh_server:</span><br><span class="line">  stage: connection</span><br><span class="line">  tags:</span><br><span class="line">    - mydebian</span><br><span class="line">  before_script:</span><br><span class="line">    - <span class="built_in">eval</span> $(ssh-agent -s)</span><br><span class="line">    - ssh-add &lt;(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$DEV_SERVER_PRIVATE_KEY</span>&quot;</span>)</span><br><span class="line">  script:</span><br><span class="line">    - ssh -o StrictHostKeyChecking=no <span class="variable">$DEV_SERVER_USER</span>@<span class="variable">$DEV_SERVER_URL</span> <span class="string">&quot;ls -al&quot;</span></span><br></pre></td></tr></table></figure><p>以下是配置的详细说明：</p><ol><li><p><code>stages</code>: 定义了一个名为 <code>connection</code> 的阶段，这个名称可以根据实际情况自定义。</p></li><li><p><code>ssh_server</code>: 定义了一个作业，它将在 <code>connection</code> 阶段执行。</p></li><li><p><code>tags</code>: 指定了作业需要在具有 <code>mydebian</code> 标签的 Runner 上运行。这意味着只有配置了 <code>mydebian</code> 标签的 GitLab Runner 会执行这个作业。</p></li><li><p><code>before_script</code>:</p><ul><li><code>eval $(ssh-agent -s)</code>: 初始化一个新的 SSH 会话并启动 SSH 代理。<code>eval</code> 命令用于执行由 <code>ssh-agent -s</code> 生成的命令，<code>-s</code> 参数表示在启动时不输出任何信息。</li><li><code>ssh-add &lt;(echo &quot;$DEV_SERVER_PRIVATE_KEY&quot;)</code>: 将 SSH 私钥添加到 SSH 代理中。这里使用了进程替换 <code>&lt;()</code> 来传递私钥内容，避免了将私钥写入文件，增加了安全性。</li></ul></li><li><p><code>script</code>:</p><ul><li><code>ssh -o StrictHostKeyChecking=no $DEV_SERVER_USER@$DEV_SERVER_URL &quot;ls -al&quot;</code>: 通过 SSH 连接到远程服务器并执行 <code>ls -al</code> 命令。这里使用了 <code>-o StrictHostKeyChecking=no</code> 选项来禁用严格的主机键检查，这样做可以避免在首次连接时出现警告或错误，但在生产环境中可能会带来安全风险，因为它允许连接到未验证的主机。</li></ul></li></ol><p>请注意以下几点：</p><ul><li>确保 <code>DEV_SERVER_PRIVATE_KEY</code>、<code>DEV_SERVER_USER</code> 和 <code>DEV_SERVER_URL</code> 这些环境变量已经在项目的 CI&#x2F;CD 设置中被正确配置，并且它们是受保护的，以防止敏感信息泄露。</li><li>禁用 <code>StrictHostKeyChecking</code> 可以简化自动化脚本，但请确保您信任目标主机，或者在生产环境中使用更安全的 SSH 配置。</li><li>作业中的 <code>ssh-agent</code> 和 <code>ssh-add</code> 命令依赖于 Runner 机器上安装了 SSH 客户端和相关的密钥管理工具。<br><img src="https://image.camcad.cn/vscode/20240502005618.png" alt="20240502005618"></li></ul><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>错误信息 <code>/root/.ssh/config line 9: garbage at end of line</code>指出在 SSH 配置文件 <code>/root/.ssh/config</code> 的第 9 行存在一些无法识别的内容。这通常是因为该行的格式不正确或者包含了不必要的字符。<br><img src="https://image.camcad.cn/vscode/20240502004939.png" alt="20240502004939"><br><strong>修改 Runner 服务器<code>~/.ssh/config</code>配置文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、打开你的SSH配置文件，通常是 ~/.ssh/config。</span><br><span class="line"></span><br><span class="line">2、找到第9行并检查末尾是否有任何无效字符，如空格、制表符、注释等。请注意，注释应该始终放在行的开头而不是末尾。</span><br><span class="line"></span><br><span class="line">3、如果有任何无效字符，请将其删除并保存文件。</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.youtube.com/watch?v=5r8cd1ygtR0&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=19">為你自己學 GitLab CI&#x2F;CD Day 19 - 使用 SSH 連線伺服器</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;该作业的目的是通过 SSH 连接到一个远程服务器并执行命令。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习14：使用docker compose</title>
    <link href="http://notes.caxtoolkit.com/post/f916f96d.html"/>
    <id>http://notes.caxtoolkit.com/post/f916f96d.html</id>
    <published>2024-05-01T21:08:51.000Z</published>
    <updated>2025-08-09T14:42:20.851Z</updated>
    
    <content type="html"><![CDATA[<p>Docker Compose 是一个用于定义和运行多容器 Docker 应用程序的工具。它是一个 YAML 文件，通常命名为 <code>docker-compose.yml</code>，用于配置应用程序的服务、网络和卷。通过使用 Docker Compose，你可以轻松地一起启动、停止和管理多个容器，而不需要逐个使用 Docker 命令行。</p><span id="more"></span><figure class="highlight docker"><figcaption><span>docker-compose.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.9&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  myCat:</span><br><span class="line">    image: registry.camcad.cn:<span class="number">9528</span>/ci-cd/shopping</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;8000:8000&quot;</span></span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure><p>您提供的是一个 <code>docker-compose.yml</code> 文件的内容，它用于定义一个 Docker Compose 项目。这个文件遵循版本 <code>3.9</code> 的格式规范，定义了一个名为 <code>myCat</code> 的服务。下面是对您提供的内容的解释：</p><ol><li><p><code>version: &#39;3.9&#39;</code>：指定了 Docker Compose 文件的版本，这有助于 Docker Compose 确定如何解析文件中的其他内容。</p></li><li><p><code>services</code>：这是定义服务的根关键字。在 Docker Compose 中，每个服务基本上对应于一个容器。</p></li><li><p><code>myCat</code>：这是服务的名称，您可以根据需要选择任何名称。</p></li><li><p><code>image: registry.camcad.cn:9528/ci-cd/shopping</code>：指定了服务使用的 Docker 镜像。这里使用的是一个私有仓库的地址，该仓库位于 <code>registry.camcad.cn</code> 上，端口为 <code>9528</code>，镜像的路径是 <code>ci-cd/shopping</code>。</p></li><li><p><code>ports</code>：定义了容器的端口映射。<code>- &quot;8000:8000&quot;</code> 表示将容器内部的 8000 端口映射到宿主机的 8000 端口。这意味着，当容器运行时，您可以通过访问宿主机的 8000 端口来与容器通信。</p></li><li><p><code>restart: always</code>：这是一个重启策略，它指定了容器在退出时应该如何重启。<code>always</code> 表示无论退出状态如何，容器总是重新启动。</p></li></ol><p>要使用这个 <code>docker-compose.yml</code> 文件启动服务，您需要在文件所在的目录下打开命令行或终端，然后运行以下命令：</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure><p>这将启动 <code>myCat</code> 服务，并将其绑定到宿主机的 8000 端口。如果您希望在后台运行服务，可以使用 <code>-d</code> 选项：</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><code>docker-compose down</code>用于停止、删除容器、网络、卷以及图像，从而清理和重置整个Docker Compose项目。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://docs.docker.com/compose/compose-file/">New to Docker Compose?</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Docker Compose 是一个用于定义和运行多容器 Docker 应用程序的工具。它是一个 YAML 文件，通常命名为 &lt;code&gt;docker-compose.yml&lt;/code&gt;，用于配置应用程序的服务、网络和卷。通过使用 Docker Compose，你可以轻松地一起启动、停止和管理多个容器，而不需要逐个使用 Docker 命令行。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/tags/CI-CD/"/>
    
    <category term="docker" scheme="http://notes.caxtoolkit.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>ffmpeg常用命令</title>
    <link href="http://notes.caxtoolkit.com/post/3c4e255.html"/>
    <id>http://notes.caxtoolkit.com/post/3c4e255.html</id>
    <published>2024-04-29T16:10:06.000Z</published>
    <updated>2025-08-09T14:42:20.855Z</updated>
    
    <content type="html"><![CDATA[<p>FFmpeg是一个非常强大的开源工具，它可以用来处理视频和音频文件。以下是一些常用的FFmpeg命令，这些命令可以帮助你完成各种视频和音频处理任务：</p><span id="more"></span><p><strong>音频转码（m4a转mp3）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i <span class="string">&quot;目标文件.m4a&quot;</span> -y -acodec libmp3lame -aq 0 <span class="string">&quot;输出文件.mp3&quot;</span></span><br></pre></td></tr></table></figure><p><strong>转换视频格式</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 output.avi</span><br></pre></td></tr></table></figure><p><strong>提取音频</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i video.mp4 -q:a 0 -map a audio.mp3</span><br></pre></td></tr></table></figure><p><strong>视频截图</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i video.mp4 -ss 00:00:10 -vframes 1 image.jpg</span><br></pre></td></tr></table></figure><p><strong>裁剪视频</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -filter:v <span class="string">&quot;crop=w:h:x:y&quot;</span> output.mp4</span><br></pre></td></tr></table></figure><p><strong>视频合并</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i <span class="string">&quot;concat:part1.mp4|part2.mp4&quot;</span> -c copy final.mp4</span><br></pre></td></tr></table></figure><p><strong>调整视频码率</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -b:v 500k output.mp4</span><br></pre></td></tr></table></figure><p><strong>视频转GIF</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -ss 00:00:10 -t 00:00:05 -s 320x240 -pix_fmt rgb24 out.gif</span><br></pre></td></tr></table></figure><p><strong>视频减速播放</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -filter:v <span class="string">&quot;setpts=0.5*PTS&quot;</span> output.mp4</span><br></pre></td></tr></table></figure><p><strong>视频旋转</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -vf <span class="string">&quot;transpose=1&quot;</span> output.mp4</span><br></pre></td></tr></table></figure><p><strong>视频加水印</strong>：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -i watermark.png -filter_complex <span class="string">&quot;overlay=10:10&quot;</span> output.mp4</span><br></pre></td></tr></table></figure><br><strong>视频压缩</strong>：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -vf <span class="string">&quot;scale=-2:720&quot;</span> -c:a copy -c:v libx264 -crf 23 output.mp4</span><br></pre></td></tr></table></figure><br><strong>音频视频同步</strong>：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i desynchronized_video.mp4 -af <span class="string">&quot;adelay=-0.5&quot;</span> synchronized.mp4</span><br></pre></td></tr></table></figure><br><strong>提取视频的某个时间段</strong>：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -ss 00:00:10 -t 00:01:00 -c copy output.mp4</span><br></pre></td></tr></table></figure><br><strong>视频帧率调整</strong>：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -r 30 output.mp4</span><br></pre></td></tr></table></figure><br><strong>音频通道转换</strong>：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp3 -ac 2 output.mp3</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;FFmpeg是一个非常强大的开源工具，它可以用来处理视频和音频文件。以下是一些常用的FFmpeg命令，这些命令可以帮助你完成各种视频和音频处理任务：&lt;/p&gt;</summary>
    
    
    
    <category term="辅助" scheme="http://notes.caxtoolkit.com/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="ffmpeg" scheme="http://notes.caxtoolkit.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习13：自动递增docker image版本</title>
    <link href="http://notes.caxtoolkit.com/post/e57fb111.html"/>
    <id>http://notes.caxtoolkit.com/post/e57fb111.html</id>
    <published>2024-04-28T23:54:09.000Z</published>
    <updated>2025-08-09T14:42:20.851Z</updated>
    
    <content type="html"><![CDATA[<p>Gitlab实现Container Registry上传的image自动递增版本号。</p><span id="more"></span><figure class="highlight yaml"><figcaption><span>.gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">publish</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build_docker_image:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mydebian</span></span><br><span class="line">  <span class="attr">before_script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sudo</span> <span class="string">apt-get</span> <span class="string">install</span> <span class="string">jq</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">export</span> <span class="string">IMAGE_VERSION=$(jq</span> <span class="string">-r</span> <span class="string">&#x27;.version&#x27;</span> <span class="string">deno.json)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">export</span> <span class="string">CUT_COMMIT_SHA=$(echo</span> <span class="string">$CI_COMMIT_SHA</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-c</span> <span class="number">1</span><span class="number">-8</span><span class="string">)</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-f</span> <span class="string">./DockerFile</span> <span class="string">.</span> <span class="string">-t</span> <span class="string">$CI_REGISTRY_IMAGE:$IMAGE_VERSION-build-$CUT_COMMIT_SHA</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">tag</span> <span class="string">$CI_REGISTRY_IMAGE:$IMAGE_VERSION-build-$CUT_COMMIT_SHA</span> <span class="string">$CI_REGISTRY_IMAGE:latest</span></span><br><span class="line"></span><br><span class="line"><span class="attr">push-to-registry:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">publish</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mydebian</span></span><br><span class="line">  <span class="attr">needs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">job:</span> <span class="string">build_docker_image</span></span><br><span class="line">  <span class="attr">before_script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">export</span> <span class="string">IMAGE_VERSION=$(jq</span> <span class="string">-r</span> <span class="string">&#x27;.version&#x27;</span> <span class="string">deno.json)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">export</span> <span class="string">CUT_COMMIT_SHA=$(echo</span> <span class="string">$CI_COMMIT_SHA</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-c</span> <span class="number">1</span><span class="number">-8</span><span class="string">)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">login</span> <span class="string">-u</span> <span class="string">$CI_REGISTRY_USER</span> <span class="string">-p</span> <span class="string">$CI_REGISTRY_PASSWORD</span> <span class="string">$CI_REGISTRY</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">push</span> <span class="string">$CI_REGISTRY_IMAGE:$IMAGE_VERSION-build-$CUT_COMMIT_SHA</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">push</span> <span class="string">$CI_REGISTRY_IMAGE:latest</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><figcaption><span>deno.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;V0.0.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    ......</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这个配置定义了两个阶段（<code>build</code> 和 <code>publish</code>）以及两个与之相关的作业（<code>build_docker_image</code> 和 <code>push-to-registry</code>）。下面是对您提供的配置的解释：</p><h3 id="阶段-Stages"><a href="#阶段-Stages" class="headerlink" title="阶段 (Stages)"></a>阶段 (Stages)</h3><ul><li><code>stages</code>: 定义了 CI&#x2F;CD 流水线中的不同阶段。在这个例子中，有两个阶段：<code>build</code> 和 <code>publish</code>。</li></ul><h3 id="作业-build-docker-image"><a href="#作业-build-docker-image" class="headerlink" title="作业: build_docker_image"></a>作业: build_docker_image</h3><ul><li><code>stage</code>: 指定作业属于哪个阶段，在这种情况下是 <code>build</code>。</li><li><code>tags</code>: 指定了运行此作业所需的标签，这里使用的是 <code>mydebian</code>，对应于具有 Debian 操作系统的特定 Runner。</li><li><code>before_script</code>: 在执行 <code>script</code> 部分命令之前运行的脚本。这里安装了 <code>jq</code> 工具，用于解析 JSON，并设置了两个环境变量 <code>IMAGE_VERSION</code> 和 <code>CUT_COMMIT_SHA</code>。</li><li><code>script</code>: 定义了作业的实际命令。这里使用了 Docker 来构建一个镜像，并给它打上两个标签：一个是带有版本和短提交哈希的标签，另一个是 <code>latest</code> 标签。</li></ul><h3 id="作业-push-to-registry"><a href="#作业-push-to-registry" class="headerlink" title="作业: push-to-registry"></a>作业: push-to-registry</h3><ul><li><code>stage</code>: 指定作业属于哪个阶段，在这种情况下是 <code>publish</code>。</li><li><code>tags</code>: 同样指定了运行此作业所需的标签。</li><li><code>needs</code>: 定义了此作业的依赖关系，它必须在 <code>build_docker_image</code> 作业完成后才能运行。</li><li><code>before_script</code>: 在执行 <code>script</code> 部分命令之前运行的脚本。这里设置了与 <code>build_docker_image</code> 作业相同的环境变量，并执行了 Docker 登录命令。</li><li><code>script</code>: 定义了将镜像推送到容器镜像仓库的命令。</li></ul><p>这个配置文件的目的是自动化 Docker 镜像的构建和推送过程。首先，它会构建一个新的 Docker 镜像，然后，如果 <code>build_docker_image</code> 作业成功，<code>push-to-registry</code> 作业将会把镜像推送到配置的容器镜像仓库。</p><p>请注意，这个配置依赖于一些环境变量，如 <code>CI_REGISTRY_IMAGE</code>, <code>CI_COMMIT_SHA</code>, <code>CI_REGISTRY_USER</code>, <code>CI_REGISTRY_PASSWORD</code> 等，这些通常由 CI 系统提供。</p><p><img src="https://image.camcad.cn/vscode/20240429000219.png" alt="20240429000219"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://docs.gitlab.com/ee/ci/variables/predefined_variables.html">Predefined CI&#x2F;CD variables reference</a></p><p><a href="https://semver.org/lang/zh-CN/">语义化版本控制规范（SemVer）</a></p><p><a href="https://www.youtube.com/watch?v=jG3Ne543Ua0&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=17">為你自己學 GitLab CI&#x2F;CD Day 17 - 專案演練 part 4 自動遞增 Image 版號</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Gitlab实现Container Registry上传的image自动递增版本号。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习12：将工程推上Gitlab Container Registry</title>
    <link href="http://notes.caxtoolkit.com/post/4df39e.html"/>
    <id>http://notes.caxtoolkit.com/post/4df39e.html</id>
    <published>2024-04-28T21:39:26.000Z</published>
    <updated>2025-08-09T14:42:20.851Z</updated>
    
    <content type="html"><![CDATA[<p>GitLab Container Registry 是 GitLab 提供的一个内置功能，它允许用户在 GitLab 的项目中直接存储和管理 Docker 镜像。每个项目都可以拥有自己的空间来存储其 Docker 镜像，这使得开发者可以轻松地与团队成员共享镜像，并且可以在 CI&#x2F;CD 管道中使用这些镜像进行自动化测试和部署。</p><span id="more"></span><figure class="highlight yaml"><figcaption><span>.gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">publish</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build_docker_image:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mydebian</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-f</span> <span class="string">./DockerFile</span> <span class="string">.</span> <span class="string">-t</span> <span class="string">$CI_REGISTRY_IMAGE:V0.0.1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">push-to-registry:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">publish</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mydebian</span></span><br><span class="line">  <span class="attr">needs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">job:</span> <span class="string">build_docker_image</span></span><br><span class="line">  <span class="attr">before_script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">login</span> <span class="string">-u</span> <span class="string">$CI_REGISTRY_USER</span> <span class="string">-p</span> <span class="string">$CI_REGISTRY_PASSWORD</span> <span class="string">$CI_REGISTRY</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">push</span> <span class="string">$CI_REGISTRY_IMAGE:V0.0.1</span></span><br></pre></td></tr></table></figure><p><a href="https://docs.gitlab.com/ee/ci/variables/predefined_variables.html">gitlab 预定义的CI&#x2F;CD变量参考</a></p><ul><li>1、<code>docker build</code>命令来构建一个Docker镜像。</li><li>2、<code>docker login</code>命令来登录到 GitLab Container Registry 中。</li><li>3、<code>docker push</code>命令将构建好的镜像推送到 GitLab Container Registry 中。</li></ul><p><strong>CI_REGISTRY_IMAGE</strong>：它指向当前项目的容器镜像仓库地址。<br><strong>CI_REGISTRY_USER</strong>：它用于指定容器镜像仓库的用户名。<br><strong>CI_REGISTRY_PASSWORD</strong>：这个变量用于存储访问 GitLab Container Registry 所需的密码。<br><strong>CI_REGISTRY</strong>：它代表了当前项目的容器镜像仓库的URL。</p><p><img src="https://image.camcad.cn/vscode/20240428215815.png" alt="20240428215815"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://docs.gitlab.com/ee/ci/variables/predefined_variables.html">Predefined CI&#x2F;CD variables reference</a></p><p><a href="https://www.youtube.com/watch?v=ffl6KQcwh-M&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=16">為你自己學 GitLab CI&#x2F;CD Day 16 - 專案演練 part 3 推上 Docker Registry</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;GitLab Container Registry 是 GitLab 提供的一个内置功能，它允许用户在 GitLab 的项目中直接存储和管理 Docker 镜像。每个项目都可以拥有自己的空间来存储其 Docker 镜像，这使得开发者可以轻松地与团队成员共享镜像，并且可以在 CI&amp;#x2F;CD 管道中使用这些镜像进行自动化测试和部署。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习11：把工程打包成docker image</title>
    <link href="http://notes.caxtoolkit.com/post/d092dd69.html"/>
    <id>http://notes.caxtoolkit.com/post/d092dd69.html</id>
    <published>2024-04-26T21:20:12.000Z</published>
    <updated>2025-08-09T14:42:20.851Z</updated>
    
    <content type="html"><![CDATA[<p>Docker可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p><span id="more"></span><h3 id="decker基础操作"><a href="#decker基础操作" class="headerlink" title="decker基础操作"></a>decker基础操作</h3><p><a href="https://notes.caxtoolkit.com/post/c1d6c914.html">https://notes.caxtoolkit.com/post/c1d6c914.html</a></p><h3 id="gitlab-ci-yml"><a href="#gitlab-ci-yml" class="headerlink" title="gitlab-ci.yml"></a>gitlab-ci.yml</h3><figure class="highlight yml"><figcaption><span>gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">testing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line"></span><br><span class="line"><span class="attr">run_tests:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">testing</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">denoland/deno:latest</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deno</span> <span class="string">test</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build_docker_image:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mydebian</span></span><br><span class="line">  <span class="attr">needs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">job:</span> <span class="string">run_tests</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-f</span> <span class="string">./DockerFile</span> <span class="string">.</span> <span class="string">-t</span> <span class="string">hellocat</span></span><br></pre></td></tr></table></figure><h3 id="DockerFile"><a href="#DockerFile" class="headerlink" title="DockerFile"></a>DockerFile</h3><figure class="highlight docker"><figcaption><span>DockerFile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> denoland/deno:alpine-<span class="number">1.26</span>.<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> deno cache main.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [ <span class="string">&quot;run&quot;</span>,<span class="string">&quot;--allow-all&quot;</span>,<span class="string">&quot;main.ts&quot;</span> ]</span></span><br></pre></td></tr></table></figure><p><strong>FROM</strong>：这里使用了Deno的Alpine版本 1.26.0 作为基础。<br><strong>WORKDIR</strong>：设置工作目录为<code>/app</code>，之后的指令将在这个目录下执行。<br><strong>COPY</strong>：将当前目录中的所有文件复制到容器中的<code>/app</code>目录下。<br><strong>EXPOSE</strong>：指定容器将监听的端口号为 8000。<br><strong>RUN</strong>：在容器中运行<code>deno cache</code>命令<br><strong>CMD</strong>：指定容器启动时的默认命令。在这里，它运行了<code>main.ts</code>文件，并且使用了<code>--allow-all</code>参数，表示允许所有的权限请求。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.youtube.com/watch?v=8d26a90UR9s&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=15">為你自己學 GitLab CI&#x2F;CD Day 15 - 專案演練 part 2 把專案打包成 Docker Image</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Docker可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="http://notes.caxtoolkit.com/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="http://notes.caxtoolkit.com/tags/CI-CD/"/>
    
  </entry>
  
</feed>
