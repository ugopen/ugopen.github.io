<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蚂蚁Emmet</title>
  
  <subtitle>逆境求生存，顺境求发展</subtitle>
  <link href="https://notes.camcad.cn/atom.xml" rel="self"/>
  
  <link href="https://notes.camcad.cn/"/>
  <updated>2023-04-03T11:44:08.560Z</updated>
  <id>https://notes.camcad.cn/</id>
  
  <author>
    <name>蚂蚁Emmet</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>职工管理系统18：清空文件</title>
    <link href="https://notes.camcad.cn/post/c543387c.html"/>
    <id>https://notes.camcad.cn/post/c543387c.html</id>
    <published>2020-07-14T16:08:38.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="15、清空文件"><a href="#15、清空文件" class="headerlink" title="15、清空文件"></a>15、清空文件</h1><p><strong>功能描述：</strong>将文件中记录数据清空。</p><h2 id="15-1-清空函数声明"><a href="#15-1-清空函数声明" class="headerlink" title="15.1 清空函数声明"></a>15.1 清空函数声明</h2><p>在workerManager.h中添加成员函数<code>void clean_File( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clean_File</span>()</span>;</span><br></pre></td></tr></table></figure><h2 id="15-2-清空函数实现"><a href="#15-2-清空函数实现" class="headerlink" title="15.2 清空函数实现"></a>15.2 清空函数实现</h2><p>在workerManager.cpp中实现成员函数<code>void clean_File( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空文件</span></span><br><span class="line"><span class="keyword">void</span> workerManager::clean_File()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;确认清空？&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1、确认清空&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2、返回退出&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//打开模式 ios::trunc 如果存在删除文件并重新创建</span></span><br><span class="line">            <span class="function">ofstream <span class="title">ofs</span>(<span class="params">FILENAME, ios::trunc</span>)</span>;     <span class="comment">//删除文件后重新创建</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//关闭文本</span></span><br><span class="line">            ofs.close();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray !=NULL)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//删除堆区每个职工的对象</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Empnum; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray[i]!=NULL)</span><br><span class="line">                    &#123;</span><br><span class="line">                        delete <span class="keyword">this</span>-&gt;m_Emparray[i];</span><br><span class="line">                        <span class="keyword">this</span>-&gt;m_Emparray[i] = NULL;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//删除堆区数据指针</span></span><br><span class="line">                delete[] <span class="keyword">this</span>-&gt;m_Emparray;</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Emparray = NULL;</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Empnum = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;清空成功!&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="15-3-测试清空文件"><a href="#15-3-测试清空文件" class="headerlink" title="15.3 测试清空文件"></a>15.3 测试清空文件</h2><p>在main函数分支7选项中，调用清空文件接口<br><img src="http://image.camcad.cn/2020/06/2020061602151243.jpg"> 测试1-当文件不存在或记录为空时<br><img src="http://image.camcad.cn/2020/06/2020061602163578.jpg"> 测试2-当清空数据库数据时<br><img src="http://image.camcad.cn/2020/06/2020061602184696.jpg"> 数据库文件为空！<br><img src="http://image.camcad.cn/2020/06/202006160219337.jpg"></p>]]></content>
    
    
    <summary type="html">清空文件</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统17：排序</title>
    <link href="https://notes.camcad.cn/post/960c29f6.html"/>
    <id>https://notes.camcad.cn/post/960c29f6.html</id>
    <published>2020-07-14T14:02:56.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="14、排序"><a href="#14、排序" class="headerlink" title="14、排序"></a>14、排序</h1><p><strong>功能描述：</strong>按照职工编号进行排序，排序的顺序由用户指定。</p><h2 id="14-1-排序函数声明"><a href="#14-1-排序函数声明" class="headerlink" title="14.1 排序函数声明"></a>14.1 排序函数声明</h2><p>在workerManager.h中添加成员函数<code>void sort_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编号排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_Emp</span>()</span>;</span><br></pre></td></tr></table></figure><h2 id="14-2-排序函数实现"><a href="#14-2-排序函数实现" class="headerlink" title="14.2 排序函数实现"></a>14.2 排序函数实现</h2><p>在workerManager.cpp中实现成员函数<code>void sort_Emp( )&#39;</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//排序</span></span><br><span class="line"><span class="keyword">void</span> workerManager::sort_Emp()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入排序选项模式：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1、升序排序&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2、降序排序&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Empnum; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//最小值 或 最大值</span></span><br><span class="line">            <span class="built_in">int</span> minormax = i;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> j = i+<span class="number">1</span>; j &lt; <span class="keyword">this</span>-&gt;m_Empnum; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">select</span>==<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray[minormax]-&gt;m_Id &gt; <span class="keyword">this</span>-&gt;m_Emparray[j]-&gt;m_Id)</span><br><span class="line">                    &#123;</span><br><span class="line">                        minormax = j;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray[minormax]-&gt;m_Id &lt; <span class="keyword">this</span>-&gt;m_Emparray[j]-&gt;m_Id)</span><br><span class="line">                    &#123;</span><br><span class="line">                        minormax = j;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i !=minormax)</span><br><span class="line">            &#123;</span><br><span class="line">                Worker *tmep = <span class="keyword">this</span>-&gt;m_Emparray[i];</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Emparray[i] = <span class="keyword">this</span>-&gt;m_Emparray[minormax];</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Emparray[minormax] = tmep;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;排序更改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//保存数据</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;save();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//显示数据</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;show_Emp();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-3-测试排序功能"><a href="#14-3-测试排序功能" class="headerlink" title="14.3 测试排序功能"></a>14.3 测试排序功能</h2><p>在main函数分支6选项中，调用排序职工接口：<br><img src="http://image.camcad.cn/2020/06/2020061514293666-524x1024.jpg"> 测试1-文件不存在或记录为空<br><img src="http://image.camcad.cn/2020/06/2020061514322415-1024x615.jpg"> 测试2-升序排序<br><img src="http://image.camcad.cn/2020/06/2020061514350265-1024x667.jpg"> 测试3-降序排序<br><img src="http://image.camcad.cn/2020/06/2020061514361573-1024x673.jpg"></p>]]></content>
    
    
    <summary type="html">排序</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统16：查找职工</title>
    <link href="https://notes.camcad.cn/post/97bcc53.html"/>
    <id>https://notes.camcad.cn/post/97bcc53.html</id>
    <published>2020-07-14T09:07:22.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="13、查找职工"><a href="#13、查找职工" class="headerlink" title="13、查找职工"></a>13、查找职工</h1><p><strong>功能描述：</strong>提供两种查找职工方式，一种按照职工编号，另一种按照职工姓名。</p><h2 id="13-1-查找职工函数声明"><a href="#13-1-查找职工函数声明" class="headerlink" title="13.1 查找职工函数声明"></a>13.1 查找职工函数声明</h2><p>在workerManager.h中添加成员函数：<code>void find_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找职工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find_Emp</span>()</span>;</span><br></pre></td></tr></table></figure><h2 id="13-2-查找职工函数实现"><a href="#13-2-查找职工函数实现" class="headerlink" title="13.2 查找职工函数实现"></a>13.2 查找职工函数实现</h2><p>在workerManager.cpp中实现成员函数<code>void find_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找职工</span></span><br><span class="line"><span class="keyword">void</span> workerManager::find_Emp()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在或者记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请选择查找模式：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1、职工编号查找&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2、职工姓名查找&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//职工编号查找</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> id = <span class="number">0</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入需要查找的职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> ret = <span class="keyword">this</span>-&gt;isExist(id);</span><br><span class="line">            <span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;查找完成，结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Emparray[ret]-&gt;showInfo();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;输入的职工编号有误或不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//职工编号姓名</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span>==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> name;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入需要查找的职工姓名&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//标志姓名是否存在</span></span><br><span class="line">            <span class="built_in">bool</span> isName = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Empnum; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray[i]-&gt;m_Name == name)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;查找到职工编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Emparray[i]-&gt;m_Id &lt;&lt; <span class="string">&quot; 信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">this</span>-&gt;m_Emparray[i]-&gt;showInfo();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//姓名存在</span></span><br><span class="line">                    isName = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!isName)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;查找的职工姓名有误或不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入的选项有误或不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-3-测试查找职工"><a href="#13-3-测试查找职工" class="headerlink" title="13.3 测试查找职工"></a>13.3 测试查找职工</h2><p>在main函数分支5选项中，调用查找职工接口：<br><img src="http://image.camcad.cn/2020/06/2020061509372916-768x1024.jpg"> 测试1-按照职工编号查找（不存在）<br><img src="http://image.camcad.cn/2020/06/2020061509395615.jpg"><br>测试2-按照职工编号查找（存在）<br><img src="http://image.camcad.cn/2020/06/2020061509423267-1024x703.jpg"> 测试3-按照职工姓名查找（不存在）<br><img src="http://image.camcad.cn/2020/06/2020061509442760.jpg"> 测试4-按照职工姓名查找（存在）<br><img src="http://image.camcad.cn/2020/06/2020061509453398-1024x670.jpg"></p>]]></content>
    
    
    <summary type="html">查找职工</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统15：修改职工</title>
    <link href="https://notes.camcad.cn/post/90ed886a.html"/>
    <id>https://notes.camcad.cn/post/90ed886a.html</id>
    <published>2020-07-13T18:46:16.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="12、修改职工"><a href="#12、修改职工" class="headerlink" title="12、修改职工"></a>12、修改职工</h1><p><strong>功能描述</strong>能够按照职工的编号对职工信息进行修改并保存。</p><h2 id="12-1-修改职工函数声明"><a href="#12-1-修改职工函数声明" class="headerlink" title="12.1 修改职工函数声明"></a>12.1 修改职工函数声明</h2><p>在workerManager.h中添加成员函数<code>void mod_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加职工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mod_Emp</span>()</span>;</span><br></pre></td></tr></table></figure><h2 id="12-2-修改职工函数实现"><a href="#12-2-修改职工函数实现" class="headerlink" title="12.2 修改职工函数实现"></a>12.2 修改职工函数实现</h2><p>在workerManager.cpp中实现成员函数<code>void mod_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加职工</span></span><br><span class="line"><span class="keyword">void</span> workerManager::mod_Emp()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在或者记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> id;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入需要修改的职工id号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line">        <span class="built_in">int</span> ret = <span class="keyword">this</span>-&gt;isExist(id);</span><br><span class="line">        <span class="keyword">if</span> (ret==<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入的id有误或不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> new_id = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">string</span> new_name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="built_in">int</span> new_deptId = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            delete <span class="keyword">this</span>-&gt;m_Emparray[ret];</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;查到：&quot;</span> &lt;&lt; ret &lt;&lt; <span class="string">&quot;号职工！\n请输入职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cin &gt;&gt; new_id;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入职工姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cin &gt;&gt; new_name;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入职工岗位,对应以下选择&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;1、员工\n2、经理\n3、总裁&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cin &gt;&gt; new_deptId;</span><br><span class="line"></span><br><span class="line">            Worker *worker = NULL;</span><br><span class="line">            <span class="keyword">switch</span> (new_deptId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                worker = <span class="keyword">new</span> Employee(new_id, new_name, new_deptId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                worker = <span class="keyword">new</span> Manager(new_id, new_name, new_deptId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                worker = <span class="keyword">new</span> Boss(new_id, new_name, new_deptId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//数组数据更新</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;m_Emparray[ret] = worker;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//保存至文件</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">修改职工</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统14：删除职工</title>
    <link href="https://notes.camcad.cn/post/f80d1cb6.html"/>
    <id>https://notes.camcad.cn/post/f80d1cb6.html</id>
    <published>2020-07-13T16:18:43.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="11、删除职工"><a href="#11、删除职工" class="headerlink" title="11、删除职工"></a>11、删除职工</h1><p><strong>功能描述：</strong>按照职工的编号进行删除职工操作。</p><h2 id="11-1-删除职工函数声明"><a href="#11-1-删除职工函数声明" class="headerlink" title="11.1 删除职工函数声明"></a>11.1 删除职工函数声明</h2><p>在workerManager.h中添加成员函数<code>void del_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除职工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del_Emp</span>()</span>;</span><br></pre></td></tr></table></figure><h2 id="11-2-职工是否存在函数声明"><a href="#11-2-职工是否存在函数声明" class="headerlink" title="11.2 职工是否存在函数声明"></a>11.2 职工是否存在函数声明</h2><p>很多功能都需要用到根据职工是否存在再来进行操作如：删除职工、修改职工、查找职工。 因此添加该公告函数，以便后续调用。 在workerManager.h中添加成员函数<code>int isExist(int id);</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按照职工编号判断职工是否存在，若存在返回职工所在数据中位置，不存在返回-1；</span></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">isExist</span>(<span class="params"><span class="built_in">int</span> id</span>)</span>;</span><br></pre></td></tr></table></figure><h2 id="11-3-职工是否存在函数实现"><a href="#11-3-职工是否存在函数实现" class="headerlink" title="11.3 职工是否存在函数实现"></a>11.3 职工是否存在函数实现</h2><p>在workerManager.cpp中实现成员函数：<code>int isExist(int id);</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按照职工编号判断职工是否存在，若存在返回职工所在数据中位置，不存在返回-1；</span></span><br><span class="line"><span class="built_in">int</span> workerManager::isExist(<span class="built_in">int</span> id)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Empnum; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray[i]-&gt;m_Id == id)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-4-删除职工函数实现"><a href="#11-4-删除职工函数实现" class="headerlink" title="11.4 删除职工函数实现"></a>11.4 删除职工函数实现</h2><p>在workerManager.cpp中实现成员函数：<code>voic del_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除职工</span></span><br><span class="line"><span class="keyword">void</span> workerManager::del_Emp()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在或者数据为空&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> id = <span class="number">0</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入需要删除的id号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> ret = <span class="keyword">this</span>-&gt;isExist(id);</span><br><span class="line">        <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入的id有误或者不存在！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = ret; i &lt; <span class="keyword">this</span>-&gt;m_Empnum - <span class="number">1</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//数据前移</span></span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Emparray[i] = <span class="keyword">this</span>-&gt;m_Emparray[i + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//更新数组中记录人员个数</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;m_Empnum--;    </span><br><span class="line"></span><br><span class="line">            <span class="comment">//保存数据</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;save();</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-5-测试删除职工"><a href="#11-5-测试删除职工" class="headerlink" title="11.5 测试删除职工"></a>11.5 测试删除职工</h2><p>在main函数分支3选项中，调用删除职工接口 <img src="http://image.camcad.cn/2020/06/2020061502474579-797x1024.jpg"> 测试1-删除不存在的职工情况 <img src="http://image.camcad.cn/2020/06/2020061502492790.jpg"> 测试2-删除存在的职工情况 <img src="http://image.camcad.cn/2020/06/2020061502510463-1024x648.jpg"></p>]]></content>
    
    
    <summary type="html">删除职工</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统13：显示职工</title>
    <link href="https://notes.camcad.cn/post/410390e.html"/>
    <id>https://notes.camcad.cn/post/410390e.html</id>
    <published>2020-07-13T11:13:29.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="10、显示职工"><a href="#10、显示职工" class="headerlink" title="10、显示职工"></a>10、显示职工</h1><p><strong>功能描述：</strong>显示当前所有职工信息。</p><h2 id="10-1-显示职工函数声明"><a href="#10-1-显示职工函数声明" class="headerlink" title="10.1 显示职工函数声明"></a>10.1 显示职工函数声明</h2><p>在workerManager.h中添加成员函数<code>void show_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示职工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_Emp</span>()</span>;</span><br></pre></td></tr></table></figure><h3 id="10-2-显示职工函数实现"><a href="#10-2-显示职工函数实现" class="headerlink" title="10.2 显示职工函数实现"></a>10.2 显示职工函数实现</h3><p>在workerManager.cpp中实现成员函数<code>void show_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示职工</span></span><br><span class="line"><span class="keyword">void</span> workerManager::show_Emp()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;数据库文件不存在或者记录为空&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Empnum; i++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>-&gt;m_Emparray[i]-&gt;showInfo();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-3-测试显示职工"><a href="#10-3-测试显示职工" class="headerlink" title="10.3 测试显示职工"></a>10.3 测试显示职工</h3><p>在main函数分支2选项中，调用显示职工接口<br><img src="http://image.camcad.cn/2020/06/2020061409565759-879x1024.jpg"> 测试分别测试文件为空和文件不为空是两种情况 测试效果： 测试1-文件不存在或者空情况 <img src="http://image.camcad.cn/2020/06/202006140952389-1024x646.jpg"> 测试2-文件存在且有记录情况 <img src="http://image.camcad.cn/2020/06/202006140954382-1024x420.jpg"></p>]]></content>
    
    
    <summary type="html">显示职工</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统12：文件交互（读文件）</title>
    <link href="https://notes.camcad.cn/post/dd6cfc14.html"/>
    <id>https://notes.camcad.cn/post/dd6cfc14.html</id>
    <published>2020-07-13T09:36:41.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="9、文件交互-读文件"><a href="#9、文件交互-读文件" class="headerlink" title="9、文件交互-读文件"></a>9、文件交互-读文件</h1><p><strong>功能描述：</strong>将文件中的内容读取到程序中 虽然我们实现了添加职工后保存到文件的操作，但是每次开始运行程序，并没有将文件中数据读取到程序中而我们的程序功能中还有清空文件的需求 <strong>因此构造函数初始化数据的情况分为三种：</strong></p><ul><li>1.第一次使用，文件未创建</li><li>2.文件存在，但是数据被用户清空</li><li>3.文件存在，并且保存职工的所有数据</li></ul><h2 id="9-1-文件未创建"><a href="#9-1-文件未创建" class="headerlink" title="9.1 文件未创建"></a>9.1 文件未创建</h2><p>在workerManager.h中添加新的成员属性<code>m_FileIsEmpty标志文件是否为空</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//标志文件是否为空</span></span><br><span class="line"><span class="type">bool</span> m_FileIsEmpty;</span><br></pre></td></tr></table></figure><p>修改WorkerManager.cpp中构造函数代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">workerManager::workerManager()</span><br><span class="line">&#123;</span><br><span class="line">    ifstream ios;</span><br><span class="line"></span><br><span class="line">    ios.open(FILENAME, ios::in);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//文件不存在情况</span></span><br><span class="line">    <span class="keyword">if</span> (!ios.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;!!!!数据库文件不存在!!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;   <span class="comment">//测试输出</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        this-&gt;m_Empnum = <span class="number">0</span>;                  <span class="comment">//初始化人数</span></span><br><span class="line">        this-&gt;m_Emparray = <span class="literal">NULL</span>;         <span class="comment">//员工数组的指针</span></span><br><span class="line">        this-&gt;m_FileIsEmpty = <span class="literal">true</span>;          <span class="comment">//初始化文件为空标志</span></span><br><span class="line">        ios.close();                        <span class="comment">//关闭文件</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ios.close();                        <span class="comment">//关闭文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="删除文件后，测试文件不存在时初始化数据功能。"><a href="#删除文件后，测试文件不存在时初始化数据功能。" class="headerlink" title="删除文件后，测试文件不存在时初始化数据功能。"></a>删除文件后，测试文件不存在时初始化数据功能。</h4><h2 id="9-2-文件存在且数据为空"><a href="#9-2-文件存在且数据为空" class="headerlink" title="9.2 文件存在且数据为空"></a>9.2 文件存在且数据为空</h2><p>在workerManager.cpp中的构造函数追加代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.文件存在，数据为空</span></span><br><span class="line"><span class="type">char</span> ch;    <span class="comment">//定义字符</span></span><br><span class="line">ifs &gt;&gt; ch;    <span class="comment">//右移读取一个字符</span></span><br><span class="line"><span class="keyword">if</span> (ifs.eof())  <span class="comment">//如果文件没有记录  </span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;!!!!文件为空!!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;   <span class="comment">//测试输出</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    this-&gt;m_Empnum = <span class="number">0</span>;                  <span class="comment">//初始化人数</span></span><br><span class="line">    this-&gt;m_Emparray = <span class="literal">NULL</span>;         <span class="comment">//员工数组的指针</span></span><br><span class="line">    this-&gt;m_FileIsEmpty = <span class="literal">true</span>;          <span class="comment">//初始化文件为空标志</span></span><br><span class="line">    ifs.close();                        <span class="comment">//关闭文件</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>追加代码位置如图： <img src="http://image.camcad.cn/2020/06/2020061315311494-1024x825.jpg"> 将文件创建后清空文件内容，并测试该情况下初始化功能。</p><p>我们发现文件不存在或者为空m_FileIsEmpty判断文件是否为空的标志都为真，那何时为假？ 成功添加职工后，应该更改文件下为空的标志 在<code>void WorkerManager::ADD_Emp( )</code>成员函数中添加</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新职工不为空标志</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2020/06/2020061315371694.jpg"></p><h2 id="9-3-文件存在，并且保存职工的所有数据"><a href="#9-3-文件存在，并且保存职工的所有数据" class="headerlink" title="9.3 文件存在，并且保存职工的所有数据"></a>9.3 文件存在，并且保存职工的所有数据</h2><h3 id="9-3-1-获取记录的职工人数"><a href="#9-3-1-获取记录的职工人数" class="headerlink" title="9.3.1 获取记录的职工人数"></a>9.3.1 获取记录的职工人数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//总计人数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">get_EmpNum</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>在workerManager.cpp中实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//总计人数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">workerManager::get_EmpNum</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.open(FILENAME, ios::in);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="type">int</span> deptId;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; deptId)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//统计人数变量</span></span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在workerManager.cpp构造函数中继续追加代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3.文件存在，并且记录数据</span></span><br><span class="line"><span class="type">int</span> num = this-&gt;get_EmpNum();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工人数为：&quot;</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span>;    <span class="comment">//测试代码</span></span><br><span class="line">this-&gt;m_Empnum = num;    <span class="comment">//更新成员属性</span></span><br></pre></td></tr></table></figure><p>手动添加一些职工数据，测试获取职工数量函数<br><img src="http://image.camcad.cn/2020/06/202006131613565.jpg"><br><img src="http://image.camcad.cn/2020/06/2020061316153426-1024x565.jpg"></p><h3 id="9-3-2-初始化数组"><a href="#9-3-2-初始化数组" class="headerlink" title="9.3.2 初始化数组"></a>9.3.2 初始化数组</h3><p>根据职工的数据，初始化workerManager中的Worker**m_EmpArray指针。 在WorkerManager.h中添加函数<code>void init_Emp( );</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化数据库</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">init_Emp</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>在WorkerManager.cpp中实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化数据库</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">workerManager::init_Emp</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.open(FILENAME, ios::in);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="type">int</span> deptId;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; deptId)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        Worker* worker = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (deptId==<span class="number">1</span>)      <span class="comment">//员工</span></span><br><span class="line">        &#123;</span><br><span class="line">            worker = new Employee(id, name, deptId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (deptId==<span class="number">2</span>) <span class="comment">//经理</span></span><br><span class="line">        &#123;</span><br><span class="line">            worker = new Manager(id, name, deptId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (deptId==<span class="number">3</span>) <span class="comment">//总裁</span></span><br><span class="line">        &#123;</span><br><span class="line">            worker = new Boss(id, name, deptId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化数据</span></span><br><span class="line">        this-&gt;m_Emparray[index] = worker;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在workerManager.cpp构造函数中追加代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开辟空间</span></span><br><span class="line">this-&gt;m_Emparray = new Worker*[this-&gt;m_Empnum];</span><br><span class="line"></span><br><span class="line"><span class="comment">//将文件中的数据，存到数组中</span></span><br><span class="line">this-&gt;init_Emp();</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; this-&gt;m_Empnum; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_Id &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">        &lt;&lt; <span class="string">&quot;职工姓名：&quot;</span> &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_Name &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">        &lt;&lt; <span class="string">&quot;所在部门：&quot;</span> &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_DeptId &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序，测试从文件中获取的数据<br><img src="http://image.camcad.cn/2020/06/2020061407561119-1024x578.jpg"></p>]]></content>
    
    
    <summary type="html">文件交互（读文件）</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统11：文件交互（写文件）</title>
    <link href="https://notes.camcad.cn/post/e692a636.html"/>
    <id>https://notes.camcad.cn/post/e692a636.html</id>
    <published>2020-07-12T23:15:01.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="8、文件交互-写文件"><a href="#8、文件交互-写文件" class="headerlink" title="8、文件交互-写文件"></a>8、文件交互-写文件</h1><p><strong>功能描述：</strong>对文件进行读写 在上一个添加功能中，我们只是将所有的数据添加到了内存中，一旦程序结束就无法保存了。 因此文件管理类中需要一个与文件进行交互的功能，对于文件进行读写操作。</p><h2 id="8-1设定文件路径"><a href="#8-1设定文件路径" class="headerlink" title="8.1设定文件路径"></a>8.1设定文件路径</h2><p>首先我们将文件路径，在workerManager.h中添加宏常量，并且包含头文件fstream。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILENAME <span class="string">&quot;empFile.dat&quot;</span></span></span><br></pre></td></tr></table></figure><h2 id="8-2-成员函数声明"><a href="#8-2-成员函数声明" class="headerlink" title="8.2 成员函数声明"></a>8.2 成员函数声明</h2><p>在workerManager.h中类里添加成员函数<code>void save( )</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">save</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><h2 id="8-3-保存文件功能实现"><a href="#8-3-保存文件功能实现" class="headerlink" title="8.3 保存文件功能实现"></a>8.3 保存文件功能实现</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">workerManager::save</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.增加头文件</span></span><br><span class="line">    <span class="comment">//2.创建流文件</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.创建文本--写文件</span></span><br><span class="line">    ofs.open(FILENAME, ios::out);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.输入数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; this-&gt;m_Empnum; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ofs &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_Id &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">            &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_Name &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">            &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_DeptId &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.关闭文本</span></span><br><span class="line">    ofs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-4-保存文件功能测试"><a href="#8-4-保存文件功能测试" class="headerlink" title="8.4 保存文件功能测试"></a>8.4 保存文件功能测试</h2><p>在添加职工功能中添加成功后添加保存数据函数<code>void save( )</code><br><img src="http://image.camcad.cn/2020/06/2020061307024011.jpg"> </p><p>再次运行代码，添加职工 <img src="http://image.camcad.cn/2020/06/2020061307063256-853x1024.jpg"> </p><p>同级目录下多出文件，并且保存了添加的信息 <img src="http://image.camcad.cn/2020/06/2020061307093886-1024x704.jpg"></p>]]></content>
    
    
    <summary type="html">文件交互（写文件）</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统10：添加职工（功能分析）</title>
    <link href="https://notes.camcad.cn/post/d9135.html"/>
    <id>https://notes.camcad.cn/post/d9135.html</id>
    <published>2020-07-12T12:53:25.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="7、添加职工"><a href="#7、添加职工" class="headerlink" title="7、添加职工"></a>7、添加职工</h1><p><strong>功能描述：</strong>批量添加职工，并且保存到文件中</p><h2 id="7-1-功能分析"><a href="#7-1-功能分析" class="headerlink" title="7.1 功能分析"></a>7.1 功能分析</h2><p><strong>分析：</strong> 用户在批量创建时，可能会创建不同种类的职工。 如果想将所有不同种类的员工都放入一个数组中，可以将所有员工的指针维护到一个数组里。 如果想想在程序中维护这个不定长度的数组，可以将数组创建到堆区，并利用Worker＊＊的指针维护。<br><img src="http://image.camcad.cn/2020/06/2020061303183239-1024x335.jpg"></p><h2 id="7-2-功能实现"><a href="#7-2-功能实现" class="headerlink" title="7.2 功能实现"></a>7.2 功能实现</h2><p>在WorkerManager.h头文件中添加中成员属性代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//记录文件中的人数个数</span></span><br><span class="line"><span class="type">int</span> m_Empnum;</span><br><span class="line"></span><br><span class="line"><span class="comment">//员工数组的指针</span></span><br><span class="line">Worker **m_Emparray;</span><br></pre></td></tr></table></figure><p>在workerManager.cpp构造函数中初始化属性：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">workerManager::workerManager()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化人数</span></span><br><span class="line">    this-&gt;m_Empnum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//员工数组的指针</span></span><br><span class="line">    this-&gt;m_Emparray = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在workerManager.h中添加成员函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加职工</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add_Emp</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>workerManager.cpp中实现该函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加职工</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">workerManager::add_Emp</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入需要增加的人员数量&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="type">int</span> addnum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; addnum;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (addnum &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//计算新空间大小</span></span><br><span class="line">        <span class="type">int</span> newsize = addnum + this-&gt;m_Empnum;       <span class="comment">//新空间人数=原来记录人数+新增人数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//开辟新空间</span></span><br><span class="line">        Worker **newSpace = new Worker*[newsize];   </span><br><span class="line"></span><br><span class="line">        <span class="comment">//将原空间下的内容放到新空间下</span></span><br><span class="line">        <span class="keyword">if</span> (this-&gt;m_Emparray != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; this-&gt;m_Empnum; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                newSpace[i] = this-&gt;m_Emparray[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输入新数据</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; addnum; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> id;         <span class="comment">//职工编号</span></span><br><span class="line">            <span class="built_in">string</span> name;    <span class="comment">//职工姓名</span></span><br><span class="line">            <span class="type">int</span> deptId;     <span class="comment">//部门选择</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工编号&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工姓名&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工岗位,对应以下选择&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1、员工\n2、经理\n3、总裁&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; deptId;</span><br><span class="line"></span><br><span class="line">            Worker *worker = <span class="literal">NULL</span>;</span><br><span class="line">            <span class="keyword">switch</span> (deptId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                worker = new Employee(id, name, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                worker = new Manager(id, name, <span class="number">2</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                worker = new Boss(id, name, <span class="number">3</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//将创建职工职责，保存到数组中</span></span><br><span class="line">            newSpace[this-&gt;m_Empnum + i] = worker;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放原有空间</span></span><br><span class="line">        delete[] this-&gt;m_Emparray;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//更改新空间的指向</span></span><br><span class="line">        this-&gt;m_Emparray = newSpace;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//更新新的职工人数</span></span><br><span class="line">        this-&gt;m_Empnum = newsize;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//提示信息</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;成功添加&quot;</span> &lt;&lt; addnum &lt;&lt; <span class="string">&quot;名新职工&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入的数据有误，请重新输入&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在workerManager.cpp的析构函数中，释放堆区数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">workerManager::~workerManager()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (this-&gt;m_Emparray !=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delete[] this-&gt;m_Emparray;</span><br><span class="line">        this-&gt;m_Emparray = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">添加职工（功能分析）</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统09：测试多态</title>
    <link href="https://notes.camcad.cn/post/617e186a.html"/>
    <id>https://notes.camcad.cn/post/617e186a.html</id>
    <published>2020-07-12T06:21:26.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6、创建职工类"><a href="#6、创建职工类" class="headerlink" title="6、创建职工类"></a>6、创建职工类</h1><h2 id="6-5-测试多态"><a href="#6-5-测试多态" class="headerlink" title="6.5 测试多态"></a>6.5 测试多态</h2><p>在职工管理系统.cpp中添加测试函数，并且运行能够产生多态。</p><h3 id="测试代码如下："><a href="#测试代码如下：" class="headerlink" title="测试代码如下："></a>测试代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;employee.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;boss.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//测试代码</span></span><br><span class="line">    Worker *w = <span class="literal">NULL</span>;</span><br><span class="line">    w = new Employee(<span class="number">1</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    w-&gt;showInfo();</span><br><span class="line">    delete w;</span><br><span class="line"></span><br><span class="line">    w = new Manager(<span class="number">2</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">2</span>);</span><br><span class="line">    w-&gt;showInfo();</span><br><span class="line">    delete w;</span><br><span class="line"></span><br><span class="line">    w = new Boss(<span class="number">3</span>, <span class="string">&quot;王五&quot;</span>, <span class="number">3</span>);</span><br><span class="line">    w-&gt;showInfo();</span><br><span class="line">    delete w;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//请按任意键继续...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编译执行结果如下："><a href="#编译执行结果如下：" class="headerlink" title="编译执行结果如下："></a>编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020061223230993-1024x275.jpg"> 测试成功后，测试代码可以注释保留，或者选择删除。</p>]]></content>
    
    
    <summary type="html">测试多态</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统08：创建职工类（创建总裁类）</title>
    <link href="https://notes.camcad.cn/post/d918eefa.html"/>
    <id>https://notes.camcad.cn/post/d918eefa.html</id>
    <published>2020-07-11T21:06:35.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6、创建职工类"><a href="#6、创建职工类" class="headerlink" title="6、创建职工类"></a>6、创建职工类</h1><h2 id="6-4-创建总裁类"><a href="#6-4-创建总裁类" class="headerlink" title="6.4 创建总裁类"></a>6.4 创建总裁类</h2><p>老板类继承职工抽象类，并重写父类中纯虚函数，和普通员工类似。 在头文件和源文件的文件夹下分别创建boss.h和boss.cpp文件。</p><h3 id="boss-h中代码如下："><a href="#boss-h中代码如下：" class="headerlink" title="boss.h中代码如下："></a>boss.h中代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//总裁</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boss</span> :</span>public Worker</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    Boss(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> eptId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//个人信息描述</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">showInfo</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取岗位名称</span></span><br><span class="line">    virtual <span class="built_in">string</span> <span class="title function_">getDeptName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="boss-cpp中代码如下："><a href="#boss-cpp中代码如下：" class="headerlink" title="boss.cpp中代码如下："></a>boss.cpp中代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;boss.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">Boss::Boss(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> dptId)</span><br><span class="line">&#123;</span><br><span class="line">    this-&gt;m_Id = id;</span><br><span class="line">    this-&gt;m_Name = name;</span><br><span class="line">    this-&gt;m_DeptId = dptId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//个人信息描述</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Boss::showInfo</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; m_Id</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; m_Name</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位：&quot;</span> &lt;&lt; this-&gt;getDeptName()</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位职责：管理公司所有事务&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="built_in">string</span> <span class="title function_">Boss::getDeptName</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;总裁&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">创建职工类（创建总裁类）</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统07：创建职工类（创建经理类）</title>
    <link href="https://notes.camcad.cn/post/b9fc9be6.html"/>
    <id>https://notes.camcad.cn/post/b9fc9be6.html</id>
    <published>2020-07-11T18:04:37.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6、创建职工类"><a href="#6、创建职工类" class="headerlink" title="6、创建职工类"></a>6、创建职工类</h1><h2 id="6-3-创建经理类"><a href="#6-3-创建经理类" class="headerlink" title="6.3 创建经理类"></a>6.3 创建经理类</h2><p>经理类继承职工抽象类，并重写父类中纯虚函数，和普通员工类似。 在头文件和源文件的文件夹下分别创建manager.h和manager.cpp文件</p><h3 id="manager-h中代码如下："><a href="#manager-h中代码如下：" class="headerlink" title="manager.h中代码如下："></a>manager.h中代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//经理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Manager</span>:</span>public Worker</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    Manager(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> eptId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//个人信息描述</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">showInfo</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取岗位名称</span></span><br><span class="line">    virtual <span class="built_in">string</span> <span class="title function_">getDeptName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="manager-cpp中代码如下："><a href="#manager-cpp中代码如下：" class="headerlink" title="manager.cpp中代码如下："></a>manager.cpp中代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">Manager::Manager(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> dptId)</span><br><span class="line">&#123;</span><br><span class="line">    this-&gt;m_Id = id;</span><br><span class="line">    this-&gt;m_Name = name;</span><br><span class="line">    this-&gt;m_DeptId = dptId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//个人信息描述</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Manager::showInfo</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; m_Id</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; m_Name</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位：&quot;</span> &lt;&lt; this-&gt;getDeptName()</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位职责：完成老板交给的任务，并下发任务给员工&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="built_in">string</span> <span class="title function_">Manager::getDeptName</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;经理&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">创建职工类（创建经理类）</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统06：创建职工类</title>
    <link href="https://notes.camcad.cn/post/b86aec87.html"/>
    <id>https://notes.camcad.cn/post/b86aec87.html</id>
    <published>2020-07-11T14:38:07.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6、创建职工类"><a href="#6、创建职工类" class="headerlink" title="6、创建职工类"></a>6、创建职工类</h1><h2 id="6-1-创建职工抽象类"><a href="#6-1-创建职工抽象类" class="headerlink" title="6.1 创建职工抽象类"></a>6.1 创建职工抽象类</h2><p>**职工的分类为:**普通员工、经理、老板 将三种职工抽象到一个类（worker）中，利用多态管理不同职工种类。 职工的属性为：职工编号、职工姓名、职工所在部门编号。 职工的行为：岗位职责信息描述，获取岗位名称</p><h3 id="头文件文件夹下创建文件worker-h-文件并且添加如下代码："><a href="#头文件文件夹下创建文件worker-h-文件并且添加如下代码：" class="headerlink" title="头文件文件夹下创建文件worker.h 文件并且添加如下代码："></a>头文件文件夹下创建文件worker.h 文件并且添加如下代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//职工抽象基类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//个人信息描述</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">showInfo</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取岗位名称</span></span><br><span class="line">    virtual <span class="built_in">string</span> <span class="title function_">getDeptName</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//职工编号</span></span><br><span class="line">    <span class="type">int</span> m_Id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//职工姓名</span></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//职工所在部门名称编号</span></span><br><span class="line">    <span class="type">int</span> m_DeptId;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="6-2创建普通员工类"><a href="#6-2创建普通员工类" class="headerlink" title="6.2创建普通员工类"></a>6.2创建普通员工类</h2><p>普通员工类继承职工抽象类，并重写父类中纯虚函数，在头文件和源文件的文件夹下分别创建employee.h和employee.cpp文件</p><h3 id="employee-h中代码如下"><a href="#employee-h中代码如下" class="headerlink" title="employee.h中代码如下"></a>employee.h中代码如下</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//员工类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span> :</span>public Worker</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    Employee(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> eptId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//个人信息描述</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">showInfo</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取岗位名称</span></span><br><span class="line">    virtual <span class="built_in">string</span> <span class="title function_">getDeptName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="employee-cpp中代码如下"><a href="#employee-cpp中代码如下" class="headerlink" title="employee.cpp中代码如下"></a>employee.cpp中代码如下</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;employee.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">Employee::Employee(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> dptId)</span><br><span class="line">&#123;</span><br><span class="line">    this-&gt;m_Id = id;</span><br><span class="line">    this-&gt;m_Name = name;</span><br><span class="line">    this-&gt;m_DeptId = dptId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//个人信息描述</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Employee::showInfo</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; m_Id</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; m_Name</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位：&quot;</span> &lt;&lt; this-&gt;getDeptName() </span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位职责：完成经理交给的任务&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="built_in">string</span> <span class="title function_">Employee::getDeptName</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;员工&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">创建职工类</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统05：退出功能</title>
    <link href="https://notes.camcad.cn/post/b0cffca2.html"/>
    <id>https://notes.camcad.cn/post/b0cffca2.html</id>
    <published>2020-07-11T08:07:57.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="5、退出功能"><a href="#5、退出功能" class="headerlink" title="5、退出功能"></a>5、退出功能</h1><h2 id="5-1-提供功能接口"><a href="#5-1-提供功能接口" class="headerlink" title="5.1 提供功能接口"></a>5.1 提供功能接口</h2><p>在main函数中提供分支选择，提供每个功能接口</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//实例化对象</span></span><br><span class="line">    workerManager wm;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> choice = <span class="number">0</span>;     <span class="comment">//用户选择初始化</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        wm.show_Menu();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入你的选择&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">switch</span> (choice)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:     <span class="comment">//退出系统</span></span><br><span class="line">            wm.exitSystem();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:     <span class="comment">//增加职工</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:     <span class="comment">//显示职工</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:     <span class="comment">//删除职工</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:     <span class="comment">//修改职工</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:     <span class="comment">//查找职工</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:     <span class="comment">//编号排序</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:     <span class="comment">//清空文档</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);    <span class="comment">//清屏</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//请按任意键继续...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2-实现退出功能"><a href="#5-2-实现退出功能" class="headerlink" title="5.2 实现退出功能"></a>5.2 实现退出功能</h2><p>在workerManager.h中提供退出系统的成员函数：<code>void exitSystem( );</code><br><img src="http://image.camcad.cn/2020/06/2020061208190949.jpg"> 在workerManager.cpp中提供具体的功能实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//退出系统</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">workerManager::exitSystem</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;欢迎下次使用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);    <span class="comment">//退出程序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3-测试功能"><a href="#5-3-测试功能" class="headerlink" title="5.3 测试功能"></a>5.3 测试功能</h2><p>在main函数分支0选项中，调用退出程序 的接口。<br><img src="http://image.camcad.cn/2020/06/2020061208230372-923x1024.jpg"></p>]]></content>
    
    
    <summary type="html">退出功能</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统04：菜单功能</title>
    <link href="https://notes.camcad.cn/post/835de141.html"/>
    <id>https://notes.camcad.cn/post/835de141.html</id>
    <published>2020-07-10T22:46:36.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="4、菜单功能"><a href="#4、菜单功能" class="headerlink" title="4、菜单功能"></a>4、菜单功能</h1><p>功能描述：与用户的沟通界面</p><h2 id="4-1-添加成员函数"><a href="#4-1-添加成员函数" class="headerlink" title="4.1 添加成员函数"></a>4.1 添加成员函数</h2><p>在管理类workerManager.h中添加成员函数<code>void show_Menu( );</code><br><img src="http://image.camcad.cn/2020/06/2020061207375575.jpg"></p><h2 id="4-2-菜单功能实现"><a href="#4-2-菜单功能实现" class="headerlink" title="4.2 菜单功能实现"></a>4.2 菜单功能实现</h2><p>在管理类workerManager.cpp中实现 show_Menu( )函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">workerManager::show_Menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**************************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*******  欢迎使用职工管理系统！ ******&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  0.退出管理程序  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  1.增加职工信息  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  2.显示职工信息  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  3.删除离职职工  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  4.修改职工信息  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  5.查找职工信息  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  6.按照编号排序  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  7.清空所有文档  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**************************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-测试菜单功能"><a href="#4-3-测试菜单功能" class="headerlink" title="4.3 测试菜单功能"></a>4.3 测试菜单功能</h2><p>在职工管理系统.cpp中测试菜单功能</p><h3 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//实例化对象</span></span><br><span class="line">    workerManager wm;</span><br><span class="line">    wm.show_Menu();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h4><p><img src="http://image.camcad.cn/2020/06/2020061207425823.jpg"></p>]]></content>
    
    
    <summary type="html">菜单功能</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统03：创建管理类</title>
    <link href="https://notes.camcad.cn/post/5bcbd485.html"/>
    <id>https://notes.camcad.cn/post/5bcbd485.html</id>
    <published>2020-07-10T18:15:25.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3、创建管理类"><a href="#3、创建管理类" class="headerlink" title="3、创建管理类"></a>3、创建管理类</h1><p><strong>管理类负责的内容如下：</strong></p><ul><li>与用户的沟通菜单界面</li><li>对职工增删改查的操作</li><li>与文件的读写交互</li></ul><h2 id="3-1-创建文件"><a href="#3-1-创建文件" class="headerlink" title="3.1 创建文件"></a>3.1 创建文件</h2><p>在头文件和源文件的文件下分别创建workerManager.h和workerManager.cpp文件。 <img src="http://image.camcad.cn/2020/06/2020061207020490-1024x379.jpg"></p><h2 id="3-2-头文件实现"><a href="#3-2-头文件实现" class="headerlink" title="3.2 头文件实现"></a>3.2 头文件实现</h2><p>在workerManager.h中设计管理类，代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once            <span class="comment">//防止头文件重复包含</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>       <span class="comment">//包含输入输出流 头文件</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;    <span class="comment">//使用标准命名空间</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">workerManager</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    workerManager();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~workerManager();</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="3-3-源文件实现"><a href="#3-3-源文件实现" class="headerlink" title="3.3 源文件实现"></a>3.3 源文件实现</h2><p>在workerManager.cpp中将构造和析构函数空实现补全。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line">workerManager::workerManager()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">workerManager::~workerManager()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">创建管理类</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统02：创建项目</title>
    <link href="https://notes.camcad.cn/post/b6a02408.html"/>
    <id>https://notes.camcad.cn/post/b6a02408.html</id>
    <published>2020-07-10T18:14:39.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2、创建项目"><a href="#2、创建项目" class="headerlink" title="2、创建项目"></a>2、创建项目</h1><p>创建项目步骤如下：</p><ul><li>创建新项目</li><li>添加文件</li></ul><h2 id="2-1-创建项目"><a href="#2-1-创建项目" class="headerlink" title="2.1 创建项目"></a>2.1 创建项目</h2><p>打开vs软件后，点击创建新项目，创建新的C++项目。 <img src="http://image.camcad.cn/2020/06/2020061206320776-1024x423.jpg"></p><h3 id="2-1-1-填写项目名称以及项目路径，点击确定"><a href="#2-1-1-填写项目名称以及项目路径，点击确定" class="headerlink" title="2.1.1 填写项目名称以及项目路径，点击确定"></a>2.1.1 填写项目名称以及项目路径，点击确定</h3><p><img src="http://image.camcad.cn/2020/06/2020061206334073-1024x627.jpg"></p><h2 id="2-2-添加文件"><a href="#2-2-添加文件" class="headerlink" title="2.2 添加文件"></a>2.2 添加文件</h2><h3 id="2-2-1-右键源文件，进行添加文件"><a href="#2-2-1-右键源文件，进行添加文件" class="headerlink" title="2.2.1 右键源文件，进行添加文件"></a>2.2.1 右键源文件，进行添加文件</h3><p><img src="http://image.camcad.cn/2020/06/2020061206362276-1024x467.jpg"> <img src="http://image.camcad.cn/2020/06/2020061206371915-1024x622.jpg"> <img src="http://image.camcad.cn/2020/06/2020061206375496-1024x421.jpg"></p><h3 id="2-2-2-至此，项目创建完毕。"><a href="#2-2-2-至此，项目创建完毕。" class="headerlink" title="2.2.2 至此，项目创建完毕。"></a>2.2.2 至此，项目创建完毕。</h3>]]></content>
    
    
    <summary type="html">创建项目</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>职工管理系统01：管理系统需求</title>
    <link href="https://notes.camcad.cn/post/953e7e3d.html"/>
    <id>https://notes.camcad.cn/post/953e7e3d.html</id>
    <published>2020-07-10T09:40:20.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、管理系统需求"><a href="#1、管理系统需求" class="headerlink" title="1、管理系统需求"></a>1、管理系统需求</h1><p>职工管理系统可以用来管理公司内所有员工的信息。</p><p>本教程主要利用C++来实现一个基于多态的职工管理系统。</p><p>公司中职工分为三类：普通员工、经理、老板，显示信息时，需要显示职工编号、职工姓名、职工岗位以及职责。</p><h4 id="普通员工职责：完成经理交给的任务。"><a href="#普通员工职责：完成经理交给的任务。" class="headerlink" title="普通员工职责：完成经理交给的任务。"></a>普通员工职责：完成经理交给的任务。</h4><h4 id="经理职责：完成老板交给的任务，并下发任务给员工。"><a href="#经理职责：完成老板交给的任务，并下发任务给员工。" class="headerlink" title="经理职责：完成老板交给的任务，并下发任务给员工。"></a>经理职责：完成老板交给的任务，并下发任务给员工。</h4><h4 id="老板职责：管理公司所有事务。"><a href="#老板职责：管理公司所有事务。" class="headerlink" title="老板职责：管理公司所有事务。"></a>老板职责：管理公司所有事务。</h4><h2 id="管理系统中需要实现的功能如下："><a href="#管理系统中需要实现的功能如下：" class="headerlink" title="管理系统中需要实现的功能如下："></a>管理系统中需要实现的功能如下：</h2><ul><li>退出管理程序：退出当前管理系统</li><li>增加职工信息：实现批量添加职工功能，将信息录入文件中，职工信息为：职工编号、姓名、部门编号</li><li>显示职工信息：显示公司内部所有职工的信息</li><li>删除离职职工：按照编号删除指定的职工</li><li>修改职工信息：按照编号修改职工个人信息</li><li>查找职工信息：按照职工的编号或者职工的姓名进行查找相关的人员信息</li><li>按照编号排序：按照职工编号，进行排序，排序规则由用户指定</li><li>清空所有文档：清空文件中记录的所有职工信息（清空前需要再次确认，防止误删）</li></ul><h3 id="系统界面效果如下："><a href="#系统界面效果如下：" class="headerlink" title="系统界面效果如下："></a>系统界面效果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020061207314536.jpg"></p>]]></content>
    
    
    <summary type="html">管理系统需求</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>C++核心知识56：文件操作（二进制文件-读文件）</title>
    <link href="https://notes.camcad.cn/post/24c85066.html"/>
    <id>https://notes.camcad.cn/post/24c85066.html</id>
    <published>2020-07-09T18:45:06.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="5-2-二进制文件"><a href="#5-2-二进制文件" class="headerlink" title="5.2 二进制文件"></a>5.2 二进制文件</h1><h2 id="5-2-2-读文件"><a href="#5-2-2-读文件" class="headerlink" title="5.2.2 读文件"></a>5.2.2 读文件</h2><p>二进制方式读文件主要利用流对象调用成员函数read。 函数原型：<code>istream&amp; read(char *buffer,int len);</code> 参数解释：字符指针buffer指向内存中一段储存空间，len是读写的字节数。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> cName 24</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    <span class="type">char</span> m_Name[cName];</span><br><span class="line">    <span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.加载头文件 &lt;fstream&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.创建流文件</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.打开文件</span></span><br><span class="line">    ifs.open(<span class="string">&quot;02.txt&quot;</span>, ios::in  ios::binary);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.判断文件是否存在</span></span><br><span class="line">    <span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;文本文件不存在&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.读取内容</span></span><br><span class="line">    Person p;</span><br><span class="line">    ifs.read((<span class="type">char</span>*)&amp;p, <span class="keyword">sizeof</span>(Person));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p.m_Name &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; p.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();   </span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020061009003538-1024x402.jpg"></p><h3 id="总结：文件输入流对象可以通过read函数，以二进制的方式读取数据。"><a href="#总结：文件输入流对象可以通过read函数，以二进制的方式读取数据。" class="headerlink" title="总结：文件输入流对象可以通过read函数，以二进制的方式读取数据。"></a>总结：文件输入流对象可以通过read函数，以二进制的方式读取数据。</h3>]]></content>
    
    
    <summary type="html">文件操作（二进制文件-读文件）</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>C++核心知识55：文件操作（二进制文件-写文件）</title>
    <link href="https://notes.camcad.cn/post/b7952e98.html"/>
    <id>https://notes.camcad.cn/post/b7952e98.html</id>
    <published>2020-07-09T14:51:36.000Z</published>
    <updated>2023-04-03T11:44:08.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="5-2-二进制文件"><a href="#5-2-二进制文件" class="headerlink" title="5.2 二进制文件"></a>5.2 二进制文件</h1><p>以二进制的方式对文件进行读写操作 打开方式要指定为<code>iso::binary</code></p><h2 id="5-2-1-写文件"><a href="#5-2-1-写文件" class="headerlink" title="5.2.1 写文件"></a>5.2.1 写文件</h2><p>二进制方式写文件主要利用流对象调用成员函数<code>write</code> 函数原型：<code>ostream&amp; write(const char * buffer , int len);</code> 参数解释 ：字符指针buffer指向内存中一段存储空间，len是读写的字节数。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> cName 24</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    <span class="type">char</span> m_Name[cName];</span><br><span class="line">    <span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.加载头文件 &lt;fstream&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.创建流文件</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.打开文件</span></span><br><span class="line">    ofs.open(<span class="string">&quot;02.txt&quot;</span>, ios::out  ios::binary);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.写入内容</span></span><br><span class="line">    Person p = &#123; <span class="string">&quot;李四&quot;</span>,<span class="number">18</span> &#125;;</span><br><span class="line">    ofs.write((<span class="type">const</span> <span class="type">char</span>*)&amp;p, <span class="keyword">sizeof</span>(Person));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();   <span class="comment">//写内容</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果（打开文本文件）如下"><a href="#以上代码编译执行结果（打开文本文件）如下" class="headerlink" title="以上代码编译执行结果（打开文本文件）如下:"></a>以上代码编译执行结果（打开文本文件）如下:</h3><p><img src="http://image.camcad.cn/2020/06/2020061008350891-1024x495.jpg"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>文件输出流对象可以通过write函数，以二进制方式写入数据。</p>]]></content>
    
    
    <summary type="html">文件操作（二进制文件-写文件）</summary>
    
    
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/categories/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++核心知识" scheme="https://notes.camcad.cn/tags/C-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
</feed>
