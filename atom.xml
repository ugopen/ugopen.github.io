<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蚂蚁Emmet</title>
  
  <subtitle>增长盈利，降本增效&lt;br&gt;逆境求生存，顺境求发展</subtitle>
  <link href="https://notes.camcad.cn/atom.xml" rel="self"/>
  
  <link href="https://notes.camcad.cn/"/>
  <updated>2023-11-04T04:43:27.468Z</updated>
  <id>https://notes.camcad.cn/</id>
  
  <author>
    <name>蚂蚁Emmet</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++中字符编码的转换(Unicode、UTF-8、ANSI)</title>
    <link href="https://notes.camcad.cn/post/88fc5fdb.html"/>
    <id>https://notes.camcad.cn/post/88fc5fdb.html</id>
    <published>2023-10-31T12:14:33.000Z</published>
    <updated>2023-11-04T04:43:27.468Z</updated>
    
    <content type="html"><![CDATA[<p>C++的项目，字符编码是一个大坑，不同平台之间的编码往往不一样，如果不同编码格式用一套字符读取格式读取就会出现乱码。因此，一般都是转化成UTF-8这种平台通用，且支持性很好的编码格式。</p><p>Unicode、UTF-8的概念不做过多解释，这里说一下ANSI，我第一次看到这个名词，我看成了ASCII。被Mentor狠批一顿。</p><span id="more"></span><blockquote><p>ANSI是一种字符代码，为使计算机支持更多语言，通常使用 0x00 ~ 0x7F范围的1 个字节来表示 1 个英文字符。超出此范围的使用0x80~0xFFFF来编码，即扩展的ASCII编码。<br>　<br>不同的国家和地区制定了不同的标准，由此产生了 GB2312、GBK、GB18030、Big5、Shift_JIS 等各自的编码标准。这些使用多个字节来代表一个字符的各种汉字延伸编码方式，称为 ANSI 编码。在简体中文Windows操作系统中，ANSI 编码代表 GBK 编码；在繁体中文Windows操作系统中，ANSI编码代表Big5；在日文Windows操作系统中，ANSI 编码代表 Shift_JIS 编码。</p></blockquote><p>以上内容摘自百度百科，可以看出，ANSI和ASCII还是有关系的。ANSI也叫本地码。</p><p>我们要做到能在Unicode、UTF-8、ANSI这三种编码格式中自由转换。如下图所示：<br><img src="http://image.camcad.cn/2023/10/Unicode-UTF-8-ANSI.jpg" alt="Unicode-UTF-8-ANSI"></p><p>在C++中，要怎么做呢？当然是用标准库的东西啦，C++11对国际化标准做得还是可以的，提供了这些接口，正如图中虚线所示，标准库没有提供UTF-8到ANSI的互相转化接口，但是我们可以自己封转接口，借用这条路(<code>UTF-8 &lt;=&gt; Unicode &lt;=&gt; ANSI</code>)来实现。</p><p>因此，接下来就聊聊<code>UTF8 &lt;=&gt; Unicode</code>和<code>Unicode &lt;=&gt; ANSI</code>。</p><h2 id="UTF8-lt-gt-Unicode"><a href="#UTF8-lt-gt-Unicode" class="headerlink" title="UTF8 &lt;=&gt; Unicode"></a><code>UTF8 &lt;=&gt; Unicode</code></h2><p>先看代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">UnicodeToUTF8</span><span class="params">(<span class="type">const</span> std::wstring &amp; wstr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::string ret;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        std::wstring_convert&lt; std::codecvt_utf8&lt;<span class="type">wchar_t</span>&gt; &gt; wcv;</span><br><span class="line">        ret = wcv.<span class="built_in">to_bytes</span>(wstr);</span><br><span class="line">    &#125; <span class="built_in">catch</span> (<span class="type">const</span> std::exception &amp; e) &#123;</span><br><span class="line">        std::cerr &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">UTF8ToUnicode</span><span class="params">(<span class="type">const</span> std::string &amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::wstring ret;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        std::wstring_convert&lt; std::codecvt_utf8&lt;<span class="type">wchar_t</span>&gt; &gt; wcv;</span><br><span class="line">        ret = wcv.<span class="built_in">from_bytes</span>(str);</span><br><span class="line">    &#125; <span class="built_in">catch</span> (<span class="type">const</span> std::exception &amp; e) &#123;</span><br><span class="line">        std::cerr &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UTF-8是多字节字符串(multibyte string)，而Unicode是宽字符字符串(wchar_t string)。</p><p>而C++11提供了<code>wstring_convert</code>这个类，这个类可以在<code>wchar_t string</code>和<code>multibyte string</code>之间来回转换；</p><p>而<code>codecvt_utf8</code>可以提供UTF-8的编码规则。这个类在<code>#include &lt;codecvt&gt;</code>中。有了<code>wstring_convert</code>提供宽字符字符串到多字节字符串的转化，而这个转换规则由<code>codecvt_uft8</code>提供。这样子就可以实现UTF8和Unicode的互相转换。</p><ul><li>从UTF8到Unicode调用成员函数<code>wstring_convert::from_bytes</code>；</li><li>从Unicode到UTF8调用成员函数<code>wstring_convert::to_bytes</code>；</li></ul><h2 id="Unicode-lt-gt-ANSI"><a href="#Unicode-lt-gt-ANSI" class="headerlink" title="Unicode &lt;=&gt; ANSI"></a><code>Unicode &lt;=&gt; ANSI</code></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">UnicodeToANSI</span><span class="params">(<span class="type">const</span> std::wstring &amp; wstr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::string ret;</span><br><span class="line">    std::<span class="type">mbstate_t</span> state = &#123;&#125;;</span><br><span class="line">    <span class="type">const</span> <span class="type">wchar_t</span> *src = wstr.<span class="built_in">data</span>();</span><br><span class="line">    <span class="type">size_t</span> len = std::<span class="built_in">wcsrtombs</span>(<span class="literal">nullptr</span>, &amp;src, <span class="number">0</span>, &amp;state);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">        <span class="function">std::unique_ptr&lt; <span class="type">char</span> [] &gt; <span class="title">buff</span><span class="params">(<span class="keyword">new</span> <span class="type">char</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">        len = std::<span class="built_in">wcsrtombs</span>(buff.<span class="built_in">get</span>(), &amp;src, len, &amp;state);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">            ret.<span class="built_in">assign</span>(buff.<span class="built_in">get</span>(), len);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">ANSIToUnicode</span><span class="params">(<span class="type">const</span> std::string &amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::wstring ret;</span><br><span class="line">    std::<span class="type">mbstate_t</span> state = &#123;&#125;;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *src = str.<span class="built_in">data</span>();</span><br><span class="line">    <span class="type">size_t</span> len = std::<span class="built_in">mbsrtowcs</span>(<span class="literal">nullptr</span>, &amp;src, <span class="number">0</span>, &amp;state);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">        <span class="function">std::unique_ptr&lt; <span class="type">wchar_t</span> [] &gt; <span class="title">buff</span><span class="params">(<span class="keyword">new</span> <span class="type">wchar_t</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">        len = std::<span class="built_in">mbsrtowcs</span>(buff.<span class="built_in">get</span>(), &amp;src, len, &amp;state);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">            ret.<span class="built_in">assign</span>(buff.<span class="built_in">get</span>(), len);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>标准库提供了<code>wcsrtombs</code>和<code>mbsrtowcs</code>这两个函数，当然C的标准库也提供了这两个函数。</p><p>讲下<code>wcsrtombs</code>，这个函数把宽字符串转成多字节字符串。编码规则受地域的<code>LC_CTYPE</code>影响。因此这个函数可以用于本地码的转化(和本地的编码息息相关)。</p><p><code>因此，有关于本地码的使用，在代码中要加上下列语句：</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setlocale</span>(LC_CTYPE, <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><p>目的是让本地码生效，这条代码的作用就是让C++语言的<code>Locale</code>(地域)和本地的地域相同。在Linux下可以运行<code>locale</code>命令看看：<br><img src="http://image.camcad.cn/2023/10/ubuntu_locale.jpg" alt="ubuntu_locale"></p><p>可以看到，<code>LC_CTYPE = en_US.UTF-8</code>，这表示<strong>英文，英国，UTF-8编码</strong>，也就是说本地码就是这个。</p><p>当然，你也可以在<code>setlocale</code>中指定一些编码规则，把<code>wcsrtombs</code>用于别的编码转化，但是，这里不推荐，因为<code>setlocale</code>是全局的，设置了这个就会影响其他地方的编码。</p><p><code>wcsrtombs</code>的四个参数分别代表什么意思呢？</p><p><code>std::size_t wcsrtombs( char* dst, const wchar_t** src, std::size_t len, std::mbstate_t* ps );</code></p><ul><li><code>dst</code>，转化后的结果存入<code>dst</code>指向的内存；</li><li><code>src</code>，待转化的字符串的指针的指针；</li><li><code>len</code>，<code>dst</code>指向内存的可用字节数；</li><li><code>ps</code>，转换的状态，一般默认初始化就好了；</li><li><code>return type</code>，转化后结果的长度，不包含<code>\0</code>。</li></ul><p><strong>注意</strong>：如果<code>dst == nullptr</code>，这个时候<code>wcstombs</code>的返回值表示会有这么多字节的结果产生，因此，我们可以拿到这个返回值去新建一个数组来存储<code>new char[len + 1]</code>。所以，一般调用两次<code>wcstombs</code>。</p><p><code>mbsrtowcs</code>同理。</p><h2 id="UTF-8-lt-gt-ANSI"><a href="#UTF-8-lt-gt-ANSI" class="headerlink" title="UTF-8 &lt;=&gt; ANSI"></a><code>UTF-8 &lt;=&gt; ANSI</code></h2><p>以<code>Unicode</code>为中介装换便是。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">UTF8ToANSI</span><span class="params">(<span class="type">const</span> std::string &amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">UnicodeToANSI</span>(<span class="built_in">UTF8ToUnicode</span>(str));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">ANSIToUTF8</span><span class="params">(<span class="type">const</span> std::string &amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">UnicodeToUTF8</span>(<span class="built_in">ANSIToUnicode</span>(str));</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>C++11的标准库还是挺强大的，虽然这么强大，但是很多特性还不了解，因此还是要多扩宽自己的视野，不然有好东西都不知道用，那就棒槌了。</p><p>对了，在Linux下加上<code>setlocale(LC_CTYPE, &quot;&quot;)</code>后程序在命令行中可以正常显示，不加有可能不正常显示，原因是<code>setlocale(LC_CTYPE, &quot;&quot;)</code>也影响了<code>cout</code>，全局的嘛；而在CodeBlocks下不能正常显示，不知道为什么，但是调试的过程中，观察到了正常的结果；Visual Studio中没有做实验，不过应该没问题。</p><h2 id="封装库"><a href="#封装库" class="headerlink" title="封装库"></a>封装库</h2><figure class="highlight c++"><figcaption><span>character_encoding_conversion.hpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> CHARACTER_ENCODING_CONVERSION_HPP_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CHARACTER_ENCODING_CONVERSION_HPP_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;locale&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;codecvt&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span>  </span></span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">UnicodeToUTF8</span><span class="params">(<span class="type">const</span> std::wstring&amp; wstr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::string ret;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">std::wstring_convert&lt; std::codecvt_utf8&lt;<span class="type">wchar_t</span>&gt; &gt; wcv;</span><br><span class="line">ret = wcv.<span class="built_in">to_bytes</span>(wstr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">catch</span> (<span class="type">const</span> std::exception&amp; e) &#123;</span><br><span class="line">std::cerr &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">UTF8ToUnicode</span><span class="params">(<span class="type">const</span> std::string&amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::wstring ret;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">std::wstring_convert&lt; std::codecvt_utf8&lt;<span class="type">wchar_t</span>&gt; &gt; wcv;</span><br><span class="line">ret = wcv.<span class="built_in">from_bytes</span>(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">catch</span> (<span class="type">const</span> std::exception&amp; e) &#123;</span><br><span class="line">std::cerr &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">UnicodeToANSI</span><span class="params">(<span class="type">const</span> std::wstring&amp; wstr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::string ret;</span><br><span class="line">std::<span class="type">mbstate_t</span> state = &#123;&#125;;</span><br><span class="line"><span class="type">const</span> <span class="type">wchar_t</span>* src = wstr.<span class="built_in">data</span>();</span><br><span class="line"><span class="type">size_t</span> len = std::<span class="built_in">wcsrtombs</span>(<span class="literal">nullptr</span>, &amp;src, <span class="number">0</span>, &amp;state);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line"><span class="function">std::unique_ptr&lt; <span class="type">char</span>[] &gt; <span class="title">buff</span><span class="params">(<span class="keyword">new</span> <span class="type">char</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">len = std::<span class="built_in">wcsrtombs</span>(buff.<span class="built_in">get</span>(), &amp;src, len, &amp;state);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">ret.<span class="built_in">assign</span>(buff.<span class="built_in">get</span>(), len);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">ANSIToUnicode</span><span class="params">(<span class="type">const</span> std::string&amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::wstring ret;</span><br><span class="line">std::<span class="type">mbstate_t</span> state = &#123;&#125;;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* src = str.<span class="built_in">data</span>();</span><br><span class="line"><span class="type">size_t</span> len = std::<span class="built_in">mbsrtowcs</span>(<span class="literal">nullptr</span>, &amp;src, <span class="number">0</span>, &amp;state);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line"><span class="function">std::unique_ptr&lt; <span class="type">wchar_t</span>[] &gt; <span class="title">buff</span><span class="params">(<span class="keyword">new</span> <span class="type">wchar_t</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">len = std::<span class="built_in">mbsrtowcs</span>(buff.<span class="built_in">get</span>(), &amp;src, len, &amp;state);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">ret.<span class="built_in">assign</span>(buff.<span class="built_in">get</span>(), len);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">UTF8ToANSI</span><span class="params">(<span class="type">const</span> std::string&amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">UnicodeToANSI</span>(<span class="built_in">UTF8ToUnicode</span>(str));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">ANSIToUTF8</span><span class="params">(<span class="type">const</span> std::string&amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">UnicodeToUTF8</span>(<span class="built_in">ANSIToUnicode</span>(str));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// !CHARACTER_ENCODING_CONVERSION_HPP_</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><figcaption><span>main</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setlocale</span>(LC_CTYPE, <span class="string">&quot;&quot;</span>);</span><br><span class="line">std::cout &lt;&lt; <span class="built_in">UTF8ToANSI</span>(tmp) &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><hr><p><strong>参考：</strong></p><ul><li>《C++标准库》(第二版)</li><li><a href="https://en.cppreference.com/">C++ Reference</a></li><li><a href="https://msdn.microsoft.com/zh-cn/library/67tc3c7x%28v=vs.110%29.aspx">MSDN - mbsrtowcs</a></li></ul><p>转载：<a href="https://blog.csdn.net/FlushHip/article/details/82836867">https://blog.csdn.net/FlushHip/article/details/82836867</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;C++的项目，字符编码是一个大坑，不同平台之间的编码往往不一样，如果不同编码格式用一套字符读取格式读取就会出现乱码。因此，一般都是转化成UTF-8这种平台通用，且支持性很好的编码格式。&lt;/p&gt;
&lt;p&gt;Unicode、UTF-8的概念不做过多解释，这里说一下ANSI，我第一次看到这个名词，我看成了ASCII。被Mentor狠批一顿。&lt;/p&gt;</summary>
    
    
    
    <category term="疑难杂症" scheme="https://notes.camcad.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
    <category term="C++" scheme="https://notes.camcad.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-无法识别的标志“-scalableinclude-”(在“c1xx”中)</title>
    <link href="https://notes.camcad.cn/post/de726f2e.html"/>
    <id>https://notes.camcad.cn/post/de726f2e.html</id>
    <published>2023-09-07T10:02:19.000Z</published>
    <updated>2023-11-04T04:43:27.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>通过NX的<code>NXOpen C++ Wizard</code>向导创建项目，使用与NX不对应的VS<code>平台工具集</code>编译，出现<code>无法识别的标志“-scalableinclude-”(在“c1xx”中)</code>错误。<br><img src="http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_01.jpg" alt="无法识别的标志“-scalableinclude-”(在c1xx中)_01"></p><span id="more"></span><h3 id="NXOpen-C-Wizard"><a href="#NXOpen-C-Wizard" class="headerlink" title="NXOpen C++ Wizard"></a>NXOpen C++ Wizard</h3><p><img src="http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_00.jpg" alt="无法识别的标志“-scalableinclude-”(在c1xx中)_00"></p><h3 id="平台工具集"><a href="#平台工具集" class="headerlink" title="平台工具集"></a>平台工具集</h3><p><img src="http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_03.jpg" alt="无法识别的标志“-scalableinclude-”(在c1xx中)_03"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="一、解决模板问题"><a href="#一、解决模板问题" class="headerlink" title="一、解决模板问题"></a>一、解决模板问题</h3><p>找到<code>$(UGII_BASE_DIR)\UGOPEN\vs_files\VC\VCWizards\NX11_NXOpenCPP\scripts\1033\default.js</code>文件,通过记录本打开，将如下内容注释保存文件。然后把修改好的文件替换到VS中即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CLTool.AdditionalOptions = &quot;/d1scalableinclude-&quot;;</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_04.jpg" alt="无法识别的标志“-scalableinclude-”(在c1xx中)_04"></p><h3 id="二、解决项目出错"><a href="#二、解决项目出错" class="headerlink" title="二、解决项目出错"></a>二、解决项目出错</h3><p>打开项目配置<code>属性--&gt;配置属性--&gt;C/C++--&gt;所有选项--&gt;附加选项</code>将<code>/d1scalableinclude- %(AdditionalOptions)</code>删除后，保存即可。<br><img src="http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_02.jpg" alt="无法识别的标志“-scalableinclude-”(在c1xx中)_02"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;通过NX的&lt;code&gt;NXOpen C++ Wizard&lt;/code&gt;向导创建项目，使用与NX不对应的VS&lt;code&gt;平台工具集&lt;/code&gt;编译，出现&lt;code&gt;无法识别的标志“-scalableinclude-”(在“c1xx”中)&lt;/code&gt;错误。&lt;br&gt;&lt;img src=&quot;http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_01.jpg&quot; alt=&quot;无法识别的标志“-scalableinclude-”(在c1xx中)_01&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="疑难杂症" scheme="https://notes.camcad.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-自定义语言包(custom language)</title>
    <link href="https://notes.camcad.cn/post/4435e0f6.html"/>
    <id>https://notes.camcad.cn/post/4435e0f6.html</id>
    <published>2023-08-29T10:16:25.000Z</published>
    <updated>2023-11-04T04:43:27.468Z</updated>
    
    <content type="html"><![CDATA[<p>NX为国际化软件，本身支持多国语言包，同为二次开发的插件。有必要支持多语言，本章通过NX开放的接口，制作一个示例，翻译自定义语言文件中定义的其他字符串。</p><figure class="highlight txt"><figcaption><span>NX1953支持语言</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#if $&#123;UGII_LANG&#125; = &quot;english&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;en-US&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;braz_portuguese&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;pt-BR&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;czech&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;cs-CZ&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;french&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;fr-FR&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;german&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;de-DE&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;hungarian&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;en-US&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;italian&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;it-IT&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;japanese&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;ja-JP&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;korean&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;ko-KR&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;polish&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;pl-PL&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;russian&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;ru-RU&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;simpl_chinese&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;zh-CN&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;spanish&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;es-ES&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;trad_chinese&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;zh-TW&quot;</span><br><span class="line">#endif</span><br><span class="line"># Set default help language as English &quot;en-US&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;en-US&quot;</span><br></pre></td></tr></table></figure><span id="more"></span><h4 id="基础环境准备"><a href="#基础环境准备" class="headerlink" title="基础环境准备"></a>基础环境准备</h4><p>使用<code>%UGII_BASE_DIR%\localization\nldmgr.exe</code>插件，需要在环境变量<code>Path</code>中添加NX安装路径，不然会出现找不到<code>libsyss.dll</code>文件情况，示例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\Siemens\NX1953\NXBIN</span><br></pre></td></tr></table></figure><h3 id="操作步骤如下："><a href="#操作步骤如下：" class="headerlink" title="操作步骤如下："></a>操作步骤如下：</h3><h4 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h4><p>创建一个包含所有所需字符串内容的自定义语言文本文件。</p><figure class="highlight txt"><figcaption><span>simpl_chinese_custom.txt</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x27;My UIStyler Dialog&#x27; = &#x27;EMMET 我的 UIStyler 对话框&#x27;</span><br><span class="line">&#x27;Group1&#x27; = &#x27;EMMET 组一&#x27;</span><br><span class="line">&#x27;Description1&#x27; = &#x27;EMMET 描述一&#x27;</span><br><span class="line">&#x27;Distance1&#x27; = &#x27;EMMET 距离一&#x27;</span><br><span class="line"></span><br><span class="line">&#x27;My Blockstyler Dialog&#x27; = &#x27;EMMET 我的 Blockstyler 对话框&#x27;</span><br><span class="line">&#x27;Group2&#x27; = &#x27;EMMET 组二&#x27;</span><br><span class="line">&#x27;Description2&#x27; = &#x27;EMMET 描述二&#x27;</span><br><span class="line">&#x27;Distance2&#x27; = &#x27;EMMET 距离二&#x27;</span><br></pre></td></tr></table></figure><h4 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h4><p>使用NX语言转换插件，创建二进制语言文件。</p><figure class="highlight txt"><figcaption><span>例如：</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">## 方法一</span><br><span class="line">D:\emmet_translate_custom&gt;&quot;%UGII_BASE_DIR%\LOCALIZATION\nldmgr.exe&quot;</span><br><span class="line">nldmgr: Native Language Menu Dialog Manager</span><br><span class="line"></span><br><span class="line">Choose Option:</span><br><span class="line">    1. Text to Binary</span><br><span class="line">    2. Binary to Text</span><br><span class="line">    3. Generate Incremental Update File</span><br><span class="line">    4. Generate Translated File</span><br><span class="line">    5. Exit</span><br><span class="line">-&gt; 1</span><br><span class="line">Native Text File  : simpl_chinese_custom.txt</span><br><span class="line">Native Binary File: simpl_chinese_custom.lng</span><br><span class="line">Language Name     : simpl_chinese</span><br><span class="line"></span><br><span class="line">Converting text file to binary file...</span><br><span class="line">-&gt; 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 方法二</span><br><span class="line">D:\emmet_translate_custom&gt;&quot;%UGII_BASE_DIR%\LOCALIZATION\nldmgr.exe&quot; -c simpl_chinese_custom.txt simpl_chinese_custom.lng simpl_chinese</span><br><span class="line"></span><br><span class="line">Converting text file to binary file...</span><br></pre></td></tr></table></figure><h4 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h4><p>将自定义翻译文件加载到NX会话中。</p><figure class="highlight c++"><figcaption><span>接口代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Open C API:</span><br><span class="line">-------------</span><br><span class="line"><span class="built_in">UF_TEXT_init_native_lang_support</span>(<span class="type">void</span>)</span><br><span class="line"><span class="built_in">UF_TEXT_load_translation_file</span>(<span class="type">const</span> <span class="type">char</span> * file ) </span><br><span class="line"></span><br><span class="line">NXOpen UFWrapper:</span><br><span class="line">-------------------</span><br><span class="line">NXOpen.UF -&gt; UFText -&gt; <span class="built_in">InitNativeLangSupport</span>()</span><br><span class="line">NXOpen.UF -&gt; UFText -&gt; <span class="built_in">LoadTranslationFile</span>(string file)</span><br></pre></td></tr></table></figure><figure class="highlight c#"><figcaption><span>示例</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> NXOpen;</span><br><span class="line"><span class="keyword">using</span> NXOpen.UF;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">translation</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            Session theSession = Session.GetSession();</span><br><span class="line">            UFSession theUFSession = UFSession.GetUFSession();</span><br><span class="line">            String strUserDir = theSession.GetEnvironmentVariableValue(<span class="string">&quot;UGII_USER_DIR&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            String strLang=theSession.GetEnvironmentVariableValue(<span class="string">&quot;UGII_LANG&quot;</span>);</span><br><span class="line">            String strFile=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(strLang == <span class="string">&quot;simpl_chinese&quot;</span>)&#123;</span><br><span class="line">              strFile = strUserDir + <span class="string">@&quot;\simpl_chinese_custom.lng&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(strLang == <span class="string">&quot;german&quot;</span>)&#123;</span><br><span class="line">              strFile = strUserDir + <span class="string">@&quot;\german_custom.lng&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">              strFile = strUserDir + <span class="string">@&quot;\simpl_chinese_custom.lng&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            theUFSession.Text.InitNativeLangSupport();</span><br><span class="line">            theUFSession.Text.LoadTranslationFile(strFile) ;</span><br><span class="line">            UI.GetUI().NXMessageBox.Show(<span class="string">&quot;Loaded Translation File&quot;</span>, NXMessageBox.DialogType.Information, strFile);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            UI.GetUI().NXMessageBox.Show(<span class="string">&quot;C# Journal&quot;</span>, NXMessageBox.DialogType.Error, ex.ToString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="步骤四"><a href="#步骤四" class="headerlink" title="步骤四"></a>步骤四</h4><p>设置NX挂载插件环境变量<code>UGII_USER_DIR</code>值。</p><figure class="highlight txt"><figcaption><span>UGII_USER_DIR</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## 添加环境变量</span><br><span class="line">UGII_USER_DIR=D:\emmet_translate_custom</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 说明</span><br><span class="line">将环境变量UGII_USER_DIR设置为该文件夹。</span><br><span class="line">该示例添加了一个自定义功能区选项卡“GTAC Tab”，其中包含3个 C# Journal按钮：</span><br><span class="line">“Show BlockStyler”、“Show UIStyler”、“Load Translation”。</span><br><span class="line">通过这些按钮打开对话框以查看原始字符串内容。</span><br><span class="line">您也可以通过以下方式实例化UIStyler对话框加载翻译文件并再次打开对话框。</span><br><span class="line">所有对话框现在都将显示自定义翻译的字符串。</span><br></pre></td></tr></table></figure><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p><img src="http://image.camcad.cn/2023/09/nx_translate_custom.png" alt="nx_translate_custom"></p><h4 id="附件下载"><a href="#附件下载" class="headerlink" title="附件下载"></a>附件下载</h4><p><a href="https://solutions.industrysoftware.automation.siemens.com/srch/api/nx_api5392.zip">translate_custom_dialogs</a>)</p><hr><h3 id="原始文件"><a href="#原始文件" class="headerlink" title="原始文件"></a>原始文件</h3><figure class="highlight txt"><figcaption><span>translate_custom_dialogs.faq</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">Localization of custom Pre-NX6 UIStyler and Block UI Styler dialogs.</span><br><span class="line">===============================================================================</span><br><span class="line"></span><br><span class="line">Step 1) Create a custom language text file with all desired string contents.</span><br><span class="line"></span><br><span class="line">Sample custom.txt holding all strings used in custom DLG/DLX files:</span><br><span class="line">---------------------</span><br><span class="line">&#x27;My UIStyler Dialog&#x27; = &#x27;Mein UIStyler Dialog&#x27;</span><br><span class="line">&#x27;Group1&#x27; = &#x27;Gruppe1&#x27;</span><br><span class="line">&#x27;Description1&#x27; = &#x27;Beschreibung1&#x27;</span><br><span class="line">&#x27;Distance1&#x27; = &#x27;Distanz1&#x27;</span><br><span class="line">&#x27;My Blockstyler Dialog&#x27; = &#x27;Mein Blockstyler Dialog&#x27;</span><br><span class="line">&#x27;Group2&#x27; = &#x27;Gruppe2&#x27;</span><br><span class="line">&#x27;Description2&#x27; = &#x27;Beschreibung2&#x27;</span><br><span class="line">&#x27;Distance2&#x27; = &#x27;Distanz2&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Step 2) Create a binary language file from a NX command prompt.</span><br><span class="line"></span><br><span class="line">For example:</span><br><span class="line">---------------------</span><br><span class="line">D:\translate_custom_dialogs&gt;&quot;%UGII_BASE_DIR%\LOCALIZATION\nldmgr.exe&quot;</span><br><span class="line"> nldmgr: Native Language Menu Dialog Manager</span><br><span class="line"> Choose Option:</span><br><span class="line">    1. Text to Binary</span><br><span class="line">    2. Binary to Text</span><br><span class="line">    3. Generate Incremental Update File</span><br><span class="line">    4. Generate Translated File</span><br><span class="line">    5. Exit</span><br><span class="line">-&gt; 1</span><br><span class="line"> Native Text File  : custom.txt</span><br><span class="line"> Native Binary File: custom.lng</span><br><span class="line"> Language Name     : german</span><br><span class="line"></span><br><span class="line"> Converting text file to binary file...</span><br><span class="line">-&gt; 5</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">Step 3) Load your custom translation file into your NX session.</span><br><span class="line"></span><br><span class="line"> Open C API:</span><br><span class="line"> -------------</span><br><span class="line"> UF_TEXT_init_native_lang_support(void)</span><br><span class="line"> UF_TEXT_load_translation_file(const char * file ) </span><br><span class="line"></span><br><span class="line"> NXOpen UFWrapper:</span><br><span class="line"> -------------------</span><br><span class="line"> NXOpen.UF -&gt; UFText -&gt; InitNativeLangSupport()</span><br><span class="line"> NXOpen.UF -&gt; UFText -&gt; LoadTranslationFile(string file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Step 4) Implement the sample customization with a NX Ribbon Tab.</span><br><span class="line"></span><br><span class="line"> Extract the attached ZIP file archive to a new folder.</span><br><span class="line"> Set the environment variable UGII_USER_DIR to that folder.</span><br><span class="line"> The sample adds a custom Ribbon tab &#x27;GTAC&#x27; with 3 C# Journal Buttons:</span><br><span class="line"> &quot;Show BlockStyler&quot;, &quot;Show UIStyler&quot;, &quot;Load Translation&quot;.</span><br><span class="line"> Open the dialogs by those buttons to see the original string contents.</span><br><span class="line"> You may also instantiate the UIStyler dialog by </span><br><span class="line"> The load the translation file and open the dialogs again.</span><br><span class="line"> All dialogs will now show the custom translated strings instead.</span><br><span class="line"></span><br><span class="line">Attachments in ZIP:</span><br><span class="line">----------------------</span><br><span class="line"> \custom.lng</span><br><span class="line"> \custom.txt</span><br><span class="line"> \translate_custom_dialogs.avi</span><br><span class="line"> \translate_custom_dialogs.faq</span><br><span class="line"> \application\load_translation.cs</span><br><span class="line"> \application\myblockstyler.cs</span><br><span class="line"> \application\myblockstyler.dlx</span><br><span class="line"> \application\Myuistyler.cs</span><br><span class="line"> \application\myuistyler.dlg</span><br><span class="line"> \dfa\myuistyler.dfa</span><br><span class="line"> \startup\gtac_men.men</span><br><span class="line"> \startup\gtac_ribbon_tab.rtb</span><br><span class="line"></span><br><span class="line">See also</span><br><span class="line">------------</span><br><span class="line">&lt;a id=&quot;u_link&quot; href=&quot;http://solutions.industrysoftware.automation.siemens.com/view.php?si=nx_api4942&quot;&gt;Sample Open C API program : translate custom strings&lt;/a&gt;</span><br><span class="line">&lt;a id=&quot;u_link&quot; href=&quot;http://solutions.industrysoftware.automation.siemens.com/view.php?si=nx_api5245&quot;&gt;Sample NX Open .NET C# program : translate custom strings&lt;/a&gt;</span><br><span class="line">&lt;a id=&quot;u_link&quot; href=&quot;http://solutions.industrysoftware.automation.siemens.com/view.php?si=nx_api5392&quot;&gt;Getting Started with NXOpen : translate custom dialogs nx10&lt;/a&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;NX为国际化软件，本身支持多国语言包，同为二次开发的插件。有必要支持多语言，本章通过NX开放的接口，制作一个示例，翻译自定义语言文件中定义的其他字符串。&lt;/p&gt;
&lt;figure class=&quot;highlight txt&quot;&gt;&lt;figcaption&gt;&lt;span&gt;NX1953支持语言&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;english&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;braz_portuguese&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;pt-BR&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;czech&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;cs-CZ&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;french&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;fr-FR&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;german&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;de-DE&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;hungarian&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;italian&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;it-IT&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;japanese&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;ja-JP&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;korean&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;ko-KR&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;polish&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;pl-PL&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;russian&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;ru-RU&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;simpl_chinese&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;zh-CN&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;spanish&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;es-ES&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;trad_chinese&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;zh-TW&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Set default help language as English &amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="疑难杂症" scheme="https://notes.camcad.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-Teamcenter与NX集成环境下克隆总结</title>
    <link href="https://notes.camcad.cn/post/351d8fad.html"/>
    <id>https://notes.camcad.cn/post/351d8fad.html</id>
    <published>2023-08-08T10:40:28.000Z</published>
    <updated>2023-11-04T04:43:27.464Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="576fbdc272973724a8010e808ab5468b95276cbb0a0a8306b1924bb86897e4a2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/categories/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    <category term="UG二次开发" scheme="https://notes.camcad.cn/tags/UG%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    <category term="公共" scheme="https://notes.camcad.cn/tags/%E5%85%AC%E5%85%B1/"/>
    
    <category term="UF_CLONE" scheme="https://notes.camcad.cn/tags/UF-CLONE/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 部署 nginx web服务器</title>
    <link href="https://notes.camcad.cn/post/8c7754da.html"/>
    <id>https://notes.camcad.cn/post/8c7754da.html</id>
    <published>2023-08-01T10:35:33.000Z</published>
    <updated>2023-11-04T04:43:27.484Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在Ubuntu下编译安装nginx"><a href="#在Ubuntu下编译安装nginx" class="headerlink" title="在Ubuntu下编译安装nginx"></a>在Ubuntu下编译安装nginx</h2><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a)epoll，linux内核版本为2.6或者以上</span><br><span class="line"></span><br><span class="line">b)gcc编译器，g++编译器</span><br><span class="line"></span><br><span class="line">c)pcre库，函数库，支持解析正则表达式</span><br><span class="line"></span><br><span class="line">d)zlib库：压缩解压功能</span><br><span class="line"></span><br><span class="line">e)openssl库：ssl功能相关库，用于网站加密通讯</span><br></pre></td></tr></table></figure><p>Nginx是高度自由化的Web服务器，它的功能是由许多模块来支持。如果使用了某个模块，这个模块使用了一些类似zlib或OpenSSL等的第三方库，那么就必须先安装这些软件。Ubuntu下不像在centOS中使用yum直接在线安装，可以使用以下方法。</p><span id="more"></span><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><h3 id="PCRE库"><a href="#PCRE库" class="headerlink" title="PCRE库"></a>PCRE库</h3><p>PCRE库支持正则表达式。如果我们在配置文件nginx.conf中使用了正则表达式，那么在编译Nginx时就必须把PCRE库编译进Nginx，因为Nginx的HTTP模块需要靠它来解析正则表达式。另外，pcre-devel是使用PCRE做二次开发时所需要的开发库，包括头文件等，这也是编译Nginx所必须使用的。可以这样安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libpcre3 libpcre3-dev </span><br></pre></td></tr></table></figure><h3 id="zlib库"><a href="#zlib库" class="headerlink" title="zlib库"></a>zlib库</h3><p>zlib库用于对HTTP包的内容做gzip格式的压缩，如果我们在nginx.conf中配置了gzip on，并指定对于某些类型（content-type）的HTTP响应使用gzip来进行压缩以减少网络传输量，则在编译时就必须把zlib编译进Nginx。zlib-devel是二次开发所需要的库。可以这样安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install zlib1g-dev</span><br></pre></td></tr></table></figure><h3 id="OpenSSL库"><a href="#OpenSSL库" class="headerlink" title="OpenSSL库"></a>OpenSSL库</h3><p>如果服务器不只是要支持HTTP，还需要在更安全的SSL协议上传输HTTP，那么需要拥有OpenSSL。另外，如果我们想使用MD5、SHA1等散列函数，那么也需要安装它。可以这样安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssl libssl-dev </span><br></pre></td></tr></table></figure><p><code>apache2（httpd） 压力测试，非必要安装</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apache2</span><br></pre></td></tr></table></figure><h3 id="ubunto卸载软件"><a href="#ubunto卸载软件" class="headerlink" title="ubunto卸载软件"></a>ubunto卸载软件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove --purge 软件名称</span><br><span class="line">例如：sudo apt-get autoremove --purge emmet</span><br><span class="line"></span><br><span class="line">sudo——获取 root 权限</span><br><span class="line">apt-get——执行安装卸载功能的软件</span><br><span class="line">autoremove——告诉 apt-get 我们所要做的操作是移除软件</span><br><span class="line">--purge——注意这前面是两个短划线，这个参数是告诉他们要完整干净的彻底移除</span><br></pre></td></tr></table></figure><h2 id="nginx下载"><a href="#nginx下载" class="headerlink" title="nginx下载"></a>nginx下载</h2><p>官方网站：<a href="https://nginx.org/">https://nginx.org/</a><br><img src="http://image.camcad.cn/2023/09/nginx_01.jpg" alt="nginx_01"></p><h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><p><strong>开发版本</strong>：Mainline version<br><strong>最新版本</strong>：Stable version<br><strong>历史版本</strong>：Legacy versions</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo wget 下载地址</span><br><span class="line"></span><br><span class="line">sudo wget https://nginx.org/download/nginx-1.22.1.tar.gz</span><br></pre></td></tr></table></figure><h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -zxvf 软件名称</span><br><span class="line"></span><br><span class="line">sudo tar -zxvf nginx-1.22.1.tar.gz</span><br></pre></td></tr></table></figure><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /opt/nginx</span><br></pre></td></tr></table></figure><h3 id="编译三部曲"><a href="#编译三部曲" class="headerlink" title="编译三部曲"></a>编译三部曲</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1、切换到 root 用户执行以下命令</span><br><span class="line">./configure --prefix=/opt/nginx --with-http_ssl_module --with-http_flv_module --with-http_gzip_static_module --with-http_stub_status_module --with-threads --with-file-aio</span><br><span class="line"></span><br><span class="line">2、终端中执行 make 命令开始编译</span><br><span class="line">make</span><br><span class="line">或者</span><br><span class="line">make -j$(nproc)</span><br><span class="line">PS：linux 下输入nproc返回数字是你的机器的线程数</span><br><span class="line"></span><br><span class="line">3、终端中执行 make install 命令开始安装</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装完成后，相关文件如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@my:/opt/nginx# ls</span><br><span class="line">conf  html  logs  sbin</span><br><span class="line"></span><br><span class="line">conf---存放nginx的配置文件 如：nginx.conf</span><br><span class="line">html---存放nginx的网页根目录文件，放在站点的静态文件数据</span><br><span class="line">logs---存放nginx的各种日志目录</span><br><span class="line">sbin---存放该软件的可执行命令</span><br></pre></td></tr></table></figure><h3 id="增加与配置-PATH-变量"><a href="#增加与配置-PATH-变量" class="headerlink" title="增加与配置 PATH 变量"></a>增加与配置 PATH 变量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1、在终端上输入以下命令</span><br><span class="line">vim /etc/profile.d/nginx.sh</span><br><span class="line"></span><br><span class="line">2、在终端上编辑以下内容并保存退出</span><br><span class="line">export PATH=&quot;$PATH:/opt/nginx/sbin/&quot;</span><br><span class="line"></span><br><span class="line">3、加载配置（临时），如需永久生效，在 .bashrc 文件最后增加以下内容，保存即可</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line">4、查看 PATH 变量的值</span><br><span class="line">echo $PATH</span><br></pre></td></tr></table></figure><h3 id="跳转到-opt-nginx-sbin目录下，首次启动使用如下命令"><a href="#跳转到-opt-nginx-sbin目录下，首次启动使用如下命令" class="headerlink" title="跳转到/opt/nginx/sbin目录下，首次启动使用如下命令"></a>跳转到<code>/opt/nginx/sbin</code>目录下，首次启动使用如下命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./nginx</span><br></pre></td></tr></table></figure><h3 id="nginx-命令"><a href="#nginx-命令" class="headerlink" title="nginx 命令"></a>nginx 命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">查看 80 端口</span><br><span class="line">netstat -ntlp|grep 80</span><br><span class="line"></span><br><span class="line">查看Nginx进程命令</span><br><span class="line">ps aux | grep nginx | grep -v grep</span><br><span class="line"></span><br><span class="line">暴力停止Nginx服务器命令</span><br><span class="line">sudo ./nginx -s stop</span><br><span class="line"></span><br><span class="line">优雅停止Nginx服务器命令</span><br><span class="line">sudo ./nginx -s quit</span><br><span class="line"></span><br><span class="line">重新加载配置文件，重新启动新的worker进程，并且优雅的退出旧的worker进程</span><br><span class="line">sudo ./nginx -s reload</span><br><span class="line"></span><br><span class="line">重新打开日志记录</span><br><span class="line">sudo ./nginx -s reopen</span><br><span class="line"></span><br><span class="line">强制停止Nginx服务器命令</span><br><span class="line">pkill -9 nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="配置nginx插件"><a href="#配置nginx插件" class="headerlink" title="配置nginx插件"></a>配置nginx插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">复制 nginx 安装包中的自带vim插件到 .vim 文件夹配置中</span><br><span class="line">cp -r /opt/nginx-1.22.1/contrib/vim/* ~/.vim/</span><br></pre></td></tr></table></figure><h3 id="nginx配置文件说明"><a href="#nginx配置文件说明" class="headerlink" title="nginx配置文件说明"></a>nginx配置文件说明</h3><p><img src="http://image.camcad.cn/2023/09/nginx_02.jpg" alt="nginx_02"></p><h3 id="虚拟主机配置文件介绍如下："><a href="#虚拟主机配置文件介绍如下：" class="headerlink" title="虚拟主机配置文件介绍如下："></a>虚拟主机配置文件介绍如下：</h3><p><img src="http://image.camcad.cn/2023/09/nginx%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E03.jpg" alt="nginx虚拟主机配置说明03"></p><h3 id="设置nginx工作进程核心数"><a href="#设置nginx工作进程核心数" class="headerlink" title="设置nginx工作进程核心数"></a>设置nginx工作进程核心数</h3><h4 id="查看服务器CPU核心数"><a href="#查看服务器CPU核心数" class="headerlink" title="查看服务器CPU核心数"></a>查看服务器CPU核心数</h4><p>在终端输入<code>top</code>命令，接着在键盘输入数字<code>1</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">emmet@ubuntu:/opt/nginx/sbin$ top</span><br><span class="line">top - 10:50:12 up 10:49,  1 user,  load average: 0.05, 0.11, 0.09</span><br><span class="line">Tasks: 242 total,   1 running, 241 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu0  :  3.0 us,  0.3 sy,  0.0 ni, 96.0 id,  0.7 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  3.0 us,  0.7 sy,  0.0 ni, 96.0 id,  0.0 wa,  0.0 hi,  0.3 si,  0.0 st</span><br><span class="line">%Cpu2  :  2.0 us,  0.7 sy,  0.0 ni, 97.0 id,  0.0 wa,  0.0 hi,  0.3 si,  0.0 st</span><br><span class="line">%Cpu3  :  2.0 us,  0.0 sy,  0.0 ni, 98.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">MiB Mem :   7868.4 total,   2252.0 free,   4054.3 used,   1562.0 buff/cache</span><br><span class="line">MiB Swap:   8192.0 total,   8192.0 free,      0.0 used.   3414.1 avail Mem</span><br><span class="line"></span><br><span class="line">    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND</span><br><span class="line">   1834 git       20   0 1491960 910568  27488 S   5.6  11.3  42:53.90 bundle</span><br><span class="line">   1683 gitlab-+  20   0   74808  15652   6160 S   3.0   0.2  18:24.64 redis-s+</span><br><span class="line">   1657 gitlab-+  20   0  718164  21044  11488 S   2.7   0.3   4:04.66 node_ex+</span><br></pre></td></tr></table></figure><p>通过得到的数据，知道我的服务器<code>%Cpu</code>数量为4；</p><h4 id="设置nginx-工作进程数"><a href="#设置nginx-工作进程数" class="headerlink" title="设置nginx 工作进程数"></a>设置nginx 工作进程数</h4><p>在配置表<code>*/conf/nginx.conf</code>中修改nginx工作进程数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">     worker_connections  4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新加载配置文件命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./nginx -s reload</span><br></pre></td></tr></table></figure><h2 id="nginx日志切割"><a href="#nginx日志切割" class="headerlink" title="nginx日志切割"></a>nginx日志切割</h2><h3 id="查看当前目录下文件的大小"><a href="#查看当前目录下文件的大小" class="headerlink" title="查看当前目录下文件的大小"></a>查看当前目录下文件的大小</h3><p>通过<code>du -h ./*</code>命令查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">emmet@ubuntu:/opt/nginx/sbin$ du -h ./*</span><br><span class="line">6.3M    ./nginx</span><br><span class="line">6.3M    ./nginx.old</span><br></pre></td></tr></table></figure><h3 id="定时任务，脚本文件"><a href="#定时任务，脚本文件" class="headerlink" title="定时任务，脚本文件"></a>定时任务，脚本文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># 脚本写入crontab，每天0点执行，这是一个nginx日志切割脚本</span><br><span class="line"></span><br><span class="line"># nginx日志存放点</span><br><span class="line">LOGS_PATH=&quot;/opt/nginx/logs/&quot;</span><br><span class="line"></span><br><span class="line"># 年/月</span><br><span class="line">LOGS_DATE_LOCATION=$(date -d &quot;yesterday&quot; +&quot;%Y&quot;)/$(date -d &quot;yesterday&quot; +&quot;%m&quot;)</span><br><span class="line"></span><br><span class="line"># 文件</span><br><span class="line">ACCESS_FILENAME=&quot;access&quot;</span><br><span class="line">ERROR_FILENAME=&quot;error&quot;</span><br><span class="line"></span><br><span class="line"># 创建目录</span><br><span class="line">sudo mkdir -p $&#123;LOGS_PATH&#125;$&#123;LOGS_DATE_LOCATION&#125;</span><br><span class="line"></span><br><span class="line"># 移动文件</span><br><span class="line">sudo mv $&#123;LOGS_PATH&#125;$&#123;ACCESS_FILENAME&#125;.log $&#123;LOGS_PATH&#125;$&#123;LOGS_DATE_LOCATION&#125;/$&#123;ACCESS_FILENAME&#125;$(date -d &quot;yesterday&quot; +&quot;%Y-%m-%d&quot;).log</span><br><span class="line">sudo mv $&#123;LOGS_PATH&#125;$&#123;ERROR_FILENAME&#125;.log $&#123;LOGS_PATH&#125;$&#123;LOGS_DATE_LOCATION&#125;/$&#123;ERROR_FILENAME&#125;$(date -d &quot;yesterday&quot; +&quot;%Y-%m-%d&quot;).log</span><br><span class="line"></span><br><span class="line"># 重新打开日志记录</span><br><span class="line">sudo /opt/nginx/sbin/./nginx -s reopen</span><br><span class="line"></span><br><span class="line"># 删除上个月日志文件</span><br><span class="line">DELETE_FILENAME=$&#123;LOGS_PATH&#125;$(date -d &quot;yesterday&quot; +&quot;%Y&quot;)/$(date +&quot;%m&quot; -d &quot;last month&quot;)</span><br><span class="line"></span><br><span class="line"># -d 参数 判断文件夹是否存在</span><br><span class="line">if [ -d &quot;$DELETE_FILENAME&quot; ];then</span><br><span class="line">  sudo rm -r $&#123;DELETE_FILENAME&#125;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3><p>1、在终端上输入<code>crontab -e</code>进行定时任务的创建；<br><img src="http://image.camcad.cn/2023/09/nginx_04.jpg" alt="nginx_04"><br>2、在最下方输入定时任务，编辑完成保存即可；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0 0 * * * /bin/bash  /myscripts/cut_nginx_log.sh</span><br><span class="line"></span><br><span class="line">0 0 * * * （表示系统每天0点0分执行一次）</span><br><span class="line">/bin/bash （bash绝对路径，必须输入绝对路径）</span><br><span class="line"> /myscripts/cut_nginx_log.sh （被执行程序绝对路径）</span><br></pre></td></tr></table></figure><p>3、通过<code>sudo /etc/init.d/cron reload</code>命令重新加载配置表；<br>4、再通过<code>sudo /etc/init.d/cron restart</code>命令重启服务；<br>5、收工；</p><p>参考视频：<a href="https://www.bilibili.com/video/BV1Je4y1H7iB?p=1&vd_source=2ef65e99005307b98faba687dbdb5780">https://www.bilibili.com/video/BV1Je4y1H7iB?p=1&vd_source&#x3D;2ef65e99005307b98faba687dbdb5780</a></p><hr><h2 id="设置nginx-开机启动"><a href="#设置nginx-开机启动" class="headerlink" title="设置nginx 开机启动"></a>设置nginx 开机启动</h2><h4 id="在系统服务目录里创建nginx-service文件"><a href="#在系统服务目录里创建nginx-service文件" class="headerlink" title="在系统服务目录里创建nginx.service文件"></a>在系统服务目录里创建<code>nginx.service</code>文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure><h4 id="写入内容如下"><a href="#写入内容如下" class="headerlink" title="写入内容如下:"></a>写入内容如下:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line">  </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/opt/nginx/sbin/nginx -c /opt/nginx/conf/nginx.conf</span><br><span class="line">ExecReload=/opt/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/opt/nginx/sbin/nginx -s quit</span><br><span class="line">PrivateTmp=true</span><br><span class="line">  </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="解释-1"><a href="#解释-1" class="headerlink" title="解释"></a>解释</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]:服务的说明</span><br><span class="line">Description:描述服务</span><br><span class="line">After:描述服务类别</span><br><span class="line">[Service]服务运行参数的设置</span><br><span class="line">Type=forking是后台运行的形式</span><br><span class="line">ExecStart为服务的具体运行命令</span><br><span class="line">ExecReload为重启命令</span><br><span class="line">ExecStop为停止命令</span><br><span class="line">PrivateTmp=True表示给服务分配独立的临时空间</span><br><span class="line">注意：[Service]的启动、重启、停止命令全部要求使用绝对路径</span><br><span class="line">[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3</span><br></pre></td></tr></table></figure><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx.service 开启开机自启</span><br><span class="line">systemctl disable nginx.service 关闭开机自启</span><br><span class="line">systemctl status nginx.service 查看状态</span><br><span class="line">systemctl restart nginx.service 重启服务</span><br><span class="line">systemctl list-units --type=service 查看所有服务</span><br></pre></td></tr></table></figure><hr><h2 id="nginx配置ssl"><a href="#nginx配置ssl" class="headerlink" title="nginx配置ssl"></a>nginx配置ssl</h2><h3 id="检查http-ssl-module-模块"><a href="#检查http-ssl-module-模块" class="headerlink" title="检查http_ssl_module 模块"></a>检查http_ssl_module 模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ./nginx -V</span><br><span class="line"></span><br><span class="line">出现如下模块，表示可以部署ssl ，否则需要添加如下模块</span><br><span class="line">configure arguments: --with-http_ssl_module</span><br></pre></td></tr></table></figure><hr><h3 id="配置https"><a href="#配置https" class="headerlink" title="配置https"></a>配置https</h3><p>和80端口配置基本相似，修改了端口和配置了ssl</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"> listen       443 ssl; #监听443端口（https默认端口）</span><br><span class="line"> server_name www.example.org;#填写绑定证书的域名</span><br><span class="line">     </span><br><span class="line">     # 同一端口实现 https</span><br><span class="line"> error_page 497 https://$http_host$request_uri;</span><br><span class="line"></span><br><span class="line"> ssl_certificate      *.pem;#填写证书绝对位置</span><br><span class="line"> ssl_certificate_key  *.key;   #填写key绝对位置</span><br><span class="line"></span><br><span class="line"> ssl_session_cache    shared:SSL:1m;</span><br><span class="line"> ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line"> ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置</span><br><span class="line"> ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; #按照这个套件配置</span><br><span class="line"> ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line"> location / &#123;</span><br><span class="line"> root   html;#填写你的你的站点目录</span><br><span class="line"> index  index.html index.htm;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="配置重定向"><a href="#配置重定向" class="headerlink" title="配置重定向"></a>配置重定向</h3><p>将80端口重定向到443端口</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"> <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line"> <span class="attribute">server_name</span>  gitlab.camcad.cn;</span><br><span class="line"> <span class="attribute">return</span>       <span class="number">301</span> https://www.example.org<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改配置文件后，需要重新加载配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./nginx -s reload</span><br></pre></td></tr></table></figure><hr><h3 id="实现-301-URL跳转"><a href="#实现-301-URL跳转" class="headerlink" title="实现 301 URL跳转"></a>实现 301 URL跳转</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  www.domainname.cn;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#最低级请求匹配，所有请求都走到这里</span></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">                <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)</span> http://notes.domainname.cn/<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="rewrite-语法"><a href="#rewrite-语法" class="headerlink" title="rewrite 语法"></a>rewrite 语法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^/(.*) http://notes.domainname.com/$1 permanent;</span><br><span class="line"></span><br><span class="line"># 解释</span><br><span class="line">rewrite---是nginx地址重写的关健词指令，开启跳转功能</span><br><span class="line">^/(.*)---正则表达式，表示匹配所有的请求，匹配成功后，跳转到后面指定的url地址</span><br><span class="line">$1---是取出前面正则表达式分组括号的内容</span><br><span class="line">permanent---表示 301 重定向的标记</span><br></pre></td></tr></table></figure><h4 id="rewrite结尾的参数标记如下："><a href="#rewrite结尾的参数标记如下：" class="headerlink" title="rewrite结尾的参数标记如下："></a>rewrite结尾的参数标记如下：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">last---规则匹配完成后，继续向下匹配新的locaiton</span><br><span class="line">break---本条规则匹配完成后，立即停止匹配动作</span><br><span class="line">redirct---返回302临时重定向状态码，浏览器地址栏显示跳转后的url,爬虫不会更新该url</span><br><span class="line">permanent---返回301永久重定向，浏览器地址也显示跳转后的url,爬虫更新该网站url</span><br><span class="line"></span><br><span class="line">last和break用于实现url重写，浏览器的地址栏不会发生变化</span><br><span class="line">redirct和permanent也是用于url跳转，浏览器url地址栏发生变化，跳转到新的url地址栏</span><br></pre></td></tr></table></figure><p>参考资料：<a href="https://blog.csdn.net/qq_35078688/article/details/121405907">https://blog.csdn.net/qq_35078688&#x2F;article&#x2F;details&#x2F;121405907</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;在Ubuntu下编译安装nginx&quot;&gt;&lt;a href=&quot;#在Ubuntu下编译安装nginx&quot; class=&quot;headerlink&quot; title=&quot;在Ubuntu下编译安装nginx&quot;&gt;&lt;/a&gt;在Ubuntu下编译安装nginx&lt;/h2&gt;&lt;h3 id=&quot;安装前提&quot;&gt;&lt;a href=&quot;#安装前提&quot; class=&quot;headerlink&quot; title=&quot;安装前提&quot;&gt;&lt;/a&gt;安装前提&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a)epoll，linux内核版本为2.6或者以上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b)gcc编译器，g++编译器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c)pcre库，函数库，支持解析正则表达式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d)zlib库：压缩解压功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e)openssl库：ssl功能相关库，用于网站加密通讯&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Nginx是高度自由化的Web服务器，它的功能是由许多模块来支持。如果使用了某个模块，这个模块使用了一些类似zlib或OpenSSL等的第三方库，那么就必须先安装这些软件。Ubuntu下不像在centOS中使用yum直接在线安装，可以使用以下方法。&lt;/p&gt;</summary>
    
    
    
    <category term="辅助" scheme="https://notes.camcad.cn/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="ubuntu" scheme="https://notes.camcad.cn/tags/ubuntu/"/>
    
    <category term="nginx" scheme="https://notes.camcad.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu server搭建gitlab环境详细步骤</title>
    <link href="https://notes.camcad.cn/post/b0e2cfa3.html"/>
    <id>https://notes.camcad.cn/post/b0e2cfa3.html</id>
    <published>2023-08-01T09:50:08.000Z</published>
    <updated>2023-11-04T04:43:27.484Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><h4 id="从服务器获取软件列表，并在本地保存为文件"><a href="#从服务器获取软件列表，并在本地保存为文件" class="headerlink" title="从服务器获取软件列表，并在本地保存为文件"></a>从服务器获取软件列表，并在本地保存为文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h4 id="本地安装软件与本地软件列表对比，如本地安装版本低，会提示更新"><a href="#本地安装软件与本地软件列表对比，如本地安装版本低，会提示更新" class="headerlink" title="本地安装软件与本地软件列表对比，如本地安装版本低，会提示更新"></a>本地安装软件与本地软件列表对比，如本地安装版本低，会提示更新</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><h4 id="升级系统依赖"><a href="#升级系统依赖" class="headerlink" title="升级系统依赖"></a>升级系统依赖</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get dist-upgrade</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="安装gitlab前需要对其依赖包进行安装，确保符合安装gitlab的条件。运行如下指令："><a href="#安装gitlab前需要对其依赖包进行安装，确保符合安装gitlab的条件。运行如下指令：" class="headerlink" title="安装gitlab前需要对其依赖包进行安装，确保符合安装gitlab的条件。运行如下指令："></a>安装gitlab前需要对其依赖包进行安装，确保符合安装gitlab的条件。运行如下指令：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ca-certificates curl openssh-server postfix</span><br></pre></td></tr></table></figure><p>对于<code>postfix</code>的安装，请在出现提示时选择“ <strong>Internet站点</strong>”。在下一个屏幕上，输入服务器的域名以配置系统发送邮件的方式。</p><h3 id="换源报错解决方案"><a href="#换源报错解决方案" class="headerlink" title="换源报错解决方案"></a>换源报错解决方案</h3><h4 id="报错如下："><a href="#报错如下：" class="headerlink" title="报错如下："></a>报错如下：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Err:1 http://mirrors.aliyun.com/ubuntu focal InRelease</span><br><span class="line">  Temporary failure resolving &#x27;mirrors.aliyun.com&#x27;</span><br><span class="line">Err:2 http://mirrors.aliyun.com/ubuntu focal-security InRelease</span><br><span class="line">  Temporary failure resolving &#x27;mirrors.aliyun.com&#x27;</span><br><span class="line">Err:3 http://mirrors.aliyun.com/ubuntu focal-updates InRelease</span><br><span class="line">  Temporary failure resolving &#x27;mirrors.aliyun.com&#x27;</span><br></pre></td></tr></table></figure><h4 id="解决：修改-etc-resolv-conf，在里边加上如下："><a href="#解决：修改-etc-resolv-conf，在里边加上如下：" class="headerlink" title="解决：修改/etc/resolv.conf，在里边加上如下："></a>解决：<code>修改/etc/resolv.conf，在里边加上如下：</code></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 114.114.114.114</span><br></pre></td></tr></table></figure><h2 id="安装gitlab"><a href="#安装gitlab" class="headerlink" title="安装gitlab"></a>安装gitlab</h2><p>安装gitlab前需要确定ubuntu的版本代号，才能选择对应的gitlab版本。</p><h3 id="查看ubuntu信息的相关指令"><a href="#查看ubuntu信息的相关指令" class="headerlink" title="查看ubuntu信息的相关指令"></a>查看ubuntu信息的相关指令</h3><h4 id="查看版本代号"><a href="#查看版本代号" class="headerlink" title="查看版本代号"></a>查看版本代号</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure><p>显示如下信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LSB Version:core-9.20170808ubuntu1-noarch:security-9.20170808ubuntu1-noarch</span><br><span class="line">Distributor ID:Ubuntu</span><br><span class="line">Description:Ubuntu 18.04.5 LTS</span><br><span class="line">Release:18.04</span><br><span class="line">Codename:bionic</span><br></pre></td></tr></table></figure><h4 id="查看gcc和linux的版本"><a href="#查看gcc和linux的版本" class="headerlink" title="查看gcc和linux的版本"></a>查看gcc和linux的版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/version</span><br></pre></td></tr></table></figure><p>显示如下信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Linux version 5.4.0-53-generic (buildd@lgw01-amd64-046) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #59~18.04.1-Ubuntu SMP Wed Oct 21 12:14:56 UTC 2020</span><br></pre></td></tr></table></figure><h2 id="下载并安装gitlab"><a href="#下载并安装gitlab" class="headerlink" title="下载并安装gitlab"></a>下载并安装gitlab</h2><p>通过安装wget，下载指定的gitlab文件后，手动安装。</p><h4 id="安装wget"><a href="#安装wget" class="headerlink" title="安装wget"></a>安装wget</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install wget</span><br></pre></td></tr></table></figure><h4 id="下载gitlab-ce"><a href="#下载gitlab-ce" class="headerlink" title="下载gitlab-ce"></a>下载gitlab-ce</h4><p>注意区分ubuntu的版本代号，适用于不同的系统版本。<code>请使用root账号操作</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">实例如下，下载的是20.04版本的</span><br><span class="line">wget -P /Downloads https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/focal/main/g/gitlab-ce/gitlab-ce_15.4.0-ce.0_amd64.deb</span><br><span class="line"></span><br><span class="line">实例如下，下载的是18.4版本的</span><br><span class="line">wget -P /Downloads https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/bionic/main/g/gitlab-ce/gitlab-ce_14.1.3-ce.0_amd64.deb</span><br></pre></td></tr></table></figure><h2 id="安装gitlab-1"><a href="#安装gitlab-1" class="headerlink" title="安装gitlab"></a>安装gitlab</h2><p>使用dpkg指令进行安装，此指令的常用配置参数如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dpkg说明：</span><br><span class="line">dpkg -L 查看软件的状态，如：dpkg -L gitlab-ce</span><br><span class="line">dpkg -P 卸载软件（软件名，而不是安装包名）</span><br><span class="line">dpkg --remove 删除安装包，不删除配置</span><br><span class="line">dpkg --purge 删除安装包和配置文件</span><br></pre></td></tr></table></figure><h4 id="安装软件指令如下："><a href="#安装软件指令如下：" class="headerlink" title="安装软件指令如下："></a>安装软件指令如下：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i gitlab-ce_15.4.0-ce.0_amd64.deb</span><br></pre></td></tr></table></figure><p>显示如下图表示安装成功<br><img src="http://image.camcad.cn/2023/09/gitlab_01.jpg" alt="gitlab_01"></p><h3 id="修改gitlab配置参数"><a href="#修改gitlab配置参数" class="headerlink" title="修改gitlab配置参数"></a>修改gitlab配置参数</h3><h4 id="修改外部url"><a href="#修改外部url" class="headerlink" title="修改外部url"></a>修改外部url</h4><p>在gitlab配置文件 &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb 中修改外部url，改为自己的ip地址或者域名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/gitlab/gitlab.rb</span><br></pre></td></tr></table></figure><p>修改内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">external_url &#x27;http://192.168.64.133:9092&#x27;  ## 本机的局域网ip地址为192.168.64.133，自定义端口为9092</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h4 id="运行以下命令重新配置Gitlab："><a href="#运行以下命令重新配置Gitlab：" class="headerlink" title="运行以下命令重新配置Gitlab："></a>运行以下命令重新配置Gitlab：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure><p>这将使它可以找到的有关您的服务器的信息初始化GitLab。</p><h4 id="重启gitlab，指行如下指令："><a href="#重启gitlab，指行如下指令：" class="headerlink" title="重启gitlab，指行如下指令："></a>重启gitlab，指行如下指令：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl restart</span><br></pre></td></tr></table></figure><p>附上GitLab常用命令：</p><table><thead><tr><th>常用命令</th><th>说明</th></tr></thead><tbody><tr><td>sudo gitlab-ctl reconfigure</td><td>重新加载配置，每次修改&#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb文件之后执行</td></tr><tr><td>sudo gitlab-ctl status</td><td>查看 GitLab 状态</td></tr><tr><td>sudo gitlab-ctl start</td><td>启动 GitLab</td></tr><tr><td>sudo gitlab-ctl stop</td><td>停止 GitLab</td></tr><tr><td>sudo gitlab-ctl restart</td><td>重启 GitLab</td></tr><tr><td>sudo gitlab-ctl tail</td><td>查看所有日志</td></tr><tr><td>sudo gitlab-ctl tail nginx&#x2F;gitlab_acces.log</td><td>查看 nginx 访问日志</td></tr><tr><td>sudo gitlab-ctl tail postgresql</td><td>查看 postgresql 日志</td></tr></tbody></table><h2 id="配置防火墙规则"><a href="#配置防火墙规则" class="headerlink" title="配置防火墙规则"></a>配置防火墙规则</h2><h3 id="防火墙常用指令说明"><a href="#防火墙常用指令说明" class="headerlink" title="防火墙常用指令说明"></a>防火墙常用指令说明</h3><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>sudo ufw status</td><td>查看防火墙状态</td></tr><tr><td>sudo ufw enable</td><td>打开防火墙</td></tr><tr><td>sudo ufw disable</td><td>关闭防火墙</td></tr><tr><td>sudo ufw allow 22&#x2F;tcp</td><td>允许所有的外部IP访问本机的22&#x2F;tcp (ssh)端口</td></tr><tr><td>sudo ufw allow 9092</td><td>允许所有的外部IP访问本机的自定义9092端口</td></tr><tr><td>sudo ufw delete allow 9092</td><td>禁用 9092 端口</td></tr><tr><td>sudo ufw allow from 192.168.1.100</td><td>允许此IP访问所有的本机端口，即添加到了允许访问列表</td></tr><tr><td>sudo ufw delete allow from 192.168.1.100</td><td>从允许访问列表中删除，即禁止此ip进行访问</td></tr></tbody></table><h3 id="启动防火墙"><a href="#启动防火墙" class="headerlink" title="启动防火墙"></a>启动防火墙</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw enable</span><br></pre></td></tr></table></figure><h3 id="允许自定义端口"><a href="#允许自定义端口" class="headerlink" title="允许自定义端口"></a>允许自定义端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 9092</span><br></pre></td></tr></table></figure><h3 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2023/09/gitlab_02.jpg" alt="gitlab_02"></p><h3 id="其他常用的配置有："><a href="#其他常用的配置有：" class="headerlink" title="其他常用的配置有："></a>其他常用的配置有：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow http</span><br><span class="line">sudo ufw allow https</span><br><span class="line">sudo ufw allow OpenSSH</span><br></pre></td></tr></table></figure><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>使用浏览器访问设置的网页地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.64.133:9092</span><br></pre></td></tr></table></figure><p>显示如下页面：<br><img src="http://image.camcad.cn/2023/09/gitlab_03.jpg" alt="gitlab_03"></p><h2 id="gitlab开机自启动"><a href="#gitlab开机自启动" class="headerlink" title="gitlab开机自启动"></a>gitlab开机自启动</h2><h4 id="自启动指令如下："><a href="#自启动指令如下：" class="headerlink" title="自启动指令如下："></a>自启动指令如下：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable gitlab-runsvdir.service</span><br></pre></td></tr></table></figure><h4 id="取消自启动指令如下："><a href="#取消自启动指令如下：" class="headerlink" title="取消自启动指令如下："></a>取消自启动指令如下：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl disable gitlab-runsvdir.service</span><br></pre></td></tr></table></figure><h2 id="获取-x2F-修改超级管理员root的密码（报错）"><a href="#获取-x2F-修改超级管理员root的密码（报错）" class="headerlink" title="获取&#x2F;修改超级管理员root的密码（报错）"></a>获取&#x2F;修改超级管理员root的密码（报错）</h2><h4 id="切换目录："><a href="#切换目录：" class="headerlink" title="切换目录："></a>切换目录：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/gitlab/bin</span><br></pre></td></tr></table></figure><h4 id="执行指令，开始初始化密码："><a href="#执行指令，开始初始化密码：" class="headerlink" title="执行指令，开始初始化密码："></a>执行指令，开始初始化密码：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-rails console</span><br></pre></td></tr></table></figure><p>显示如下：<br><img src="http://image.camcad.cn/2023/09/gitlab_04.jpg" alt="gitlab_04"></p><h4 id="查询用户账号信息并赋值给u"><a href="#查询用户账号信息并赋值给u" class="headerlink" title="查询用户账号信息并赋值给u"></a>查询用户账号信息并赋值给u</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u=User.where(id:1).first</span><br></pre></td></tr></table></figure><h4 id="设置该用户名的密码，密码这里不要使用引号，不然会无法登录成功"><a href="#设置该用户名的密码，密码这里不要使用引号，不然会无法登录成功" class="headerlink" title="设置该用户名的密码，密码这里不要使用引号，不然会无法登录成功"></a>设置该用户名的密码，密码这里不要使用引号，不然会无法登录成功</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u.password=12345678</span><br></pre></td></tr></table></figure><h4 id="确认密码"><a href="#确认密码" class="headerlink" title="确认密码"></a>确认密码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u.password_confirmation=12345678</span><br></pre></td></tr></table></figure><h4 id="保存信息-注意“！”"><a href="#保存信息-注意“！”" class="headerlink" title="保存信息(注意“！”)"></a>保存信息(注意“！”)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u.save!</span><br></pre></td></tr></table></figure><h4 id="最后退出"><a href="#最后退出" class="headerlink" title="最后退出"></a>最后退出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>操作如下图：<br><img src="http://image.camcad.cn/2023/09/gitlab_05.jpg" alt="gitlab_05"><br>最后我们使用默认的账号：root 和刚刚设置好的密码12345678进行登录。</p><h2 id="gitlab配置发送邮件"><a href="#gitlab配置发送邮件" class="headerlink" title="gitlab配置发送邮件"></a>gitlab配置发送邮件</h2><h3 id="修改gitlab的配置文件：-x2F-etc-x2F-gitlab-x2F-gitlab-rb"><a href="#修改gitlab的配置文件：-x2F-etc-x2F-gitlab-x2F-gitlab-rb" class="headerlink" title="修改gitlab的配置文件：&#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb"></a>修改gitlab的配置文件：&#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails[&#x27;smtp_enable&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;smtp_address&#x27;] = &quot;smtp.qq.com&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_port&#x27;] = 465</span><br><span class="line">gitlab_rails[&#x27;smtp_user_name&#x27;] = &quot;******@qq.com&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_password&#x27;] = &quot;授权码&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_domain&#x27;] = &quot;smtp.qq.com&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_authentication&#x27;] = &quot;login&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_enable_starttls_auto&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;smtp_tls&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;gitlab_email_from&#x27;] = &#x27;******@qq.com&#x27;</span><br></pre></td></tr></table></figure><p>重启生效：<code>gitlab-ctl reconfigure</code></p><h3 id="测试配置是否成功："><a href="#测试配置是否成功：" class="headerlink" title="测试配置是否成功："></a>测试配置是否成功：</h3><p>执行 <code>gitlab-rails console</code> 进入控制台。 然后在控制台提示符后输入下面的命令 发送一封测试邮件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Notify.test_email(&#x27;收件人邮箱&#x27;,&#x27;邮件标题&#x27;,&#x27;邮件正文&#x27;).deliver_now</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2023/09/gitlab_06.jpg" alt="gitlab_06"><br>测试成功，添加gitlab用户又可以收到邮件了！</p><h2 id="gitlab-与-github-镜像存储库（Mirrored-repositorie）"><a href="#gitlab-与-github-镜像存储库（Mirrored-repositorie）" class="headerlink" title="gitlab 与 github 镜像存储库（Mirrored repositorie）"></a>gitlab 与 github 镜像存储库（Mirrored repositorie）</h2><h3 id="在-github中获取-ssh-存储库路径，如下："><a href="#在-github中获取-ssh-存储库路径，如下：" class="headerlink" title="在 github中获取 ssh 存储库路径，如下："></a>在 github中获取 ssh 存储库路径，如下：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git@github.com:emmet/test.git</span><br></pre></td></tr></table></figure><h3 id="将github-ssh-路径-放入gitlab-镜像存储库（Mirroring-repositorie）中"><a href="#将github-ssh-路径-放入gitlab-镜像存储库（Mirroring-repositorie）中" class="headerlink" title="将github ssh 路径 放入gitlab  镜像存储库（Mirroring repositorie）中"></a>将github ssh 路径 放入gitlab  镜像存储库（Mirroring repositorie）中</h3><p><img src="http://image.camcad.cn/2023/09/gitlab_07.jpg" alt="gitlab_07"></p><p>比如：github 存储库路径<code>git@github.com:emmet/test.git</code> ,在gitlab  <code>Git repository URL</code> 中的格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git@github.com:emmet/test.git</span><br><span class="line"></span><br><span class="line">在 Git repository URL 中输入如下，注意 &quot;:&quot; 修改成&quot;/&quot;</span><br><span class="line">ssh://git@github.com/emmet/test.git</span><br></pre></td></tr></table></figure><h3 id="检测主机密钥（detect-host-keys）"><a href="#检测主机密钥（detect-host-keys）" class="headerlink" title="检测主机密钥（detect host keys）"></a>检测主机密钥（detect host keys）</h3><p><img src="http://image.camcad.cn/2023/09/gitlab_08.jpg" alt="gitlab_08"></p><h3 id="添加-镜像存储库（Mirroring-repositorie）"><a href="#添加-镜像存储库（Mirroring-repositorie）" class="headerlink" title="添加 镜像存储库（Mirroring repositorie）"></a>添加 镜像存储库（Mirroring repositorie）</h3><p><img src="http://image.camcad.cn/2023/09/gitlab_09.jpg" alt="gitlab_09"></p><h3 id="复制-SSH-公共密钥"><a href="#复制-SSH-公共密钥" class="headerlink" title="复制 SSH 公共密钥"></a>复制 SSH 公共密钥</h3><p><img src="http://image.camcad.cn/2023/09/gitlab_10.jpg" alt="gitlab_10"></p><h3 id="将刚刚复制的-SSH-公共密钥添加到github中"><a href="#将刚刚复制的-SSH-公共密钥添加到github中" class="headerlink" title="将刚刚复制的 SSH 公共密钥添加到github中"></a>将刚刚复制的 SSH 公共密钥添加到github中</h3><p><img src="http://image.camcad.cn/2023/09/gitlab_11.jpg" alt="gitlab_11"></p><h3 id="注意，允许写入访问（Allow-write-access-）"><a href="#注意，允许写入访问（Allow-write-access-）" class="headerlink" title="注意，允许写入访问（Allow write access ）"></a>注意，允许写入访问（Allow write access ）</h3><p><img src="http://image.camcad.cn/2023/09/gitlab_12.jpg" alt="gitlab_12"></p><p>gitlab安装参考：<a href="https://blog.csdn.net/nanerxue/article/details/119825292?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-119825292-blog-121487390.pc_relevant_aa&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-119825292-blog-121487390.pc_relevant_aa&utm_relevant_index=1">https://blog.csdn.net/nanerxue/article/details/119825292</a></p><p>gitlab邮件配置参考：<a href="https://blog.csdn.net/baidu_21349635/article/details/125514595">https://blog.csdn.net/baidu_21349635&#x2F;article&#x2F;details&#x2F;125514595</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;安装依赖&quot;&gt;&lt;a href=&quot;#安装依赖&quot; class=&quot;headerlink&quot; title=&quot;安装依赖&quot;&gt;&lt;/a&gt;安装依赖&lt;/h2&gt;&lt;h4 id=&quot;从服务器获取软件列表，并在本地保存为文件&quot;&gt;&lt;a href=&quot;#从服务器获取软件列表，并在本地保存为文件&quot; class=&quot;headerlink&quot; title=&quot;从服务器获取软件列表，并在本地保存为文件&quot;&gt;&lt;/a&gt;从服务器获取软件列表，并在本地保存为文件&lt;/h4&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;本地安装软件与本地软件列表对比，如本地安装版本低，会提示更新&quot;&gt;&lt;a href=&quot;#本地安装软件与本地软件列表对比，如本地安装版本低，会提示更新&quot; class=&quot;headerlink&quot; title=&quot;本地安装软件与本地软件列表对比，如本地安装版本低，会提示更新&quot;&gt;&lt;/a&gt;本地安装软件与本地软件列表对比，如本地安装版本低，会提示更新&lt;/h4&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get upgrade&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;升级系统依赖&quot;&gt;&lt;a href=&quot;#升级系统依赖&quot; class=&quot;headerlink&quot; title=&quot;升级系统依赖&quot;&gt;&lt;/a&gt;升级系统依赖&lt;/h4&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get dist-upgrade&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="辅助" scheme="https://notes.camcad.cn/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/tags/gitlab/"/>
    
    <category term="ubuntu" scheme="https://notes.camcad.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>git工作中的常用命令</title>
    <link href="https://notes.camcad.cn/post/b4a6d3f0.html"/>
    <id>https://notes.camcad.cn/post/b4a6d3f0.html</id>
    <published>2023-08-01T09:37:27.000Z</published>
    <updated>2023-11-04T04:43:27.484Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="1、git-拉取-amp-推送"><a href="#1、git-拉取-amp-推送" class="headerlink" title="1、git 拉取&amp;推送"></a>1、git 拉取&amp;推送</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> [仓库地址]        <span class="comment"># 克隆仓库，加上-b 可以拉指定分支</span></span><br><span class="line">git pull                <span class="comment"># 拉取远程最新代码 + 合并</span></span><br><span class="line">git fetch                  <span class="comment"># 拉取远程最新数据</span></span><br><span class="line">git push                   <span class="comment"># 推送代码到远程</span></span><br></pre></td></tr></table></figure><span id="more"></span><h4 id="2、git-加入到暂存区、临时工作区"><a href="#2、git-加入到暂存区、临时工作区" class="headerlink" title="2、git 加入到暂存区、临时工作区"></a>2、git 加入到暂存区、临时工作区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .               <span class="comment"># 将文件的【新增、修改】添加到暂存区</span></span><br><span class="line">git add -u                     <span class="comment"># 将文件的【修改、删除】添加到暂存区</span></span><br><span class="line">git add -A                     <span class="comment"># 将文件的【新增、修改、替换、删除】添加到暂存区</span></span><br></pre></td></tr></table></figure><h4 id="3、git-保存-x2F-弹出工作现场"><a href="#3、git-保存-x2F-弹出工作现场" class="headerlink" title="3、git 保存&#x2F;弹出工作现场"></a>3、git 保存&#x2F;弹出工作现场</h4><p>适用于开发时忘记切换分支的场景，后面不加文件名就是针对所有文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash [文件名]           <span class="comment"># 保存⼯作现场到栈</span></span><br><span class="line">git stash pop [文件名]           <span class="comment"># 从栈中弹出⼯作现场</span></span><br></pre></td></tr></table></figure><h4 id="4、git-add-命令后"><a href="#4、git-add-命令后" class="headerlink" title="4、git add 命令后"></a>4、git add 命令后</h4><ul><li>如何撤销已经加入到暂存区的文件呢？</li><li>取消跟踪某文件？</li><li>放弃修改？<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD -- .<span class="comment"># 撤销所有</span></span><br><span class="line">git reset HEAD -- [文件名]<span class="comment"># 撤销特定目标</span></span><br><span class="line">git checkout [文件名]<span class="comment"># 从缓冲区检出文件</span></span><br><span class="line">git checkout .<span class="comment"># 从缓冲区检出所有文件</span></span><br><span class="line">git <span class="built_in">rm</span> --cached [文件名]<span class="comment"># 取消跟踪某文件</span></span><br><span class="line">git restore [文件名]<span class="comment"># 放弃修改</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="5、git-查看-x2F-创建-x2F-修改-x2F-删除-x2F-拉取-x2F-提交本地或远程分支"><a href="#5、git-查看-x2F-创建-x2F-修改-x2F-删除-x2F-拉取-x2F-提交本地或远程分支" class="headerlink" title="5、git 查看&#x2F;创建&#x2F;修改&#x2F;删除&#x2F;拉取&#x2F;提交本地或远程分支"></a>5、git 查看&#x2F;创建&#x2F;修改&#x2F;删除&#x2F;拉取&#x2F;提交本地或远程分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git branch                                   <span class="comment"># 查看本地分支</span></span><br><span class="line">git branch -r                                <span class="comment"># 查看远程分支</span></span><br><span class="line">git fetch origin new_branch                  <span class="comment"># 拉取远程分支</span></span><br><span class="line">git branch -f branch_name commitID     <span class="comment"># 将指定分支移到某个commit上</span></span><br><span class="line">git branch -b new_branch                     <span class="comment"># 创建并切换至本地分支</span></span><br><span class="line">git branch -m old_branch new_branch          <span class="comment"># 重命名本地分支</span></span><br><span class="line">git branch -d old_branch         <span class="comment"># 删除本地分支</span></span><br><span class="line">git push origin :old_branch     <span class="comment"># 删除远程分支</span></span><br><span class="line">或 git push origin --delete old_branch     </span><br><span class="line">git push --set-upstream origin new_branch    <span class="comment"># 推送本地分支到远程/更新远程分支</span></span><br></pre></td></tr></table></figure><h4 id="6、拉取远程分支并创建本地分支"><a href="#6、拉取远程分支并创建本地分支" class="headerlink" title="6、拉取远程分支并创建本地分支"></a>6、拉取远程分支并创建本地分支</h4><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b [本地分支名x] [origin/远程分支名x]</span><br></pre></td></tr></table></figure><p>使用该方式会在本地新建分支x，并自动切换到该本地分支x。<br>采用此种方法建立的本地分支会和远程分支建立映射关系。</p><h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin [远程分支名x] :[本地分支名x]</span><br></pre></td></tr></table></figure><p>使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动 <code>checkout</code>。<br>采用此种方法建立的本地分支不会和远程分支建立映射关系。</p><h4 id="7、链接本地仓库到远程仓库"><a href="#7、链接本地仓库到远程仓库" class="headerlink" title="7、链接本地仓库到远程仓库"></a>7、链接本地仓库到远程仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init      <span class="comment"># 如果当前项目没有git版本库，需要先通过这个命令初始化仓库</span></span><br><span class="line">git remote -v        <span class="comment"># 通过这个命令查看当前仓库链接的远程仓库</span></span><br><span class="line">git remote add origin [远程仓库地址]    <span class="comment"># 添加远程仓库链接，与远程代码仓库建立连接</span></span><br></pre></td></tr></table></figure><h4 id="8、fork别人仓库并与原仓库保持同步"><a href="#8、fork别人仓库并与原仓库保持同步" class="headerlink" title="8、fork别人仓库并与原仓库保持同步"></a>8、fork别人仓库并与原仓库保持同步</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、fork 源仓库到自己的 github</span><br><span class="line">2、git <span class="built_in">clone</span> [fork的仓库地址]</span><br><span class="line">3、git remote add upstream [原仓库地址]  与原仓库建立链接，可通过 git remote -v 查看当前的源，也可通过 git remote remove 分支名 移除对应远程分支</span><br><span class="line">4、切换到原仓库，执行 git pull upstream master 拉取代码，执行 git merge upstream/分支名 进行合并</span><br><span class="line"></span><br><span class="line">// 基本操作</span><br><span class="line">git remote add upstream [远程仓库git地址] <span class="comment"># 本地新加⼀个新的远程库</span></span><br><span class="line">git fetch upstream     <span class="comment"># 从远程仓库拉去代码</span></span><br><span class="line">git chekout master   <span class="comment"># 切换分⽀</span></span><br><span class="line">git merge upstream/master     <span class="comment"># 合并远程分⽀</span></span><br></pre></td></tr></table></figure><p>tips：当然也可以通过反向 <code>pull request</code> 同步代码，参考<a href="https://blog.csdn.net/ganquanzhong/article/details/103023081?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&spm=1001.2101.3001.4242">这里</a></p><h4 id="9、git-删除误提交的文件"><a href="#9、git-删除误提交的文件" class="headerlink" title="9、git 删除误提交的文件"></a>9、git 删除误提交的文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">rm</span> -r --cached .idea     <span class="comment"># 删除.idea文件夹</span></span><br><span class="line">git commit -m <span class="string">&#x27;删除.idea&#x27;</span>    <span class="comment"># 提交，添加操作说明</span></span><br><span class="line">git push -u origin master     <span class="comment"># 将本次更改更新到github项目上去</span></span><br><span class="line">git checkout .      <span class="comment"># 本地所有修改的、没有提交的，都恢复到原来的状态，checkout【文件名】丢弃指定文件的修改</span></span><br><span class="line">git clean -<span class="built_in">df</span>  <span class="comment"># 清理untracked files，释放工作区空间</span></span><br></pre></td></tr></table></figure><h4 id="10、git-标签操作"><a href="#10、git-标签操作" class="headerlink" title="10、git 标签操作"></a>10、git 标签操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git tag           <span class="comment"># 列出所有标签，加上-l命令可以使用通配符来过滤tag，如 git tag -l &#x27;2.0.&#x27;</span></span><br><span class="line">git show [标签名]                 <span class="comment"># 查看标签详情</span></span><br><span class="line">git tag [标签名]                <span class="comment"># 添加标签,可加上-a参数创建一个带备注的tag，如git tag -a tagName -m &quot;my tag&quot;</span></span><br><span class="line">git tag -d [标签名]                    <span class="comment"># 删除标签</span></span><br><span class="line">git push origin :refs/tags/[标签名]    <span class="comment"># 删除远程标签</span></span><br><span class="line">git push origin [标签名]               <span class="comment"># 将标签推送到远程，git push tags 推送本地所有标签</span></span><br><span class="line">git checkout [标签名]             <span class="comment"># 切换到指定tag</span></span><br></pre></td></tr></table></figure><h4 id="11、git主分支同步到其它分支"><a href="#11、git主分支同步到其它分支" class="headerlink" title="11、git主分支同步到其它分支"></a>11、git主分支同步到其它分支</h4><p>改代码的时候忘记切换到指定分支，直接在主分支上改了，已经提交到 git 上了。<br>这时需要先切换到分支上，然后执行 <code>git merge master</code>，其它分支同理。</p><h4 id="12、推送子分支代码到父分支"><a href="#12、推送子分支代码到父分支" class="headerlink" title="12、推送子分支代码到父分支"></a>12、推送子分支代码到父分支</h4><p>当我们从某个分支迁出一个分支并提交修改后，想直接把该分支代码合并到父分支，但又不想切到父分支再 <code>merge</code> 再 <code>push</code>。此时可以直接在当前分支上执行 <code>git push origin 当前分支名:父分支</code>名。</p><h4 id="13、git-忽略指定文件（不从版本库删除）"><a href="#13、git-忽略指定文件（不从版本库删除）" class="headerlink" title="13、git 忽略指定文件（不从版本库删除）"></a>13、git 忽略指定文件（不从版本库删除）</h4><p>项目中一些需要在本地修改，又不能写进<code>.gitignore</code>中，就需要通过命令了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git update-index --assume-unchanged /path/to/file         <span class="comment"># 忽略</span></span><br><span class="line">git update-index --no-assume-unchanged /path/to/file      <span class="comment"># 取消忽略</span></span><br></pre></td></tr></table></figure><h4 id="14、git-回退版本（git-reset-和-git-revert）"><a href="#14、git-回退版本（git-reset-和-git-revert）" class="headerlink" title="14、git 回退版本（git reset 和 git revert）"></a>14、git 回退版本（git reset 和 git revert）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 使用git <span class="built_in">log</span>查看日志和版本号</span><br><span class="line">git reset --hard  HEAD^   <span class="comment"># 回退到上一个版本（不加--hard，只回退，不会更新工作区）</span></span><br><span class="line">git reset --hard [目标版本号]  +  git push -f             <span class="comment"># 【撤销到某个版本】重置版本，会删除重置版本之后的所有版本</span></span><br><span class="line">git revert -n [目标版本号] + git commit -m + git push     <span class="comment"># 【撤销到某个提交】反转版本，会保留之前的提交版本，创建一个新的版本</span></span><br></pre></td></tr></table></figure><h4 id="15、git-合并代码（git-merge-和-git-rebase）"><a href="#15、git-合并代码（git-merge-和-git-rebase）" class="headerlink" title="15、git 合并代码（git merge 和 git rebase）"></a>15、git 合并代码（git merge 和 git rebase）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git merge [分支名]                       <span class="comment"># 【合并分支】会自动生成一个新的合并commit，--no-diff参数可保留之前的分支commit</span></span><br><span class="line">git merge --squash [分支名]<span class="comment"># 【清洗提交历史】只合并不commit</span></span><br><span class="line">git rebase [分支名]                      <span class="comment"># 【变基操作】拉直分支图(美观)，不会像merge那样产生新的commit（尽可能少的commit），比较干净，适用于个人项目或者冲突少的情况</span></span><br><span class="line">git rebase -i [分支名]                   <span class="comment"># 交互式 rebase，可以选择哪些commit需要rebase</span></span><br><span class="line">````</span><br><span class="line"><span class="comment">#### 16、配置用户名密码</span></span><br><span class="line">```Bash</span><br><span class="line">git config --global user.name <span class="string">&quot;yourName&quot;</span>         <span class="comment"># 设置用户名 </span></span><br><span class="line">git config --global user.email <span class="string">&quot;aa@qq.com&quot;</span>       <span class="comment"># 设置邮箱</span></span><br><span class="line">git config list                                            <span class="comment"># 查看配置列表</span></span><br></pre></td></tr></table></figure><p>也可以直接用 github 官方客户端配置。</p><h4 id="17、提交多行-commit-信息"><a href="#17、提交多行-commit-信息" class="headerlink" title="17、提交多行 commit 信息"></a>17、提交多行 commit 信息</h4><blockquote><p>有两种方法实现多行信息提交：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. git commit -m “标题” -m “描述”</span><br><span class="line">2. git commit -m <span class="string">&quot;</span></span><br><span class="line"><span class="string">标题</span></span><br><span class="line"><span class="string">描述</span></span><br><span class="line"><span class="string">&quot;</span></span><br></pre></td></tr></table></figure><h4 id="18、查看日志"><a href="#18、查看日志" class="headerlink" title="18、查看日志"></a>18、查看日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span>  <span class="comment"># 详细日志</span></span><br><span class="line">git <span class="built_in">log</span> --oneline  <span class="comment"># 简短⽇志</span></span><br><span class="line">git reflog  <span class="comment"># 操作记录，包括回退记录也会被显示</span></span><br></pre></td></tr></table></figure><h4 id="19、把指定-commit-移动到当前分支上"><a href="#19、把指定-commit-移动到当前分支上" class="headerlink" title="19、把指定 commit 移动到当前分支上"></a>19、把指定 commit 移动到当前分支上</h4><blockquote><p>可以把多个 commit 移动到当前分支上。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git cherry-pick commitId1 commitId2</span><br></pre></td></tr></table></figure><h4 id="20、添加子模块"><a href="#20、添加子模块" class="headerlink" title="20、添加子模块"></a>20、添加子模块</h4><blockquote><p>可以使用 git submodule 命令实现。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://git.oschina.net/gaofeifps/body.git</span><br><span class="line">git submodule init &amp;&amp; git submodule update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面这一句的效果和上面三条命令的效果是一样的,多加了个参数  `--recursive`</span></span><br><span class="line">git <span class="built_in">clone</span> https://git.oschina.net/gaofeifps/body.git --recursive</span><br></pre></td></tr></table></figure><h4 id="21、git本地配置多个ssh密钥"><a href="#21、git本地配置多个ssh密钥" class="headerlink" title="21、git本地配置多个ssh密钥"></a>21、git本地配置多个ssh密钥</h4><p>参数资料：<a href="https://blog.csdn.net/qq_39361915/article/details/122545320">https://blog.csdn.net/qq_39361915&#x2F;article&#x2F;details&#x2F;122545320</a><br><code>config</code>文件配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 配置文件参数</span><br><span class="line"># Host : Host可以看作是一个你要识别的模式，对识别的模式，进行配置对应的的主机名和ssh文件（可以直接填写ip地址）</span><br><span class="line"># HostName : 要登录主机的主机名（建议与Host一致）</span><br><span class="line"># User : 登录名（如gitlab的username）</span><br><span class="line"># IdentityFile : 指明上面User对应的identityFile路径</span><br><span class="line"># Port: 端口号（如果不是默认22号端口则需要指定）</span><br><span class="line"></span><br><span class="line">Host emmet.66ip.cn #公司的gitlab地址</span><br><span class="line">    HostName emmet.66ip.cn #与Host保持一致即可</span><br><span class="line">    User ugopen@demo.cn #你的Gitlab邮箱</span><br><span class="line">    IdentityFile ~/.ssh/gitlab-rsa</span><br><span class="line">    Port 22 #gitlab的ssh端口</span><br><span class="line"></span><br><span class="line">Host gitlab.demo.cn #公司的gitlab地址</span><br><span class="line">HostName gitlab.demo.cn #与Host保持一致即可</span><br><span class="line">User ugopen@demo.cn #你的Gitlab邮箱</span><br><span class="line">IdentityFile ~/.ssh/gitlab.demo.cn-rsa</span><br><span class="line">Port 22 #gitlab的ssh端口</span><br><span class="line"></span><br><span class="line">Host github.com</span><br><span class="line">    HostName ssh.github.com</span><br><span class="line">    User ugopen@demo.cn #你的Github邮箱</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/github-rsa</span><br><span class="line">Port 443</span><br><span class="line"></span><br><span class="line">Host gitee.com</span><br><span class="line">    HostName gitee.com</span><br><span class="line">    User ugopen@demo.cn #你的Github邮箱</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/gitee-rsa</span><br></pre></td></tr></table></figure><h4 id="22、gitlab（Mirroring-repositories）"><a href="#22、gitlab（Mirroring-repositories）" class="headerlink" title="22、gitlab（Mirroring repositories）"></a>22、gitlab（Mirroring repositories）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">http</span><br><span class="line">http://账号@域名:端口/路径.git</span><br><span class="line">http://emmet@domainname:6666/example.git</span><br><span class="line"></span><br><span class="line">ssh</span><br><span class="line">ssh://git@域名/路径.git</span><br><span class="line">ssh://git@domainname/example.git</span><br></pre></td></tr></table></figure><h4 id="GIT常见错误"><a href="#GIT常见错误" class="headerlink" title="GIT常见错误"></a>GIT常见错误</h4><p>拉取代码时提示 <code>fatal: refusing to merge unrelated histories</code>，我们只要加上 <code>--allow-unrelated-histories</code> 再试即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master --allow-unrelated-histories </span><br></pre></td></tr></table></figure><h4 id="【参考文章】"><a href="#【参考文章】" class="headerlink" title="【参考文章】"></a>【参考文章】</h4><p><a href="https://bbchin.com/archives/git-tricks">Git 工作中的常用命令</a><br><a href="https://www.git-scm.com/book/zh/v2">Git中文文档</a><br><a href="https://zhuanlan.zhihu.com/p/156726632">Merge，Rebase，Cherry-Pick 了解一下</a><br><a href="https://learngitbranching.js.org/?locale=zh_CN">Git branch 练习工具</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;h4 id=&quot;1、git-拉取-amp-推送&quot;&gt;&lt;a href=&quot;#1、git-拉取-amp-推送&quot; class=&quot;headerlink&quot; title=&quot;1、git 拉取&amp;amp;推送&quot;&gt;&lt;/a&gt;1、git 拉取&amp;amp;推送&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; [仓库地址]        &lt;span class=&quot;comment&quot;&gt;# 克隆仓库，加上-b 可以拉指定分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git pull             	   &lt;span class=&quot;comment&quot;&gt;# 拉取远程最新代码 + 合并&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git fetch                  &lt;span class=&quot;comment&quot;&gt;# 拉取远程最新数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push                   &lt;span class=&quot;comment&quot;&gt;# 推送代码到远程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="辅助" scheme="https://notes.camcad.cn/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="git" scheme="https://notes.camcad.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-Modeler error：tag limit would be exceeded</title>
    <link href="https://notes.camcad.cn/post/da9d7e37.html"/>
    <id>https://notes.camcad.cn/post/da9d7e37.html</id>
    <published>2023-07-19T11:07:40.000Z</published>
    <updated>2023-11-04T04:43:27.468Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>当总成类似于飞机、汽车、航空母舰等等，并且在总成下需要创建大量辅助对象时，使用了UFUN函数，对象到达一定的量级。就会出现TAG值上限报错，报错提示如下：<br><img src="http://image.camcad.cn/2023/07/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91-Modeler-error%EF%BC%9Atag%20limit%20would%20be%20exceeded.png" alt="NX二次开发-Modeler-error：tag limit would be exceeded"></p><span id="more"></span><h3 id="导致原因"><a href="#导致原因" class="headerlink" title="导致原因"></a>导致原因</h3><p>由于UFUN测量最小距离“UF_MODL_ask_minimum_dist_3”函数底层实现中，首先判断测量的对象是不是OCC对象，如果是OCC对象，那么UFUN函数内核会将OCC对象提取出原型使用。然后再通过底层内核将提取的原型对象摧毁，每次提取都是一次额外TAG值开销，在NX内核（ Parasolid ）中TAG值总共大约有25亿左右可用。当25亿TAG值全部分配完后，就会出现TAG上限报错提示。而且不可回收，TAG值资源用完之后，除非重启NX否则TAG值无法初始化。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>判断干涉检查的对象是不是OCC对象，如果是OCC对象，那么就提前把OCC对象给链接出原型后再使用。解决测量函数在内核中产生的大量TAG值开销，当干涉检查结束后，再将链接出的的OCC原型删除。关键代码如下：<br><img src="http://image.camcad.cn/2023/07/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91-%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BAOCC%E5%AF%B9%E8%B1%A1.png" alt="NX二次开发-判断是否为OCC对象"></p><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p><strong>从UG日志中抓出的出错点函数调用栈，调用次序为从下到上</strong></p><table><thead><tr><th align="center">代码区域</th><th align="left">内存地址</th><th align="left">调用模块</th><th align="left">调用函数</th></tr></thead><tbody><tr><td align="center">异常处理</td><td align="left">[ 1] 7FFE2227C107</td><td align="left">(libsyss)</td><td align="left"></td></tr><tr><td align="center">异常处理</td><td align="left">[ 2] 7FFE2227BE9B</td><td align="left">(libsyss)</td><td align="left"></td></tr><tr><td align="center">异常处理</td><td align="left">[ 3] 7FFE2227CDA0</td><td align="left">(libsyss)</td><td align="left"></td></tr><tr><td align="center">异常处理</td><td align="left">[ 4] 7FFE2227D0B2</td><td align="left">(libsyss)</td><td align="left"></td></tr><tr><td align="center">异常处理</td><td align="left">[ 5] 7FFE22217326</td><td align="left">(libsyss)</td><td align="left"></td></tr><tr><td align="center">异常处理</td><td align="left">[ 6] 7FFE22215552</td><td align="left">(libsyss)</td><td align="left"></td></tr><tr><td align="center">内部测量</td><td align="left">[ 7] 7FFE2F67F9A3</td><td align="left">(libdman)</td><td align="left">KI__error(a1)</td></tr><tr><td align="center">内部测量</td><td align="left">[ 8] 7FFE2F67FB18</td><td align="left">(libdman)</td><td align="left">KI__process_ifail(v4)</td></tr><tr><td align="center">内部测量</td><td align="left">[ 9] 7FFE2F67BC44</td><td align="left">(libdman)</td><td align="left">KI_copyen （内部继续调用pskernel的COPYEN函数,过程失败进入 [ 9] 7FFE2F67BC44的异常处理过程）</td></tr><tr><td align="center">内部测量</td><td align="left">[10] 7FFE1EF8D1AC</td><td align="left">(libpartutils)</td><td align="left">PX_ask_displaced_tag_of_body</td></tr><tr><td align="center">内部测量</td><td align="left">[11] 7FFE1EF8D3FE</td><td align="left">(libpartutils)</td><td align="left">PX_ask_tag_of_body</td></tr><tr><td align="center">内部测量</td><td align="left">[12] 7FFE1EF53C7D</td><td align="left">(libpartutils)</td><td align="left">pxclpt_xfrm_2</td></tr><tr><td align="center">内部测量</td><td align="left">[13] 7FFE1EFB1325</td><td align="left">(libpartutils)</td><td align="left">s392_2</td></tr><tr><td align="center">UF函数</td><td align="left">[14] 7FFE2E3D72CB</td><td align="left">(libufunx)</td><td align="left">UFX_MODL_ask_minimum_dist_3</td></tr><tr><td align="center">UF函数</td><td align="left">[15] 7FFE726718CC</td><td align="left">(libufun)</td><td align="left">UF_MODL_ask_minimum_dist_3</td></tr><tr><td align="center">工具代码</td><td align="left">[16] 7FFE728219A3</td><td align="left">PPDT_ExtProject_Checker</td><td align="left">FaceSphereTypeTester</td></tr><tr><td align="center">工具代码</td><td align="left">[17] 7FFE727FD2E0</td><td align="left">PPDT_ExtProject_Checker</td><td align="left">CreateFasciaCheck</td></tr><tr><td align="center">工具代码</td><td align="left">[18] 7FFE727F20C3</td><td align="left">PPDT_ExtProject_Checker</td><td align="left">update_cb</td></tr><tr><td align="center">工具代码</td><td align="left">[19] 7FFE728623A1</td><td align="left">PPDT_ExtProject_Checker</td><td align="left">operator()</td></tr></tbody></table><h4 id="出错关键函数"><a href="#出错关键函数" class="headerlink" title="出错关键函数"></a>出错关键函数</h4><table><thead><tr><th align="center">代码区域</th><th align="left">内存地址</th><th align="left">调用模块</th><th align="left">调用函数</th></tr></thead><tbody><tr><td align="center">内部测量</td><td align="left">[10] 7FFE1EF8D1AC</td><td align="left">(libpartutils)</td><td align="left">PX_ask_displaced_tag_of_body</td></tr></tbody></table><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">_BOOL8 __fastcall <span class="title">PX_ask_displaced_tag_of_body</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> obj1, <span class="keyword">struct</span> UGS::Math::TransformMatrix *a2, <span class="type">int</span> *a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">bool</span> v5; <span class="comment">// bl</span></span><br><span class="line">  <span class="type">int</span> v7[<span class="number">6</span>]; <span class="comment">// [rsp+20h] [rbp-18h] BYREF</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> s_obj1; <span class="comment">// [rsp+40h] [rbp+8h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v9; <span class="comment">// [rsp+58h] [rbp+20h] BYREF</span></span><br><span class="line"></span><br><span class="line">  s_obj1 = obj1;</span><br><span class="line">  v5 = <span class="built_in">OCC_is_occurrence</span>(obj1) || a2;  <span class="comment">//判断是否为OCC</span></span><br><span class="line">  <span class="built_in">es7010_occ</span>(&amp;s_obj1, a3);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> ( v5 )                            <span class="comment">//是OCC进入, 如果选择了装配部件,会进入此过程</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">KI_copyen</span>(*a3, v7);                <span class="comment">// 获取原型并COPY，此过程会消耗Pk内核管理的Tag资源，如果是几万个面的实体，此</span></span><br><span class="line"><span class="comment">// 过程会消耗20万--30万个Tag资源 ，每次调用UF_MODL_ask_minimum_dist_3都会</span></span><br><span class="line"><span class="comment">// 消耗，而且不可回收, Tag资源用完之后，PK的其他函数就无法创建UNDO标记，因为</span></span><br><span class="line"><span class="comment">// UNDO标记也是Tag值，这样在后续会产生UNDO标记失败，从整个报错过程分析，后</span></span><br><span class="line"><span class="comment">// 续产生的都是创建UNDO失败错误.。</span></span><br><span class="line">  </span><br><span class="line">    <span class="built_in">PX_ask_displaced_transform_of_occurrence</span>(s_obj1, <span class="number">0</span>, a2, &amp;v9);</span><br><span class="line">    <span class="built_in">KI_apptra</span>(v7[<span class="number">0</span>], v9);</span><br><span class="line">    <span class="built_in">KI_delent</span>(v9);                   </span><br><span class="line">    *a3 = v7[<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="出错关键函数-1"><a href="#出错关键函数-1" class="headerlink" title="出错关键函数"></a>出错关键函数</h4><table><thead><tr><th align="center">代码区域</th><th align="left">内存地址</th><th align="left">调用模块</th><th align="left">调用函数</th></tr></thead><tbody><tr><td align="center">内部测量</td><td align="left">[ 9] 7FFE2F67BC44</td><td align="left">(libdman)</td><td align="left">KI_copyen （内部继续调用pskernel的COPYEN函数,过程失败进入 [ 9] 7FFE2F67BC44的异常处理过程）</td></tr></tbody></table><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">KI_copyen</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> *a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> v3; <span class="comment">// [rsp+30h] [rbp+8h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// [rsp+40h] [rbp+18h] BYREF</span></span><br><span class="line"></span><br><span class="line">  v3 = a1;</span><br><span class="line">  <span class="built_in">copyen</span>(&amp;v3, a2, &amp;v4); </span><br><span class="line">  <span class="keyword">if</span> ( v4 )                 <span class="comment">//如果copyen(&amp;v3, a2, &amp;v4)过程失败,进入异常处理流程.</span></span><br><span class="line">    <span class="built_in">KI__process_ifail</span>(v4);                      </span><br><span class="line">  <span class="built_in">KI__reset_list_count</span>();</span><br><span class="line">  <span class="keyword">return</span> (<span class="type">unsigned</span> <span class="type">int</span>)v4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;当总成类似于飞机、汽车、航空母舰等等，并且在总成下需要创建大量辅助对象时，使用了UFUN函数，对象到达一定的量级。就会出现TAG值上限报错，报错提示如下：&lt;br&gt;&lt;img src=&quot;http://image.camcad.cn/2023/07/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91-Modeler-error%EF%BC%9Atag%20limit%20would%20be%20exceeded.png&quot; alt=&quot;NX二次开发-Modeler-error：tag limit would be exceeded&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="疑难杂症" scheme="https://notes.camcad.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>C++获取终端相关信息</title>
    <link href="https://notes.camcad.cn/post/eee2cd9d.html"/>
    <id>https://notes.camcad.cn/post/eee2cd9d.html</id>
    <published>2023-07-14T11:44:43.000Z</published>
    <updated>2023-11-04T04:43:27.468Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="057e7706fddfd71bb37000c38921ac4b761e0aa7a2c376ace2ef306b2c8dfd8c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    
    <category term="公共" scheme="https://notes.camcad.cn/tags/%E5%85%AC%E5%85%B1/"/>
    
  </entry>
  
  <entry>
    <title>局域网DDNS解析公网IP（广域网）</title>
    <link href="https://notes.camcad.cn/post/9ef64088.html"/>
    <id>https://notes.camcad.cn/post/9ef64088.html</id>
    <published>2023-07-01T11:46:47.000Z</published>
    <updated>2023-11-04T04:43:27.484Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3f72e1582fcaf92100486211c26fecb09e09172770ad3c14154cdb517d6cb1ab"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="辅助" scheme="https://notes.camcad.cn/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="公共" scheme="https://notes.camcad.cn/tags/%E5%85%AC%E5%85%B1/"/>
    
    <category term="ubuntu" scheme="https://notes.camcad.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>firefox剪切板无法粘贴设置</title>
    <link href="https://notes.camcad.cn/post/ce9787df.html"/>
    <id>https://notes.camcad.cn/post/ce9787df.html</id>
    <published>2023-06-06T20:16:24.000Z</published>
    <updated>2023-11-04T04:43:27.484Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>无法从浏览器的剪贴板中读取，请确保你已授予此网站从剪贴板中读取的访问权限。</p><span id="more"></span><h3 id="firefox配置"><a href="#firefox配置" class="headerlink" title="firefox配置"></a>firefox配置</h3><p>在地址栏输入<code>about:config</code>回车，输入<code>clipboard</code>关键字搜索，再将<code>dom.events.asyncClipboard.readText</code>和<code>dom.events.testing.asyncClipboard</code>状态设置为<code>true</code>。</p><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dom.events.asyncClipboard.readTexttrue</span><br><span class="line">dom.events.testing.asyncClipboardtrue</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2023/06/firefox%20clipboard.bmp" alt="firefox clipboard"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;无法从浏览器的剪贴板中读取，请确保你已授予此网站从剪贴板中读取的访问权限。&lt;/p&gt;</summary>
    
    
    
    <category term="疑难杂症" scheme="https://notes.camcad.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
    <category term="firefox" scheme="https://notes.camcad.cn/tags/firefox/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-Error detected during FMS operation</title>
    <link href="https://notes.camcad.cn/post/d9970f4.html"/>
    <id>https://notes.camcad.cn/post/d9970f4.html</id>
    <published>2023-06-06T19:55:54.000Z</published>
    <updated>2023-11-04T04:43:27.468Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>C#开发的克隆应用，TC与NX集成环境下克隆，开启日志后，程序执行结束后弹出错误。<br><code>注：C++相同应用代码并没有此类问题出现。</code><br><img src="http://image.camcad.cn/2023/06/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91-Teamcenter%20Error.png" alt="NX二次开发-Teamcenter Error"><br><img src="http://image.camcad.cn/2023/06/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91-Error%20detected%20during%20FMS%20operation.png" alt="NX二次开发-Error detected during FMS operation"></p><span id="more"></span><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>由于指定的日志文件后缀不符合要求所致，将日志的后缀设置成<code>.clone</code>即可。<br><img src="http://image.camcad.cn/2023/06/nx_cloning_log_file.jpg" alt="nx_cloning_log_file"></p><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p><img src="http://image.camcad.cn/2023/06/uf_clone_set_logfile.jpg" alt="uf_clone_set_logfile"></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">constants</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">string</span> CloneLogFilename = <span class="string">&quot;\\nxclone.clone&quot;</span>;       <span class="comment">// 克隆日志文件 </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 空运行</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.m_dryrun)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> getEnv = Environment.GetEnvironmentVariable(<span class="string">&quot;temp&quot;</span>);</span><br><span class="line">    <span class="built_in">string</span> filename = getEnv + constants.CloneLogFilename;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.m_clone.SetLogfile(filename);</span><br><span class="line">    <span class="keyword">this</span>.m_clone.SetDryrun(<span class="keyword">this</span>.m_dryrun);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;C#开发的克隆应用，TC与NX集成环境下克隆，开启日志后，程序执行结束后弹出错误。&lt;br&gt;&lt;code&gt;注：C++相同应用代码并没有此类问题出现。&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://image.camcad.cn/2023/06/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91-Teamcenter%20Error.png&quot; alt=&quot;NX二次开发-Teamcenter Error&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://image.camcad.cn/2023/06/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91-Error%20detected%20during%20FMS%20operation.png&quot; alt=&quot;NX二次开发-Error detected during FMS operation&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="疑难杂症" scheme="https://notes.camcad.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 同步时间</title>
    <link href="https://notes.camcad.cn/post/f1ea3e99.html"/>
    <id>https://notes.camcad.cn/post/f1ea3e99.html</id>
    <published>2023-05-01T10:49:18.000Z</published>
    <updated>2023-11-04T04:43:27.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ubuntu下修改时区"><a href="#ubuntu下修改时区" class="headerlink" title="ubuntu下修改时区"></a>ubuntu下修改时区</h1><h3 id="1、输入“timedatectl”命令检查当前日期和时区设置"><a href="#1、输入“timedatectl”命令检查当前日期和时区设置" class="headerlink" title="1、输入“timedatectl”命令检查当前日期和时区设置"></a>1、输入“timedatectl”命令检查当前日期和时区设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ timedatectl</span><br><span class="line">                      Local time: Mon 2022-08-15 03:55:43 UTC</span><br><span class="line">                  Universal time: Mon 2022-08-15 03:55:43 UTC</span><br><span class="line">                        RTC time: Mon 2022-08-15 03:55:44</span><br><span class="line">                       Time zone: Etc/UTC (UTC, +0000)</span><br><span class="line">       System clock synchronized: yes</span><br><span class="line">systemd-timesyncd.service active: yes</span><br><span class="line">                 RTC in local TZ: no</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2、获取时区列表"><a href="#2、获取时区列表" class="headerlink" title="2、获取时区列表"></a>2、获取时区列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl list-timezones</span><br></pre></td></tr></table></figure><h3 id="3、再输入以下命令搜索你的时区，例如搜索上海的时区。"><a href="#3、再输入以下命令搜索你的时区，例如搜索上海的时区。" class="headerlink" title="3、再输入以下命令搜索你的时区，例如搜索上海的时区。"></a>3、再输入以下命令搜索你的时区，例如搜索上海的时区。</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ timedatectl list-timezones | grep Shanghai</span><br><span class="line"></span><br><span class="line">Asia/Shanghai</span><br></pre></td></tr></table></figure><h3 id="4、修改时区"><a href="#4、修改时区" class="headerlink" title="4、修改时区"></a>4、修改时区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><h3 id="5、最后可使用以下命令来验证修改好的时间时区。"><a href="#5、最后可使用以下命令来验证修改好的时间时区。" class="headerlink" title="5、最后可使用以下命令来验证修改好的时间时区。"></a>5、最后可使用以下命令来验证修改好的时间时区。</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ date -R</span><br><span class="line"></span><br><span class="line">Mon, 15 Aug 2022 11:57:32 +0800</span><br></pre></td></tr></table></figure><p>参考：<a href="https://blog.csdn.net/weixin_43966534/article/details/126344307">https://blog.csdn.net/weixin_43966534&#x2F;article&#x2F;details&#x2F;126344307</a></p><h1 id="NTP时间同步"><a href="#NTP时间同步" class="headerlink" title="NTP时间同步"></a>NTP时间同步</h1><h3 id="1、首先安装ntp服务"><a href="#1、首先安装ntp服务" class="headerlink" title="1、首先安装ntp服务"></a>1、首先安装ntp服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install  ntp</span><br></pre></td></tr></table></figure><p>ps：如果不是ubuntu系统则执行 <code>yum install ntp –y</code></p><h3 id="2、配置ntp服务器"><a href="#2、配置ntp服务器" class="headerlink" title="2、配置ntp服务器"></a>2、配置ntp服务器</h3><p>在终端输入<code>sudo vim /etc/ntp.conf</code>，相关重要配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#作用：允许外网所有client（0.0.0.0代表任意IP，如果限制局域网那么更改对应网段）连接</span><br><span class="line">#到这台服务器同步时间，但是拒绝他们修改服务器时间</span><br><span class="line">restrict 0.0.0.0 mask 255.255.255.255 nomodify notrap</span><br><span class="line"></span><br><span class="line">restrict 127.0.0.1</span><br><span class="line">restrict ::1</span><br><span class="line"></span><br><span class="line">#以阿里云时间服务器同步,210.72.145.44国家级校准ip</span><br><span class="line">server ntp.aliyun.com prefer</span><br><span class="line"></span><br><span class="line">#当无法访问外网时，以当前服务器为时间同步服务器</span><br><span class="line">server 127.127.1.0</span><br></pre></td></tr></table></figure><h4 id="上层主机设定"><a href="#上层主机设定" class="headerlink" title="上层主机设定"></a>上层主机设定</h4><p>上层主机选择 <code>ntp.aliyun.com</code>，要设定上层主机主要以server这个参数来设定，语法为：<code>server [IP|域名] [prefer]</code><br>Server 后面接的就是我们上层的Time Server ！而如果 Server 参数后面加上perfer 的话，那表示我们的 NTP 主机主要以该部主机来作为时间较正的对应,优先使用。</p><h3 id="允许特定网段内的客户端通过本服务同步时间"><a href="#允许特定网段内的客户端通过本服务同步时间" class="headerlink" title="允许特定网段内的客户端通过本服务同步时间"></a>允许特定网段内的客户端通过本服务同步时间</h3><p>权限设定主要以restrict这个参数来设定，主要的语法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">restrict IP mask netmask_IP parameter</span><br><span class="line"></span><br><span class="line">#作用：允许外网所有client（0.0.0.0代表任意IP，如果限制局域网那么更改对应网段）连接</span><br><span class="line">#到这台服务器同步时间，但是拒绝他们修改服务器时间</span><br><span class="line">restrict 0.0.0.0 mask 255.255.255.255 nomodify notrap</span><br></pre></td></tr></table></figure><p>至于 paramter则有：<br><code>ignore</code>：关闭所有的NTP 连线服务<br><code>nomodify</code>：表示Client 端不能更改 Server 端的时间参数，不过Client端仍然可以透过Server 端來进行网络较时。<br><code>notrust</code>：该 Client 除非通过认证，否则该 Client 来源将被视为不信任网域<br><code>noquery</code>：不提供 Client 端的时间查询<br>如果 paramter完全没有设定，那就表示该 IP (或网域) 没有任何限制</p><h3 id="配置文件修改好后，重启ntp服务"><a href="#配置文件修改好后，重启ntp服务" class="headerlink" title="配置文件修改好后，重启ntp服务"></a>配置文件修改好后，重启ntp服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart ntp #重启</span><br></pre></td></tr></table></figure><h3 id="开启防火墙"><a href="#开启防火墙" class="headerlink" title="开启防火墙"></a>开启防火墙</h3><p>然后配置系统的UFW防火墙，以使传入的连接可以通过UDP端口号123访问NTP服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 123/udp</span><br></pre></td></tr></table></figure><h3 id="使用”ntpq-p“来查看NTP服务器时间同步的过程"><a href="#使用”ntpq-p“来查看NTP服务器时间同步的过程" class="headerlink" title="使用”ntpq -p“来查看NTP服务器时间同步的过程"></a>使用”ntpq -p“来查看NTP服务器时间同步的过程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">emmet@ubuntu:~# ntpq -p</span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line"> LOCAL(0)        .LOCL.           5 l  761   64    0    0.000    0.000   0.000</span><br><span class="line">*203.107.6.88    100.107.25.114   2 u   36   64  377   61.610    0.134   0.525</span><br><span class="line">+114.67.237.130  114.118.7.161    2 u   29   64  377   38.699   -5.763   0.359</span><br></pre></td></tr></table></figure><p><code>*</code>:表示目前正在作用当中的上层NTP服务器;<br><code>+</code>:表示已经连接成功,并且可以作为下一个提供时间更新的候选者;</p><h3 id="可同时查看服务器的硬件时钟并进行更改："><a href="#可同时查看服务器的硬件时钟并进行更改：" class="headerlink" title="可同时查看服务器的硬件时钟并进行更改："></a>可同时查看服务器的硬件时钟并进行更改：</h3><p><code>sudo hwclock</code><br><code>sudo hwclock -w</code><br><code>-w</code>:表示将软件时间写入为硬件时间</p><h3 id="NTP常用命令"><a href="#NTP常用命令" class="headerlink" title="NTP常用命令"></a>NTP常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart ntp #重启</span><br><span class="line">systemctl start ntp# 开始</span><br><span class="line">systemctl close ntp# 关闭</span><br><span class="line">systemctl status ntp #查看状态</span><br></pre></td></tr></table></figure><h3 id="定时更新"><a href="#定时更新" class="headerlink" title="定时更新"></a>定时更新</h3><p>上述指令是一次性更新，如果我们想要让客户端定期去更新维护，则需要用到crontab指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/crontab</span><br><span class="line"> </span><br><span class="line">15 05 * * * root /usr/sbin/ntpdate 192.168.*.*</span><br></pre></td></tr></table></figure><p>表示每天8:30自动执行ntpdate指令，与服务器时间同步</p><h3 id="cron-服务的启动与停止"><a href="#cron-服务的启动与停止" class="headerlink" title="cron 服务的启动与停止"></a>cron 服务的启动与停止</h3><p>cron是被默认安装并启动的。而 ubuntu 下启动，停止与重启cron，均是通过调用&#x2F;etc&#x2F;init.d&#x2F;中的脚本进行。命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">启动：sudo /etc/init.d/cron start </span><br><span class="line">关闭：sudo /etc/init.d/cron stop</span><br><span class="line">重启：sudo /etc/init.d/cron restart</span><br><span class="line">状态：sudo /etc/init.d/cron status</span><br><span class="line">重新载入配置：sudo /etc/init.d/cron reload</span><br><span class="line">可以用ps aux | grep cron命令查看cron是否已启动</span><br></pre></td></tr></table></figure><p>参考：<a href="https://blog.csdn.net/Wangjiachenga/article/details/118969691">https://blog.csdn.net/Wangjiachenga/article/details/118969691</a></p><h1 id="1、双系统时间同步问题"><a href="#1、双系统时间同步问题" class="headerlink" title="1、双系统时间同步问题"></a>1、双系统时间同步问题</h1><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ntpdate</span><br></pre></td></tr></table></figure><h3 id="2、同步网络时间"><a href="#2、同步网络时间" class="headerlink" title="2、同步网络时间"></a>2、同步网络时间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ntpdate time.windows.com</span><br></pre></td></tr></table></figure><h3 id="3、同步硬件时间"><a href="#3、同步硬件时间" class="headerlink" title="3、同步硬件时间"></a>3、同步硬件时间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hwclock --localtime --systohc</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.bilibili.com/video/BV1554y1n7zv?p=9&spm_id_from=pageDriver&vd_source=2ef65e99005307b98faba687dbdb5780">https://www.bilibili.com/video/BV1554y1n7zv?p=9&spm_id_from&#x3D;pageDriver&amp;vd_source&#x3D;2ef65e99005307b98faba687dbdb5780</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;ubuntu下修改时区&quot;&gt;&lt;a href=&quot;#ubuntu下修改时区&quot; class=&quot;headerlink&quot; title=&quot;ubuntu下修改时区&quot;&gt;&lt;/a&gt;ubuntu下修改时区&lt;/h1&gt;&lt;h3 id=&quot;1、输入“timedatectl”命令检查当前日期和时区设置&quot;&gt;&lt;a href=&quot;#1、输入“timedatectl”命令检查当前日期和时区设置&quot; class=&quot;headerlink&quot; title=&quot;1、输入“timedatectl”命令检查当前日期和时区设置&quot;&gt;&lt;/a&gt;1、输入“timedatectl”命令检查当前日期和时区设置&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ timedatectl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      Local time: Mon 2022-08-15 03:55:43 UTC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  Universal time: Mon 2022-08-15 03:55:43 UTC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        RTC time: Mon 2022-08-15 03:55:44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       Time zone: Etc/UTC (UTC, +0000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       System clock synchronized: yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemd-timesyncd.service active: yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 RTC in local TZ: no&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="辅助" scheme="https://notes.camcad.cn/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="ubuntu" scheme="https://notes.camcad.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>NX外部模式-发布技术数据包/三维PDF</title>
    <link href="https://notes.camcad.cn/post/771521dc.html"/>
    <id>https://notes.camcad.cn/post/771521dc.html</id>
    <published>2023-04-29T18:54:58.000Z</published>
    <updated>2023-11-04T04:43:27.468Z</updated>
    
    <content type="html"><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>NX本地模式下发布技术数据包&#x2F;三维PDF，在使用发布应用程序<code>PublishTDPNative.exe</code>前，需要在系统环境变量名称为<code>Path</code>中增加NX安装目录下<code>NXBIN</code>的绝对路径。</p><span id="more"></span><h3 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h3><h4 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h4><p>在系统环境变量名称为<code>Path</code>中增加NX安装目录下<code>NXBIN</code>的绝对路径，便于本地模式启动NX相关依赖。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line">E:\Program Files\Siemens\NX1953\NXBIN</span><br></pre></td></tr></table></figure><h4 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h4><p>在NX安装目录下找到<code>TDP</code>文件夹，NX1953的<code>TDP</code>目录结构如下（不同NX版本可能有所不同）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">3dpdf</span><br><span class="line">application</span><br><span class="line">batch</span><br><span class="line">batch example</span><br><span class="line">localization</span><br><span class="line">manifest</span><br><span class="line">startup</span><br><span class="line">templates</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h4 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h4><p>打开<code>batch</code>文件夹，并且执行发布数据包&#x2F;三维PDF应用<code>PublishTDPNative.exe</code>，在当前目录下使用系统终端，执行操作命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\PublishTDPNative.exe -config_file=&quot;E:\Program Files\Siemens\NX1953\TDP\batch example\PublishTDPNativeOptions3DPDF.xml&quot;</span><br></pre></td></tr></table></figure><p>输出如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Windows PowerShell</span><br><span class="line">版权所有（C） Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">安装最新的 PowerShell，了解新功能和改进！https://aka.ms/PSWindows</span><br><span class="line"></span><br><span class="line">PS E:\Program Files\Siemens\NX1953\TDP\batch&gt; .\PublishTDPNative.exe -config_file=&quot;E:\Program Files\Siemens\NX1953\TDP\batch example\PublishTDPNativeOptions3DPDF.xml&quot;</span><br><span class="line"></span><br><span class="line">Translator Log File created at: C:\TEMP\TDP_ExamplePart.log</span><br><span class="line">[PK_BODY_change_partition returned: 1088]</span><br><span class="line">PS E:\Program Files\Siemens\NX1953\TDP\batch&gt;</span><br></pre></td></tr></table></figure><h2 id="技术文档"><a href="#技术文档" class="headerlink" title="技术文档"></a>技术文档</h2><figure class="highlight xml"><figcaption><span>PublishTDPREADME.txt</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">1) 简介</span><br><span class="line">此目录中提供的批处理模式可执行文件是从NX命令提示符中连续发布多个技术数据包的程序。</span><br><span class="line"></span><br><span class="line">2) 提供的文件</span><br><span class="line">PublishTDPNative.exe - 用于本地NX TDP发布的批处理模式可执行文件</span><br><span class="line">PublishTDPNativeOptions.xsd - 用于验证本地NX TDP批处理XML配置文件的XML模式</span><br><span class="line">PublishTDPTeamcenter.exe - 用于管理模式NX TDP发布的批处理模式可执行文件</span><br><span class="line">PublishTDPTeamcenterOptions.xsd - 用于验证管理模式NX TDP批处理XML配置文件的XML模式</span><br><span class="line"></span><br><span class="line">此外，还提供了示例配置文件和零件。这些可以在目录“%UGII_BASE_DIR%\TDP\batch example\”中找到。</span><br><span class="line"></span><br><span class="line">PublishTDPNativeOptions3DPDF.xml - 用于在本地NX中发布3D PDF TDP的示例XML配置文件</span><br><span class="line">PublishTDPNativeOptionsJTPDF.xml - 用于在本地NX中发布JT加PDF TDP的示例XML配置文件</span><br><span class="line">parts.txt - 用于发布示例中使用的样本数据集文件</span><br><span class="line">attachments.txt - 用于发布示例中使用的样本附件列表文件</span><br><span class="line"></span><br><span class="line">2) 用法</span><br><span class="line">(3A) 在本地NX中发布技术数据包</span><br><span class="line"></span><br><span class="line">要在本地NX中发布TDP，必须首先创建一个XML配置文件，以供批处理程序使用。要创建XML配置文件，可以使用XML模式定义文件“PublishTDPNativeOptions.xsd”查看必须指定什么。</span><br><span class="line"></span><br><span class="line">要在数据集文件中指定零件文件，请使用标准操作系统格式。</span><br><span class="line">示例：C:\partfile\abc.prt</span><br><span class="line"></span><br><span class="line">要在附件列表文件中指定附件，请使用标准操作系统格式。</span><br><span class="line">示例：C:\attachments\attachment1.prt</span><br><span class="line">示例：C:\attachments\attachment1.JPG</span><br><span class="line"></span><br><span class="line">参数 变量 说明</span><br><span class="line">-config_file [filepath] - 指定XML配置文件的本地磁盘位置</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">从NX命令提示符，以下命令</span><br><span class="line">PublishTDPNative -config_file=&quot;C:\TDP\PublishTDPNativeOptions3DPDF.xml&quot;</span><br><span class="line"></span><br><span class="line">...根据以下指定发布所有TDP：</span><br><span class="line">XML配置文件：“C:\TDP\PublishTDPNativeOptions3DPDF.xml”</span><br></pre></td></tr></table></figure><h3 id="文件说明"><a href="#文件说明" class="headerlink" title="文件说明"></a>文件说明</h3><div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab"><a href="#tab-1">主文件</a></li><li class="tab"><a href="#tab-2">附件文件</a></li><li class="tab"><a href="#tab-3">图档文件</a></li></ul><div class="tab-content"><div class="tab-pane" id="tab-1"><p><code>注意</code>本地模式需要设置3DPDF输出目录例如：<code>&lt;output_directory&gt;c:\temp\&lt;/output_directory&gt;</code>，在主流程文件中设置。</p><p>NX模板文件：<code>${UGII_BASE_DIR}\tdp\templates\A4_Size_part_portrait_3dpdf.prt</code></p><h4 id="主流程文件"><a href="#主流程文件" class="headerlink" title="主流程文件"></a>主流程文件</h4><figure class="highlight xml"><figcaption><span>PublishTDPNativeOptions3DPDF.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">=======================================================================</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">    Copyright 2018 Siemens Product Lifecycle Management Software Inc.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                        All Rights Reserved.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">=======================================================================</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    This is the sample XML configuration file used with native TDP batch</span></span><br><span class="line"><span class="comment">    processing to publish a 3D PDF TDP.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The XML file is validated against PublishTDPNativeOptions.xsd. The XML </span></span><br><span class="line"><span class="comment">    standard can be found in http://www.w3.org/XML/Schema.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">=======================================================================</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">native_run</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  The following run will publish a 3D PDF TDP with:</span></span><br><span class="line"><span class="comment">    - A set of parts defined in $&#123;UGII_BASE_DIR&#125;\tdp\batch example\parts.txt</span></span><br><span class="line"><span class="comment">    - A template part at $&#123;UGII_BASE_DIR&#125;\tdp\templates\A4_Size_part_portrait_3dpdf.prt</span></span><br><span class="line"><span class="comment">    - No output directory specified. This will use the output directory specified in</span></span><br><span class="line"><span class="comment">        the NX customer default. This directory MUST have write access.</span></span><br><span class="line"><span class="comment">    - With all views published</span></span><br><span class="line"><span class="comment">    - With no STEP attachment</span></span><br><span class="line"><span class="comment">    - With a password of 123456</span></span><br><span class="line"><span class="comment">    - With text pairs: Part Number: 1-A</span></span><br><span class="line"><span class="comment">                       Description: Bracket</span></span><br><span class="line"><span class="comment">                       Revision: A</span></span><br><span class="line"><span class="comment">                       Design Date: 01/01/2019</span></span><br><span class="line"><span class="comment">                       Designer: John Doe</span></span><br><span class="line"><span class="comment">    - With attachments defined in $&#123;UGII_BASE_DIR&#125;\tdp\batch example\attachments.txt</span></span><br><span class="line"><span class="comment">    - With no JT attachment</span></span><br><span class="line"><span class="comment">    - With model accuracy at Maximum</span></span><br><span class="line"><span class="comment">    - With no compression to the model</span></span><br><span class="line"><span class="comment">    - With overridden background and pmi color</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">publish_3DPDF</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dataset</span>&gt;</span>$&#123;UGII_BASE_DIR&#125;\tdp\batch example\parts.txt<span class="tag">&lt;/<span class="name">dataset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template_part</span>&gt;</span>$&#123;UGII_BASE_DIR&#125;\tdp\templates\A4_Size_part_portrait_3dpdf.prt<span class="tag">&lt;/<span class="name">template_part</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- this configuration file uses the output directory specified by NX customer default --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- to override the NX customer default, you may specify an &lt;output_directory&gt; like the example below:</span></span><br><span class="line"><span class="comment">         &lt;output_directory&gt;C:\TDP\Output&lt;/output_directory&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">output_directory</span>&gt;</span>c:\temp\<span class="tag">&lt;/<span class="name">output_directory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">views</span>&gt;</span>All Views<span class="tag">&lt;/<span class="name">views</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generate_step</span>&gt;</span>false<span class="tag">&lt;/<span class="name">generate_step</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">texts</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Part Number<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>1-A<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Description<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>Bracket<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Revision<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>A<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Design Date<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>01/01/2019<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Designer<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>John Doe<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">texts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attachment_list</span>&gt;</span>$&#123;UGII_BASE_DIR&#125;\tdp\batch example\attachments.txt<span class="tag">&lt;/<span class="name">attachment_list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generate_jt</span>&gt;</span>false<span class="tag">&lt;/<span class="name">generate_jt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">accuracy</span>&gt;</span>Maximum<span class="tag">&lt;/<span class="name">accuracy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">compression</span>&gt;</span>false<span class="tag">&lt;/<span class="name">compression</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">override_properties</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">override_colors</span>&gt;</span>true<span class="tag">&lt;/<span class="name">override_colors</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">background_color</span>&gt;</span>1<span class="tag">&lt;/<span class="name">background_color</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pmi_color</span>&gt;</span>216<span class="tag">&lt;/<span class="name">pmi_color</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">override_properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">publish_3DPDF</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">native_run</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-2"><figure class="highlight xml"><figcaption><span>attachments.txt</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;UGII_BASE_DIR&#125;\tdp\batch example\TDP_ExamplePart.jpg</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-3"><figure class="highlight xml"><figcaption><span>parts.txt</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;UGII_BASE_DIR&#125;\tdp\batch example\TDP_ExamplePart.prt</span><br></pre></td></tr></table></figure></div></div></div>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h3&gt;&lt;p&gt;NX本地模式下发布技术数据包&amp;#x2F;三维PDF，在使用发布应用程序&lt;code&gt;PublishTDPNative.exe&lt;/code&gt;前，需要在系统环境变量名称为&lt;code&gt;Path&lt;/code&gt;中增加NX安装目录下&lt;code&gt;NXBIN&lt;/code&gt;的绝对路径。&lt;/p&gt;</summary>
    
    
    
    
    <category term="NX" scheme="https://notes.camcad.cn/tags/NX/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发：C#调用C++界面获取值</title>
    <link href="https://notes.camcad.cn/post/6cvc59ff.html"/>
    <id>https://notes.camcad.cn/post/6cvc59ff.html</id>
    <published>2023-04-25T14:54:03.000Z</published>
    <updated>2023-11-04T04:43:27.464Z</updated>
    
    <content type="html"><![CDATA[<h3 id="C-函数定义"><a href="#C-函数定义" class="headerlink" title="C++函数定义"></a>C++函数定义</h3><span id="more"></span><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> DllExport <span class="type">char</span>* g_value = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function">DllExport <span class="type">char</span>* <span class="title">returnCSharpValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">g_value = <span class="string">&quot;C++返回给C#的值&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> g_value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入口</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function">DllExport <span class="type">void</span>  <span class="title">ufusr</span><span class="params">(<span class="type">char</span> *param, <span class="type">int</span> *retcod, <span class="type">int</span> param_len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tc_select_action *thetc_select_action = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">UF_UGMGR_initialize</span>(<span class="number">0</span>, <span class="literal">nullptr</span>);</span><br><span class="line">        thetc_select_action = <span class="keyword">new</span> <span class="built_in">tc_select_action</span>();</span><br><span class="line">        <span class="comment">// The following method shows the dialog immediately</span></span><br><span class="line">        thetc_select_action-&gt;<span class="built_in">Show</span>();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">UF_UGMGR_terminate</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">catch</span>(exception&amp; ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//---- Enter your exception handling code here -----</span></span><br><span class="line">        tc_select_action::theUI-&gt;<span class="built_in">NXMessageBox</span>()-&gt;<span class="built_in">Show</span>(<span class="string">&quot;Block Styler&quot;</span>, NXOpen::NXMessageBox::DialogTypeError, ex.<span class="built_in">what</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(thetc_select_action != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> thetc_select_action;</span><br><span class="line">        thetc_select_action = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="C-函数定义-1"><a href="#C-函数定义-1" class="headerlink" title="C#函数定义"></a>C#函数定义</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 入口定义</span></span><br><span class="line">[<span class="meta">DllImport(<span class="string">&quot;tc_select_action.dll&quot;</span>, EntryPoint = <span class="string">&quot;ufusr&quot;</span>, CallingConvention = CallingConvention.Cdecl)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">cplusplusUfusr</span>(<span class="params"><span class="built_in">string</span> param, <span class="built_in">int</span>[] retcod, <span class="built_in">int</span> param_len</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用函数定义</span></span><br><span class="line">[<span class="meta">DllImport(<span class="string">&quot;tc_select_action.dll&quot;</span>, EntryPoint = <span class="string">&quot;returnCSharpValue&quot;</span>, CallingConvention = CallingConvention.Cdecl)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">getCplusplusValue</span>()</span>;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打开C++界面</span></span><br><span class="line">cplusplusUfusr(<span class="literal">null</span>, <span class="literal">null</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用C++内部函数</span></span><br><span class="line">IntPtr pCplusplusValue = getCplusplusValue();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转成ANSI字符串</span></span><br><span class="line"><span class="built_in">string</span> cplusplusValue = Marshal.PtrToStringAnsi(pCplusplusValue);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印显示</span></span><br><span class="line">UFSession.GetUFSession().Ui.OpenListingWindow();</span><br><span class="line">UFSession.GetUFSession().Ui.WriteListingWindow(cplusplusValue);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;C-函数定义&quot;&gt;&lt;a href=&quot;#C-函数定义&quot; class=&quot;headerlink&quot; title=&quot;C++函数定义&quot;&gt;&lt;/a&gt;C++函数定义&lt;/h3&gt;</summary>
    
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/categories/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    <category term="C++" scheme="https://notes.camcad.cn/tags/C/"/>
    
    <category term="C#" scheme="https://notes.camcad.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发：第一个C#程序</title>
    <link href="https://notes.camcad.cn/post/5bdc59ff.html"/>
    <id>https://notes.camcad.cn/post/5bdc59ff.html</id>
    <published>2023-04-20T14:53:03.000Z</published>
    <updated>2023-11-04T04:43:27.464Z</updated>
    
    <content type="html"><![CDATA[<p>创建第一个NX二次开发C#程序，然后<code>Ctrl + u</code>的方式调用C#通过编译生成的<code>.dll</code>动态链接文件。</p><span id="more"></span><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> NXOpen;</span><br><span class="line"><span class="keyword">using</span> NXOpen.UF;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Emmet</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Session theSession;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Emmet theEmmet;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Emmet</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            theSession = Session.GetSession();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NXOpen.NXException ex)</span><br><span class="line">        &#123;</span><br><span class="line">             UI.GetUI().NXMessageBox.Show(<span class="string">&quot;Message&quot;</span>, NXMessageBox.DialogType.Error, ex.Message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> retValue = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// TO-DO</span></span><br><span class="line">            UFSession theUFSession = UFSession.GetUFSession();</span><br><span class="line">            theUFSession.Ui.DisplayMessage(<span class="string">&quot;Hello World!&quot;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NXOpen.NXException ex)</span><br><span class="line">        &#123;</span><br><span class="line">             UI.GetUI().NXMessageBox.Show(<span class="string">&quot;Message&quot;</span>, NXMessageBox.DialogType.Error, ex.Message);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> retValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">GetUnloadOption</span>(<span class="params"><span class="built_in">string</span> arg</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> System.Convert.ToInt32(Session.LibraryUnloadOption.Immediately);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;创建第一个NX二次开发C#程序，然后&lt;code&gt;Ctrl + u&lt;/code&gt;的方式调用C#通过编译生成的&lt;code&gt;.dll&lt;/code&gt;动态链接文件。&lt;/p&gt;</summary>
    
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/categories/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    <category term="C#" scheme="https://notes.camcad.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装个人博客（hexo + gitee/github）</title>
    <link href="https://notes.camcad.cn/post/d140afbb.html"/>
    <id>https://notes.camcad.cn/post/d140afbb.html</id>
    <published>2022-09-01T11:34:34.000Z</published>
    <updated>2023-11-04T04:43:27.484Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装前软件准备"><a href="#安装前软件准备" class="headerlink" title="安装前软件准备"></a>安装前软件准备</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># nodejs</span><br><span class="line">sudo apt-get install nodejs</span><br><span class="line"></span><br><span class="line"># git</span><br><span class="line">sudo apt-get install git</span><br><span class="line"></span><br><span class="line"># npm</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="升级nodejs-x2F-npm最新版本"><a href="#升级nodejs-x2F-npm最新版本" class="headerlink" title="升级nodejs&#x2F;npm最新版本"></a>升级nodejs&#x2F;npm最新版本</h2><h3 id="二进制升级"><a href="#二进制升级" class="headerlink" title="二进制升级"></a>二进制升级</h3><p>参考链接：<a href="https://segmentfault.com/a/1190000022376635">https://segmentfault.com/a/1190000022376635</a></p><h3 id="源码升级"><a href="#源码升级" class="headerlink" title="源码升级"></a>源码升级</h3><p>在官网获取最新版本的<code>nodejs</code>版本<br>中文官网网站：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a><br>通过<code>wget</code>获取URL资源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo wget URL</span><br><span class="line"></span><br><span class="line">sudo wget https://nodejs.org/dist/v18.12.1/node-v18.12.1.tar.gz</span><br></pre></td></tr></table></figure><h4 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -zxvf node-v18.12.1.tar.gz</span><br></pre></td></tr></table></figure><h4 id="linux环境下编译三部曲"><a href="#linux环境下编译三部曲" class="headerlink" title="linux环境下编译三部曲"></a>linux环境下编译三部曲</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、切换到 root 用户执行以下命令</span><br><span class="line">sudo ./configure --prefix=/opt/nodejs</span><br><span class="line"></span><br><span class="line">2、终端中执行 make 命令开始编译</span><br><span class="line">sudo make</span><br><span class="line"></span><br><span class="line">3、终端中执行 make install 命令开始安装</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>PS：通过源代码安装需要10分钟以上。</p><h2 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h2><p><code>hexo</code>中文官方网站：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><h3 id="使用淘宝定制的cnpm加速器"><a href="#使用淘宝定制的cnpm加速器" class="headerlink" title="使用淘宝定制的cnpm加速器"></a>使用淘宝定制的cnpm加速器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;安装前软件准备&quot;&gt;&lt;a href=&quot;#安装前软件准备&quot; class=&quot;headerlink&quot; title=&quot;安装前软件准备&quot;&gt;&lt;/a&gt;安装前软件准备&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# nodejs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install nodejs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# npm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install npm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="辅助" scheme="https://notes.camcad.cn/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="ubunto" scheme="https://notes.camcad.cn/tags/ubunto/"/>
    
    <category term="hexo" scheme="https://notes.camcad.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-单选对话框（UF_UI_select_with_single_dialog）</title>
    <link href="https://notes.camcad.cn/post/e0dbf08.html"/>
    <id>https://notes.camcad.cn/post/e0dbf08.html</id>
    <published>2022-09-01T09:47:31.000Z</published>
    <updated>2023-11-04T04:43:27.464Z</updated>
    
    <content type="html"><![CDATA[<h4 id="使用“单个选择”对话框选择单个对象"><a href="#使用“单个选择”对话框选择单个对象" class="headerlink" title="使用“单个选择”对话框选择单个对象"></a>使用“单个选择”对话框选择单个对象</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf_ui.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf_object_types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;uf_disp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;NXOpen/Session.hxx&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选择初始化过程*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">init_proc</span><span class="params">(UF_UI_selection_p_t select, <span class="type">void</span>* user_data)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置高度</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">setHighlight</span><span class="params">(<span class="type">const</span> vector&lt;<span class="type">tag_t</span>&gt;&amp; objs, <span class="type">bool</span> bHighlight)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UF_CALL(X) (report( __FILE__, __LINE__, #X, (X)))</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">report</span><span class="params">(<span class="type">char</span>* file, <span class="type">int</span> line, <span class="type">char</span>* call, <span class="type">int</span> irc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (irc)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span>    messg[<span class="number">133</span>];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s, line %d:  %s\n&quot;</span>, file, line, call);</span><br><span class="line">        (<span class="built_in">UF_get_fail_message</span>(irc, messg)) ?</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;    returned a %d\n&quot;</span>, irc) :</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;    returned error %d:  %s\n&quot;</span>, irc, messg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>(irc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">do_ugopen_api</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> cue[] = <span class="string">&quot;cue message&quot;</span>;</span><br><span class="line">    <span class="type">char</span> title[] = <span class="string">&quot;dialog title&quot;</span>;</span><br><span class="line">    <span class="type">int</span> response;</span><br><span class="line">    <span class="type">tag_t</span> object, view;</span><br><span class="line">    <span class="type">double</span> cursor[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">tag_t</span>&gt; objs;</span><br><span class="line">    objs.<span class="built_in">swap</span>(<span class="built_in">vector</span>&lt;<span class="type">tag_t</span>&gt;());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        object = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">UF_CALL</span>(<span class="built_in">UF_UI_select_with_single_dialog</span>(cue, title,</span><br><span class="line">            UF_UI_SEL_SCOPE_ANY_IN_ASSEMBLY, init_proc, <span class="literal">NULL</span>,</span><br><span class="line">            &amp;response, &amp;object, cursor, &amp;view))) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (response == UF_UI_OBJECT_SELECTED) &#123;</span><br><span class="line">                <span class="keyword">if</span> (object != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                    objs.<span class="built_in">push_back</span>(object);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (response == UF_UI_OK) &#123;</span><br><span class="line">                <span class="built_in">setHighlight</span>(objs, <span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">break</span>;         <span class="comment">// 退出</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (response == UF_UI_CANCEL) &#123;</span><br><span class="line">                <span class="built_in">setHighlight</span>(objs, <span class="literal">false</span>);</span><br><span class="line">                objs.<span class="built_in">swap</span>(<span class="built_in">vector</span>&lt;<span class="type">tag_t</span>&gt;());</span><br><span class="line">                <span class="keyword">break</span>;         <span class="comment">// 退出</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">setHighlight</span>(objs, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!objs.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="built_in">UF_UI_open_listing_window</span>();</span><br><span class="line">        stringstream sso;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> it = objs.<span class="built_in">cbegin</span>(); it != objs.<span class="built_in">cend</span>(); ++it) &#123;</span><br><span class="line">            sso.<span class="built_in">str</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            sso &lt;&lt; (*it) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">UF_UI_write_listing_window</span>(sso.<span class="built_in">str</span>().<span class="built_in">c_str</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setHighlight</span><span class="params">(<span class="type">const</span> vector&lt;<span class="type">tag_t</span>&gt;&amp; objs, <span class="type">bool</span> bHighlight)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it = objs.<span class="built_in">cbegin</span>(); it != objs.<span class="built_in">cend</span>(); ++it) &#123;</span><br><span class="line">        <span class="built_in">UF_DISP_set_highlight</span>((*it), bHighlight);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">init_proc</span><span class="params">(UF_UI_selection_p_t select, <span class="type">void</span>* user_data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num_triples = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    UF_UI_mask_t mask_triples[] = &#123;</span><br><span class="line">         UF_face_type, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">         UF_solid_type, <span class="number">0</span>, UF_UI_SEL_FEATURE_ANY_FACE &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* enable only lines and edges */</span></span><br><span class="line">    <span class="keyword">if</span> ((<span class="built_in">UF_CALL</span>(<span class="built_in">UF_UI_set_sel_mask</span>(select,</span><br><span class="line">        UF_UI_SEL_MASK_CLEAR_AND_ENABLE_SPECIFIC,</span><br><span class="line">        num_triples, mask_triples))) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> (UF_UI_SEL_SUCCESS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">return</span> (UF_UI_SEL_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function">DllExport <span class="type">void</span> <span class="title">ufusr</span><span class="params">( <span class="type">char</span> *parm, <span class="type">int</span> *returnCode, <span class="type">int</span> rlen )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">UF_CALL</span>(<span class="built_in">UF_initialize</span>()))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">do_ugopen_api</span>();</span><br><span class="line">        <span class="built_in">UF_CALL</span>(<span class="built_in">UF_terminate</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function">DllExport <span class="type">int</span> <span class="title">ufusr_ask_unload</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="type">int</span>)NXOpen::Session::LibraryUnloadOptionImmediately;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;使用“单个选择”对话框选择单个对象&quot;&gt;&lt;a href=&quot;#使用“单个选择”对话框选择单个对象&quot; class=&quot;headerlink&quot; title=&quot;使用“单个选择”对话框选择单个对象&quot;&gt;&lt;/a&gt;使用“单个选择”对话框选择单个对象&lt;/h4&gt;&lt;figure class</summary>
      
    
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/categories/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-获取相切面</title>
    <link href="https://notes.camcad.cn/post/452d55c1.html"/>
    <id>https://notes.camcad.cn/post/452d55c1.html</id>
    <published>2022-09-01T09:44:03.000Z</published>
    <updated>2023-11-04T04:43:27.464Z</updated>
    
    <content type="html"><![CDATA[<h4 id="NXOPEN"><a href="#NXOPEN" class="headerlink" title="NXOPEN"></a>NXOPEN</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">tag_t</span>&gt; <span class="title">getTangentFaces</span><span class="params">(<span class="type">const</span> <span class="type">tag_t</span> tFace)</span> </span>&#123;</span><br><span class="line">vector&lt;<span class="type">tag_t</span>&gt; faces;</span><br><span class="line">faces.<span class="built_in">swap</span>(<span class="built_in">vector</span>&lt;<span class="type">tag_t</span>&gt;());</span><br><span class="line"></span><br><span class="line">NXOpen::Session* theSession = NXOpen::Session::<span class="built_in">GetSession</span>();</span><br><span class="line"><span class="function">NXOpen::Part* <span class="title">workPart</span><span class="params">(theSession-&gt;Parts()-&gt;Work())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入面</span></span><br><span class="line"><span class="function">NXOpen::Face* <span class="title">face1</span><span class="params">(<span class="keyword">dynamic_cast</span>&lt;NXOpen::Face*&gt;(NXOpen::NXObjectManager::Get(tFace)))</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用NXOPEN相切面规则</span></span><br><span class="line"><span class="function">std::vector&lt;NXOpen::Face*&gt; <span class="title">boundaryFaces1</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">NXOpen::FaceTangentRule* faceTangentRule1;</span><br><span class="line">faceTangentRule1 = workPart-&gt;<span class="built_in">ScRuleFactory</span>()-&gt;<span class="built_in">CreateRuleFaceTangent</span>(face1, boundaryFaces1, <span class="number">5e-2</span>);</span><br><span class="line"><span class="function">std::vector&lt;NXOpen::SelectionIntentRule*&gt; <span class="title">rules1</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">rules1[<span class="number">0</span>] = faceTangentRule1;</span><br><span class="line"></span><br><span class="line">NXOpen::ScCollector* scCollector1 = workPart-&gt;<span class="built_in">ScCollectors</span>()-&gt;<span class="built_in">CreateCollector</span>();</span><br><span class="line">scCollector1-&gt;<span class="built_in">ReplaceRules</span>(rules1, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">std::vector&lt;NXOpen::TaggedObject*&gt; tangentFaces = scCollector1-&gt;<span class="built_in">GetObjects</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; tangentFaces.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">faces.<span class="built_in">push_back</span>(tangentFaces[i]-&gt;<span class="built_in">Tag</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> faces;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;NXOPEN&quot;&gt;&lt;a href=&quot;#NXOPEN&quot; class=&quot;headerlink&quot; title=&quot;NXOPEN&quot;&gt;&lt;/a&gt;NXOPEN&lt;/h4&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;vector&amp;lt;&lt;span class=&quot;type&quot;&gt;tag_t&lt;/span&gt;&amp;gt; &lt;span class=&quot;title&quot;&gt;getTangentFaces&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;type&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;tag_t&lt;/span&gt; tFace)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	vector&amp;lt;&lt;span class=&quot;type&quot;&gt;tag_t&lt;/span&gt;&amp;gt; faces;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	faces.&lt;span class=&quot;built_in&quot;&gt;swap&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;tag_t&lt;/span&gt;&amp;gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	NXOpen::Session* theSession = NXOpen::Session::&lt;span class=&quot;built_in&quot;&gt;GetSession&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;NXOpen::Part* &lt;span class=&quot;title&quot;&gt;workPart&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(theSession-&amp;gt;Parts()-&amp;gt;Work())&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 输入面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;NXOpen::Face* &lt;span class=&quot;title&quot;&gt;face1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;dynamic_cast&lt;/span&gt;&amp;lt;NXOpen::Face*&amp;gt;(NXOpen::NXObjectManager::Get(tFace)))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//使用NXOPEN相切面规则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;std::vector&amp;lt;NXOpen::Face*&amp;gt; &lt;span class=&quot;title&quot;&gt;boundaryFaces1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	NXOpen::FaceTangentRule* faceTangentRule1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	faceTangentRule1 = workPart-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;ScRuleFactory&lt;/span&gt;()-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;CreateRuleFaceTangent&lt;/span&gt;(face1, boundaryFaces1, &lt;span class=&quot;number&quot;&gt;5e-2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;std::vector&amp;lt;NXOpen::SelectionIntentRule*&amp;gt; &lt;span class=&quot;title&quot;&gt;rules1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rules1[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = faceTangentRule1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	NXOpen::ScCollector* scCollector1 = workPart-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;ScCollectors&lt;/span&gt;()-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;CreateCollector&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	scCollector1-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;ReplaceRules&lt;/span&gt;(rules1, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	std::vector&amp;lt;NXOpen::TaggedObject*&amp;gt; tangentFaces = scCollector1-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;GetObjects&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; tangentFaces.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		faces.&lt;span class=&quot;built_in&quot;&gt;push_back&lt;/span&gt;(tangentFaces[i]-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;Tag&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; faces;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/categories/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-获取面的面积</title>
    <link href="https://notes.camcad.cn/post/f6358e07.html"/>
    <id>https://notes.camcad.cn/post/f6358e07.html</id>
    <published>2022-09-01T09:44:03.000Z</published>
    <updated>2023-11-04T04:43:27.464Z</updated>
    
    <content type="html"><![CDATA[<h4 id="NXOPEN"><a href="#NXOPEN" class="headerlink" title="NXOPEN"></a>NXOPEN</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">getFaceArea</span><span class="params">(<span class="type">const</span> <span class="type">tag_t</span> tFace)</span> </span>&#123;</span><br><span class="line">NXOpen::Session* theSession = NXOpen::Session::<span class="built_in">GetSession</span>();</span><br><span class="line"><span class="function">NXOpen::Part* <span class="title">workPart</span><span class="params">(theSession-&gt;Parts()-&gt;Work())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">NXOpen::Unit* <span class="title">unit1</span><span class="params">(<span class="keyword">dynamic_cast</span>&lt;NXOpen::Unit*&gt;(workPart-&gt;UnitCollection()-&gt;FindObject(<span class="string">&quot;SquareMilliMeter&quot;</span>)))</span></span>;</span><br><span class="line"><span class="function">NXOpen::Unit* <span class="title">unit2</span><span class="params">(<span class="keyword">dynamic_cast</span>&lt;NXOpen::Unit*&gt;(workPart-&gt;UnitCollection()-&gt;FindObject(<span class="string">&quot;MilliMeter&quot;</span>)))</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">std::vector&lt;NXOpen::IParameterizedSurface*&gt; <span class="title">faces</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">faces[<span class="number">0</span>] = <span class="built_in">dynamic_cast</span>&lt;NXOpen::IParameterizedSurface*&gt;(NXOpen::NXObjectManager::<span class="built_in">Get</span>(tFace));</span><br><span class="line"></span><br><span class="line">NXOpen::MeasureFaces* theArea = workPart-&gt;<span class="built_in">MeasureManager</span>()-&gt;<span class="built_in">NewFaceProperties</span>(unit1, unit2, <span class="number">1e-2</span>, \</span><br><span class="line">faces);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> theArea-&gt;<span class="built_in">Area</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;NXOPEN&quot;&gt;&lt;a href=&quot;#NXOPEN&quot; class=&quot;headerlink&quot; title=&quot;NXOPEN&quot;&gt;&lt;/a&gt;NXOPEN&lt;/h4&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/categories/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
