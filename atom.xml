<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知识储存库</title>
  
  <subtitle>增长盈利，降本增效&lt;br&gt;逆境求生存，顺境求发展</subtitle>
  <link href="https://notes.camcad.cn/atom.xml" rel="self"/>
  
  <link href="https://notes.camcad.cn/"/>
  <updated>2024-04-20T07:43:29.675Z</updated>
  <id>https://notes.camcad.cn/</id>
  
  <author>
    <name>蚂蚁Emmet</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gitlab-ci/cd学习07：使用变量</title>
    <link href="https://notes.camcad.cn/post/78e6172.html"/>
    <id>https://notes.camcad.cn/post/78e6172.html</id>
    <published>2024-04-20T14:07:23.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<p>在GitLab CI&#x2F;CD中，您可以使用几种方法来定义和使用变量。这些方法可以帮助您在CI&#x2F;CD流水线中传递参数、配置环境和保护敏感信息。以下是一些常见的方法：</p><span id="more"></span><figure class="highlight yaml"><figcaption><span>gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">testing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">workflow:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$CI_PIPELINE_SOURCE</span> <span class="string">==</span> <span class="string">&quot;merge_request_event&quot;</span>  <span class="comment"># 仅当合并请求事件时执行</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">always</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">when:</span> <span class="string">never</span></span><br><span class="line"></span><br><span class="line"><span class="attr">variables:</span></span><br><span class="line">  <span class="attr">G_NAME:</span> <span class="string">&quot;全局变量&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_build:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;$&#123;G_NAME&#125;--&gt;此变量为全局变量&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_test:</span></span><br><span class="line">  <span class="attr">variables:</span></span><br><span class="line">    <span class="attr">NAME:</span> <span class="string">&quot;局部变量&quot;</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">testing</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;$&#123;NAME&#125;--&gt;此变量为局部变量&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;$&#123;G_NAME&#125;--&gt;此变量为全局变量&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_unit_testing:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">testing</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;$&#123;MY_PROJECT_VARIABLE&#125;--&gt;此变量在gitlab项目中定义&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_deploy:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;$&#123;CI_JOB_NAME&#125;--&gt;此变量为系统变量&quot;</span></span><br></pre></td></tr></table></figure><h3 id="workflow"><a href="#workflow" class="headerlink" title="workflow"></a>workflow</h3><p>这个GitLab CI&#x2F;CD配置文件中的workflow部分定义了一系列规则（rules），用于确定何时执行流水线中的作业（jobs）。这些规则基于不同的条件来定义流水线的行为。<br><strong>1、第一条规则:</strong></p><ul><li><code>if: $CI_PIPELINE_SOURCE == &quot;merge_request_event&quot;</code>：这个条件判断了CI&#x2F;CD流水线的来源是否为合并请求事件。当流水线是由合并请求事件触发时，这个条件将会被满足。</li><li><code>when: always</code>：当第一个条件满足时，这个规则将会触发作业执行。when: always表示无论其他条件如何，作业都应该被执行。</li></ul><p><strong>2、第二条规则:</strong></p><ul><li><code>when: never</code>：这个规则明确地指定了作业永远不会被执行。无论其他条件如何，这个作业都不会被触发执行。</li></ul><h3 id="变量（Variables）"><a href="#变量（Variables）" class="headerlink" title="变量（Variables）"></a>变量（Variables）</h3><ul><li><code>G_NAME</code>：定义了一个全局变量，可以在整个流水线中使用。</li><li><code>NAME</code>：定义了一个局部变量，只能在指定的作业中使用。</li><li><code>MY_PROJECT_VARIABLE</code>：定义了一个项目变量，可以在项目中使用。</li><li><code>CI_COMMIT_BRANCH</code>：系统定义的变量，获取提交分支名称。</li><li><code>CI_JOB_NAME</code>：系统定义的变量，获取当前工作名称。</li></ul><h3 id="项目变量"><a href="#项目变量" class="headerlink" title="项目变量"></a>项目变量</h3><p><img src="https://image.camcad.cn/vscode/20240420154114.png" alt="20240420154114"></p><h3 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h3><p><a href="https://docs.gitlab.com/ee/ci/variables/predefined_variables.html">https://docs.gitlab.com/ee/ci/variables/predefined_variables.html</a></p><p><img src="https://image.camcad.cn/vscode/20240420145625.png" alt="20240420145625"></p><h3 id="合并请求时，事件触发"><a href="#合并请求时，事件触发" class="headerlink" title="合并请求时，事件触发"></a>合并请求时，事件触发</h3><p><img src="https://image.camcad.cn/vscode/20240420145356.png" alt="20240420145356"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.youtube.com/watch?v=7MLKzgCJAE4&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=8">為你自己學 GitLab CI&#x2F;CD Day 08 - 環境變數</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在GitLab CI&amp;#x2F;CD中，您可以使用几种方法来定义和使用变量。这些方法可以帮助您在CI&amp;#x2F;CD流水线中传递参数、配置环境和保护敏感信息。以下是一些常见的方法：&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习06：指定分支</title>
    <link href="https://notes.camcad.cn/post/812131ff.html"/>
    <id>https://notes.camcad.cn/post/812131ff.html</id>
    <published>2024-04-20T13:46:00.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用only关键字"><a href="#使用only关键字" class="headerlink" title="使用only关键字"></a>使用<code>only</code>关键字</h2><p>在GitLab CI&#x2F;CD配置文件（.gitlab-ci.yml）中，可以使用<code>only</code>关键字来指定作业（job）在哪些分支上执行。这样可以控制作业在哪些分支上触发执行，而在其他分支上不执行。这对于限制作业的执行范围或者针对特定分支进行不同的处理非常有用。</p><span id="more"></span><p>以下是使用<code>only</code>关键字的示例：</p><figure class="highlight yaml"><figcaption><span>gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">testing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_build:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;构建项目...&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">chmod</span> <span class="string">+x</span> <span class="string">./emmet_run.sh</span> <span class="comment"># 给脚本赋予执行权限</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./emmet_run.sh</span>          <span class="comment"># 执行脚本</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_test:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">testing</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;开发测试...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_unit_testing:</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">testing</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;单元测试...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_deploy:</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;上线部署...&quot;</span></span><br></pre></td></tr></table></figure><h4 id="dev分支脚本执行"><a href="#dev分支脚本执行" class="headerlink" title="dev分支脚本执行"></a>dev分支脚本执行</h4><p><img src="https://image.camcad.cn/vscode/20240420135042.png" alt="20240420135042"></p><h4 id="main分支脚本执行"><a href="#main分支脚本执行" class="headerlink" title="main分支脚本执行"></a>main分支脚本执行</h4><p><img src="https://image.camcad.cn/vscode/20240420135113.png" alt="20240420135113"></p><h2 id="except关键字"><a href="#except关键字" class="headerlink" title="except关键字"></a><code>except</code>关键字</h2><p>Gitlab CI&#x2F;CD配置文件<code>.gitlab-ci.yml</code>中，<code>only</code>关键字用于指定在哪些分支上执行作业。与之相对应的是<code>except</code>关键字，它的作用是排除在指定的分支上执行作业。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.youtube.com/watch?v=_H0v2qz21N0&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=7">為你自己學 GitLab CI&#x2F;CD Day 07 - 指定分支</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;使用only关键字&quot;&gt;&lt;a href=&quot;#使用only关键字&quot; class=&quot;headerlink&quot; title=&quot;使用only关键字&quot;&gt;&lt;/a&gt;使用&lt;code&gt;only&lt;/code&gt;关键字&lt;/h2&gt;&lt;p&gt;在GitLab CI&amp;#x2F;CD配置文件（.gitlab-ci.yml）中，可以使用&lt;code&gt;only&lt;/code&gt;关键字来指定作业（job）在哪些分支上执行。这样可以控制作业在哪些分支上触发执行，而在其他分支上不执行。这对于限制作业的执行范围或者针对特定分支进行不同的处理非常有用。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习05：执行外部脚本</title>
    <link href="https://notes.camcad.cn/post/4ff7be47.html"/>
    <id>https://notes.camcad.cn/post/4ff7be47.html</id>
    <published>2024-04-19T20:59:53.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<p>在GitLab CI&#x2F;CD中，您可以执行外部脚本作为作业的一部分。这可以通过使用shell executor来实现。下面是一些常见的方法：</p><span id="more"></span><p><code>注意：</code>记得给脚本文本添加执行权限。</p><figure class="highlight yaml"><figcaption><span>.gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">testing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_build:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;构建项目...&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">chmod</span> <span class="string">+x</span> <span class="string">./emmet_run.sh</span> <span class="comment"># 给脚本赋予执行权限</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./emmet_run.sh</span>          <span class="comment"># 执行脚本</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_test:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">testing</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;开发测试...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_unit_testing:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">testing</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;单元测试...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_deploy:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;上线部署...&quot;</span></span><br></pre></td></tr></table></figure><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight shell"><figcaption><span>emmet_run.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br><span class="line">hostname</span><br><span class="line">ls -al</span><br></pre></td></tr></table></figure><h4 id="以上脚本执行结果"><a href="#以上脚本执行结果" class="headerlink" title="以上脚本执行结果"></a>以上脚本执行结果</h4><p><img src="https://image.camcad.cn/vscode/20240419211958.png" alt="20240419211958"></p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://www.youtube.com/watch?v=p8JgCDeMpYU&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=6">為你自己學 GitLab CI&#x2F;CD Day 06 - 執行外部檔案</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在GitLab CI&amp;#x2F;CD中，您可以执行外部脚本作为作业的一部分。这可以通过使用shell executor来实现。下面是一些常见的方法：&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习04：工作阶段和相依性</title>
    <link href="https://notes.camcad.cn/post/9c8d76a5.html"/>
    <id>https://notes.camcad.cn/post/9c8d76a5.html</id>
    <published>2024-04-19T20:27:28.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<p>在<code>.gitlab-ci.yml</code>文件中，<code>stages</code>关键字用于定义CI&#x2F;CD流水线中的各个阶段。CI&#x2F;CD流水线是一系列的阶段，每个阶段可以包含一个或多个作业（jobs），用于完成特定的任务。<code>stages</code>关键字允许您明确指定流水线中的各个阶段，以便组织和控制作业的执行顺序。</p><span id="more"></span> <figure class="highlight yml"><figcaption><span>.gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">testing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_build:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;构建项目...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_test:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">testing</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;开发测试...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_unit_testing:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">testing</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;单元测试...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">emmet_deploy:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;上线部署...&quot;</span></span><br></pre></td></tr></table></figure><p>在上面的例子中，我们定义了三个阶段：<code>build</code>、<code>testing</code>和<code>deploy</code>。每个阶段可以包含一个或多个作业，这些作业将按照定义的顺序执行。</p><h4 id="build阶段"><a href="#build阶段" class="headerlink" title="build阶段"></a>build阶段</h4><p><img src="https://image.camcad.cn/vscode/20240419204816.png" alt="20240419204816"></p><h4 id="testing阶段"><a href="#testing阶段" class="headerlink" title="testing阶段"></a>testing阶段</h4><p><img src="https://image.camcad.cn/vscode/20240419204840.png" alt="20240419204840"></p><h4 id="deploy阶段"><a href="#deploy阶段" class="headerlink" title="deploy阶段"></a>deploy阶段</h4><p><img src="https://image.camcad.cn/vscode/20240419204845.png" alt="20240419204845"></p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://www.youtube.com/watch?v=eHGwioHmJfM&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=5">為你自己學 GitLab CI&#x2F;CD Day 05 - 工作階段以及相依性</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在&lt;code&gt;.gitlab-ci.yml&lt;/code&gt;文件中，&lt;code&gt;stages&lt;/code&gt;关键字用于定义CI&amp;#x2F;CD流水线中的各个阶段。CI&amp;#x2F;CD流水线是一系列的阶段，每个阶段可以包含一个或多个作业（jobs），用于完成特定的任务。&lt;code&gt;stages&lt;/code&gt;关键字允许您明确指定流水线中的各个阶段，以便组织和控制作业的执行顺序。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习03：定义执行任务开始和结束要运行的脚本</title>
    <link href="https://notes.camcad.cn/post/8671d331.html"/>
    <id>https://notes.camcad.cn/post/8671d331.html</id>
    <published>2024-04-10T23:25:24.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<p>在<code>.gitlab-ci.yml</code>文件中，可以使用<code>before_script</code>和<code>after_script</code>指令来定义在执行任务前和任务后要运行的脚本。<br>这些脚本可以在每个作业（job）的开始和结束时执行，用于执行一些共享的准备工作或清理工作。</p><p><strong>before_script</strong>：在每个作业执行之前运行的脚本。通常用于设置环境、安装依赖项等操作。<code>before_script</code>中定义的命令会在作业的脚本之前执行。</p><p><strong>after_script</strong>：在每个作业执行完毕后运行的脚本。通常用于清理工作，如关闭服务、收集日志等。<code>after_script</code>中定义的命令会在作业的脚本之后执行。</p><span id="more"></span><figure class="highlight yaml"><figcaption><span>.gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">build:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;构建项目...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">unit_testing:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;单元测试...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;上线部署...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">before_script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;执行任务前处理...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">after_script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;执行任务后处理...&quot;</span></span><br></pre></td></tr></table></figure><h4 id="bulid"><a href="#bulid" class="headerlink" title="bulid:"></a>bulid:</h4><p><img src="https://image.camcad.cn/vscode/20240410235016.png" alt="20240410235016"></p><h4 id="unit-testing"><a href="#unit-testing" class="headerlink" title="unit_testing:"></a>unit_testing:</h4><p><img src="https://image.camcad.cn/vscode/20240410235228.png" alt="20240410235228"></p><h4 id="deploy"><a href="#deploy" class="headerlink" title="deploy:"></a>deploy:</h4><p><img src="https://image.camcad.cn/vscode/20240410235131.png" alt="20240410235131"></p><p><strong>注意</strong>：以上脚本工作流为乱序。</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://www.youtube.com/watch?v=yFw5zoABS8M&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=4">為你自己學 GitLab CI&#x2F;CD Day 04 - 新增 Pipeline Job</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在&lt;code&gt;.gitlab-ci.yml&lt;/code&gt;文件中，可以使用&lt;code&gt;before_script&lt;/code&gt;和&lt;code&gt;after_script&lt;/code&gt;指令来定义在执行任务前和任务后要运行的脚本。&lt;br&gt;这些脚本可以在每个作业（job）的开始和结束时执行，用于执行一些共享的准备工作或清理工作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;before_script&lt;/strong&gt;：在每个作业执行之前运行的脚本。通常用于设置环境、安装依赖项等操作。&lt;code&gt;before_script&lt;/code&gt;中定义的命令会在作业的脚本之前执行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;after_script&lt;/strong&gt;：在每个作业执行完毕后运行的脚本。通常用于清理工作，如关闭服务、收集日志等。&lt;code&gt;after_script&lt;/code&gt;中定义的命令会在作业的脚本之后执行。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习02：建立.gitlab-ci.yml</title>
    <link href="https://notes.camcad.cn/post/26de28d.html"/>
    <id>https://notes.camcad.cn/post/26de28d.html</id>
    <published>2024-04-10T20:59:20.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<h3 id="gitlab-ci-yml"><a href="#gitlab-ci-yml" class="headerlink" title=".gitlab-ci.yml"></a>.gitlab-ci.yml</h3><p><code>.gitlab-ci.yml</code>文件是GitLab CI&#x2F;CD的配置文件，用于定义持续集成和持续交付的流水线。该文件包含了一系列的阶段（stages）、任务（jobs）、脚本（scripts）和指令（directives），用于描述代码仓库中的代码在提交后应该如何被构建、测试和部署。</p><h3 id="第一个脚本"><a href="#第一个脚本" class="headerlink" title="第一个脚本"></a>第一个脚本</h3><span id="more"></span><figure class="highlight yaml"><figcaption><span>.gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">HelloWorld:</span>  <span class="comment"># 自定义</span></span><br><span class="line">  <span class="attr">script:</span>    <span class="comment"># 固定格式</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;Hello HelloWorld , emmet!&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://image.camcad.cn/vscode/20240410212354.png" alt="20240410212354"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://chat.openai.com/">open ai</a></p><p><a href="https://www.youtube.com/watch?v=v3gU5zJmK-M&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=3">為你自己學 GitLab CI&#x2F;CD Day 03 - 建立.gitlab-ci.yml</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;gitlab-ci-yml&quot;&gt;&lt;a href=&quot;#gitlab-ci-yml&quot; class=&quot;headerlink&quot; title=&quot;.gitlab-ci.yml&quot;&gt;&lt;/a&gt;.gitlab-ci.yml&lt;/h3&gt;&lt;p&gt;&lt;code&gt;.gitlab-ci.yml&lt;/code&gt;文件是GitLab CI&amp;#x2F;CD的配置文件，用于定义持续集成和持续交付的流水线。该文件包含了一系列的阶段（stages）、任务（jobs）、脚本（scripts）和指令（directives），用于描述代码仓库中的代码在提交后应该如何被构建、测试和部署。&lt;/p&gt;
&lt;h3 id=&quot;第一个脚本&quot;&gt;&lt;a href=&quot;#第一个脚本&quot; class=&quot;headerlink&quot; title=&quot;第一个脚本&quot;&gt;&lt;/a&gt;第一个脚本&lt;/h3&gt;</summary>
    
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-ci/cd学习01：什么是CI/CD</title>
    <link href="https://notes.camcad.cn/post/e5e0b1bf.html"/>
    <id>https://notes.camcad.cn/post/e5e0b1bf.html</id>
    <published>2024-04-10T20:29:18.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是CI-x2F-CD"><a href="#什么是CI-x2F-CD" class="headerlink" title="什么是CI&#x2F;CD"></a>什么是CI&#x2F;CD</h3><p>CI&#x2F;CD是持续集成（Continuous Integration）和持续交付（Continuous Delivery）的缩写。它是一种软件开发实践，旨在通过自动化的流程和工具来提高软件交付的速度和质量。</p><p><strong>持续集成（Continuous Integration，CI）</strong>：CI是一种开发实践，开发人员将代码频繁地合并到共享存储库中（gitlab、github），每次合并都会触发自动化构建和测试流程。这样可以尽早地发现和解决代码集成问题，确保团队的代码始终保持在一个可集成状态。</p><p><strong>持续交付（Continuous Delivery，CD）</strong>：CD是在持续集成的基础上构建的，它将代码集成后通过自动化流程将其部署到生产环境中。持续交付的目标是确保软件在任何时候都是可部署的，从而使团队能够更快地将新功能、修复和改进推送到生产环境中。</p><span id="more"></span><h4 id="CI-x2F-CD的优点包括："><a href="#CI-x2F-CD的优点包括：" class="headerlink" title="CI&#x2F;CD的优点包括："></a>CI&#x2F;CD的优点包括：</h4><p><strong>快速反馈</strong>：CI&#x2F;CD使开发团队能够更快地获得关于其代码质量和功能的反馈，有助于快速发现和解决问题。</p><p><strong>降低风险</strong>：自动化的测试和部署过程有助于降低人为错误，减少因人为操作而引入的风险。</p><p><strong>增强可靠性</strong>：通过自动化流程，可以提高软件交付的一致性和可靠性，减少部署失败的可能性。</p><p><strong>加速交付</strong>：CI&#x2F;CD使团队能够更频繁地交付软件，从而提高了交付速度，使市场反馈更加及时。</p><h4 id="CI-x2F-CD的缺点包括："><a href="#CI-x2F-CD的缺点包括：" class="headerlink" title="CI&#x2F;CD的缺点包括："></a>CI&#x2F;CD的缺点包括：</h4><p><strong>复杂性</strong>：CI&#x2F;CD的实施可能涉及许多不同的工具和技术，需要团队成员具备相应的技能和知识。这种复杂性可能增加了学习曲线和维护成本。</p><p><strong>成本</strong>：实施CI&#x2F;CD所需的工具和基础设施可能需要显著的投资。此外，需要额外的时间和资源来配置、管理和维护CI&#x2F;CD管道。</p><p><strong>自动化风险</strong>：尽管自动化流程可以减少人为错误，但如果流程配置不当或测试不充分，自动化也可能导致错误和问题在生产环境中更快地传播。</p><p><strong>文化变革</strong>：CI&#x2F;CD不仅仅是工具和流程的实施，还需要组织文化上的变革。有些团队可能对持续集成、持续交付和自动化流程的理念存在抵触情绪，需要适应和接受这种变革。</p><p><strong>安全风险</strong>：CI&#x2F;CD管道中的自动化流程可能存在安全漏洞，尤其是如果安全性不是充分考虑的话。不当的配置、权限管理不当或者第三方工具的漏洞都可能导致安全问题。</p><p><strong>部署复杂性</strong>：持续交付意味着软件会更频繁地部署到生产环境中，这可能增加部署过程的复杂性。特别是在复杂的系统中，部署可能需要额外的策略和手段来确保稳定性和可用性。</p><p><strong>总结</strong>： 总的来说，CI&#x2F;CD是现代软件开发中的关键实践，有助于团队更快地交付高质量的软件。</p><h3 id="CI-x2F-CD常见开发上线流程"><a href="#CI-x2F-CD常见开发上线流程" class="headerlink" title="CI&#x2F;CD常见开发上线流程"></a>CI&#x2F;CD常见开发上线流程</h3><p><img src="https://image.camcad.cn/vscode/20240410203112.png" alt="20240410203112"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://chat.openai.com/">open ai</a></p><p><a href="https://www.youtube.com/watch?v=zCFFot5HnEw&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=2">為你自己學 GitLab CI&#x2F;CD Day 02 - 什麼是 CI&#x2F;CD</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;什么是CI-x2F-CD&quot;&gt;&lt;a href=&quot;#什么是CI-x2F-CD&quot; class=&quot;headerlink&quot; title=&quot;什么是CI&amp;#x2F;CD&quot;&gt;&lt;/a&gt;什么是CI&amp;#x2F;CD&lt;/h3&gt;&lt;p&gt;CI&amp;#x2F;CD是持续集成（Continuous Integration）和持续交付（Continuous Delivery）的缩写。它是一种软件开发实践，旨在通过自动化的流程和工具来提高软件交付的速度和质量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;持续集成（Continuous Integration，CI）&lt;/strong&gt;：CI是一种开发实践，开发人员将代码频繁地合并到共享存储库中（gitlab、github），每次合并都会触发自动化构建和测试流程。这样可以尽早地发现和解决代码集成问题，确保团队的代码始终保持在一个可集成状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;持续交付（Continuous Delivery，CD）&lt;/strong&gt;：CD是在持续集成的基础上构建的，它将代码集成后通过自动化流程将其部署到生产环境中。持续交付的目标是确保软件在任何时候都是可部署的，从而使团队能够更快地将新功能、修复和改进推送到生产环境中。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/categories/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/categories/gitlab/CI-CD/"/>
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/tags/gitlab/"/>
    
    <category term="CI/CD" scheme="https://notes.camcad.cn/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>gitlab开启Container Registry（容器镜像仓库）功能</title>
    <link href="https://notes.camcad.cn/post/e5b819e9.html"/>
    <id>https://notes.camcad.cn/post/e5b819e9.html</id>
    <published>2024-04-09T22:20:41.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<p>通过将 Docker 容器注册表集成到 GitLab 中，每个项目都可以拥有自己的空间来存储其 Docker 映像.</p><span id="more"></span><h3 id="Container-Registry配置"><a href="#Container-Registry配置" class="headerlink" title="Container Registry配置"></a>Container Registry配置</h3><p>修改<code>/etc/gitlab/gitlab.rb</code>配置文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">registry_external_url &#x27;https://gitlab.example.com:9588&#x27;</span><br><span class="line">registry_nginx[&#x27;ssl_certificate&#x27;] = &quot;/path/to/certificate.pem&quot;</span><br><span class="line">registry_nginx[&#x27;ssl_certificate_key&#x27;] = &quot;/path/to/certificate.key&quot;</span><br></pre></td></tr></table></figure><p>重载配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br><span class="line">sudo gitlab-ctl restart</span><br></pre></td></tr></table></figure><p><img src="https://image.camcad.cn/vscode/20240409223015.png" alt="20240409223015"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://docs.gitlab.com/ee/administration/packages/container_registry.html">Enable the container registry（启用容器注册表）</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;通过将 Docker 容器注册表集成到 GitLab 中，每个项目都可以拥有自己的空间来存储其 Docker 映像.&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/categories/gitlab/"/>
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu服务器上安装code-server编辑器</title>
    <link href="https://notes.camcad.cn/post/8c5222fa.html"/>
    <id>https://notes.camcad.cn/post/8c5222fa.html</id>
    <published>2024-04-05T16:11:57.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<p>浏览器中的VSCode</p><span id="more"></span><h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p><code>github仓库地址：</code><a href="https://github.com/coder/code-server/">https://github.com/coder/code-server/</a></p><p>在<code>github</code>仓库下载与系统对应的安装包，例如系统为<code>ubuntu</code>应该下载<code>*.deb</code>格式安装包。<br><img src="http://image.camcad.cn/2024/04/01.png" alt="01"></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>将下载的安装包上传至ubuntu服务器中，通过<code>dpkg</code>命令安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i 安装包</span><br><span class="line"></span><br><span class="line">sudo dpkg -i code-server_4.22.1_amd64.deb</span><br></pre></td></tr></table></figure><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>编辑<code>~/.config/code-server/config.yaml</code>配置文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bind-addr: 0.0.0.0:6868     # 0.0.0.0表示本地IP，6868表示访问端口</span><br><span class="line">auth: password</span><br><span class="line">password: 321456            # 登录密码</span><br><span class="line"></span><br><span class="line"># https访问</span><br><span class="line">cert: /home/emmet/.config/code-server/vscode.camcad.cn.pem  # 私钥</span><br><span class="line">cert-key: /home/emmet/.config/code-server/vscode.camcad.cn.key  # 公钥</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 加载新的unit配置文件</span><br><span class="line">sudo systemctl reload-daemon</span><br><span class="line"></span><br><span class="line"># 重启code-server配置文件</span><br><span class="line">sudo systemctl restart code-server@$USER</span><br><span class="line"></span><br><span class="line"># 设置code-server开机自启动</span><br><span class="line">sudo systemctl enable code-server@$USER</span><br><span class="line"></span><br><span class="line"># 停止code-server服务</span><br><span class="line">sudo systemctl stop code-server@$USER</span><br><span class="line"></span><br><span class="line"># 执行如下命令将相关文件全部删除即可完成卸载</span><br><span class="line">sudo rm -rf /usr/lib/code-server</span><br><span class="line">sudo rm -rf ~/.local/share/code-server</span><br><span class="line">sudo rm -rf ~/.config/code-server</span><br></pre></td></tr></table></figure><h3 id="离线安装插件"><a href="#离线安装插件" class="headerlink" title="离线安装插件"></a>离线安装插件</h3><p>在官网下载插件：<a href="https://marketplace.visualstudio.com/vscode">https://marketplace.visualstudio.com/vscode</a><br><img src="http://image.camcad.cn/2024/04/vscode_vsix.png" alt="vscode_vsix"></p><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p>将下载好的软件上传至服务器中，通过<code>扩展 --&gt; 从 VSIX 安装</code>。<br><img src="http://image.camcad.cn/2024/04/vscode_vsix_install.png" alt="vscode_vsix_install"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;浏览器中的VSCode&lt;/p&gt;</summary>
    
    
    
    <category term="辅助" scheme="https://notes.camcad.cn/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="vscode" scheme="https://notes.camcad.cn/tags/vscode/"/>
    
    <category term="code-server" scheme="https://notes.camcad.cn/tags/code-server/"/>
    
  </entry>
  
  <entry>
    <title>Windows上运行GitLab Runner</title>
    <link href="https://notes.camcad.cn/post/282df0ab.html"/>
    <id>https://notes.camcad.cn/post/282df0ab.html</id>
    <published>2024-04-02T20:17:27.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<p>要在Windows上安装和运行GitLab Runner，您需要：<br>1、本机需要有Git，可以从<a href="http://git-scm.com/downloads">官方网站</a>安装。<br>2、如果你想在你的用户帐户而不是内置系统帐户下运行它，你的用户账户的密码。<br>3、git的基本操作。<br>4、gitlab Runner配置文件<code>.gitlab-ci.yml</code>的基础语法。</p><span id="more"></span><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><p>1、创建文件夹，在系统中的某个位置创建一个文件夹，例如：<code>C:\GitLab Runner</code>。</p><p>2、下载Runner软件，下载<a href="https://s3.dualstack.us-east-1.amazonaws.com/gitlab-runner-downloads/latest/binaries/gitlab-runner-windows-amd64.exe">64位</a>或<a href="https://s3.dualstack.us-east-1.amazonaws.com/gitlab-runner-downloads/latest/binaries/gitlab-runner-windows-386.exe">32位</a>的二进制文件，并将其放入您创建的文件夹中。以下假设您已将二进制文件重命名为<code>gitlab-runner.exe</code>（可选）。</p><h3 id="注册Runner（内置系统账户）"><a href="#注册Runner（内置系统账户）" class="headerlink" title="注册Runner（内置系统账户）"></a>注册Runner（内置系统账户）</h3><h4 id="安装-gitlab-runner-exe-install解决权限问题"><a href="#安装-gitlab-runner-exe-install解决权限问题" class="headerlink" title="安装.\gitlab-runner.exe install解决权限问题"></a>安装<a href="https://stackoverflow.com/questions/61310681/fatal-failed-to-start-gitlab-runner-access-is-denied">.\gitlab-runner.exe install</a>解决权限问题</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">步骤：</span><br><span class="line"></span><br><span class="line">1、Windows + X</span><br><span class="line">2、终端管理员</span><br><span class="line">3、cd &quot;C:\GitLab-Runner&quot;</span><br></pre></td></tr></table></figure><h4 id="安装Runner"><a href="#安装Runner" class="headerlink" title="安装Runner"></a>安装Runner</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\GitLab-Runner&gt; .\gitlab-runner.exe install</span><br><span class="line">Runtime platform                                    arch=amd64 os=windows pid=22100 revision=81ab07f6 version=16.10.0</span><br></pre></td></tr></table></figure><h4 id="启动Runner"><a href="#启动Runner" class="headerlink" title="启动Runner"></a>启动Runner</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\GitLab-Runner&gt; .\gitlab-runner.exe start</span><br><span class="line">Runtime platform                                    arch=amd64 os=windows pid=9320 revision=81ab07f6 version=16.10.0</span><br></pre></td></tr></table></figure><h4 id="Registering-runners"><a href="#Registering-runners" class="headerlink" title="Registering runners"></a>Registering runners</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">step1：</span><br><span class="line">PS C:\GitLab-Runner&gt; .\gitlab-runner.exe register</span><br><span class="line">Runtime platform                                    arch=amd64 os=windows pid=19132 revision=81ab07f6 version=16.10.0</span><br><span class="line">Enter the GitLab instance URL (for example, https://gitlab.com/):</span><br><span class="line">https://gitlab.com/</span><br><span class="line"></span><br><span class="line">step 2：</span><br><span class="line">Enter the registration token:</span><br><span class="line">GR13489419-azyx4zw35diAddjseWFfh</span><br><span class="line"></span><br><span class="line">step 3：</span><br><span class="line">Enter a description for the runner:</span><br><span class="line">[emmet]: 用于打包程序</span><br><span class="line"></span><br><span class="line">step 4：</span><br><span class="line">Enter tags for the runner (comma-separated):</span><br><span class="line">MyDeploy</span><br><span class="line"></span><br><span class="line">step 5：</span><br><span class="line">Enter optional maintenance note for the runner:</span><br><span class="line">other</span><br><span class="line"></span><br><span class="line">step 6：</span><br><span class="line">WARNING: Support for registration tokens and runner parameters in the &#x27;register&#x27; command has been deprecated in GitLab Runner 15.6 and will be replaced with support for authentication tokens. For more information, see https://docs.gitlab.com/ee/ci/runners/new_creation_workflow</span><br><span class="line">Registering runner... succeeded                     runner=GR13489419-Vzyx4z</span><br><span class="line">Enter an executor: ssh, parallels, docker, kubernetes, docker-autoscaler, custom, virtualbox, docker-windows, docker+machine, instance, shell:</span><br><span class="line">shell</span><br></pre></td></tr></table></figure><p>如图所示，本机添加runner成功<br><img src="http://image.camcad.cn/2024/04/gitlab-add-runner.png" alt="gitlab-add-runner"></p><h4 id="问题处理：ERROR-Job-failed-system-failure-prepare-environment-failed-to-start-process-exec-“pwsh”-executable-file-not-found-in-PATH"><a href="#问题处理：ERROR-Job-failed-system-failure-prepare-environment-failed-to-start-process-exec-“pwsh”-executable-file-not-found-in-PATH" class="headerlink" title="问题处理：ERROR: Job failed (system failure): prepare environment: failed to start process: exec: “pwsh”: executable file not found in %PATH%."></a>问题处理：<a href="https://stackoverflow.com/questions/68050125/gitlab-runner-prepare-environment-failed-to-start-process-pwsh-in-windows">ERROR: Job failed (system failure): prepare environment: failed to start process: exec: “pwsh”: executable file not found in %PATH%.</a></h4><p>编辑config.toml以使用较旧的powershell.exe：</p><figure class="highlight plaintext"><figcaption><span>from</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[[runners]]</span><br><span class="line">  name = &quot;ci-runner&quot;</span><br><span class="line">  url = &quot;http://xxx.yyy.xx/&quot;</span><br><span class="line">  token = &quot;XXXXX&quot;</span><br><span class="line">  executor = &quot;shell&quot;</span><br><span class="line">  shell = &quot;pwsh&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>to</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[[runners]]</span><br><span class="line">  name = &quot;ci-runner&quot;</span><br><span class="line">  url = &quot;http://xxx.yyy.xx/&quot;</span><br><span class="line">  token = &quot;XXXXX&quot;</span><br><span class="line">  executor = &quot;shell&quot;</span><br><span class="line">  shell = &quot;powershell&quot;</span><br></pre></td></tr></table></figure><p>然后重新启动gitlab runner解决了这个问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gitlab-runner.exe restart</span><br></pre></td></tr></table></figure><h3 id="本地运行Runner"><a href="#本地运行Runner" class="headerlink" title="本地运行Runner"></a>本地运行Runner</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PS C:\GitLab-Runner&gt; .\gitlab-runner.exe run</span><br><span class="line">Runtime platform                                    arch=amd64 os=windows pid=27404 revision=81ab07f6 version=16.10.0</span><br><span class="line">Starting multi-runner from C:\GitLab-Runner\config.toml...  builds=0 max_builds=0</span><br><span class="line">There might be a problem with your config based on jsonschema annotations in common/config.go (experimental feature):</span><br><span class="line">jsonschema: &#x27;/runners/0/Monitoring&#x27; does not validate with https://gitlab.com/gitlab-org/gitlab-runner/common/config#/$ref/properties/runners/items/$ref/properties/Monitoring/$ref/type: expected object, but got null</span><br><span class="line"></span><br><span class="line">Configuration loaded                                builds=0 max_builds=1</span><br><span class="line">listen_address not defined, metrics &amp; debug endpoints disabled  builds=0 max_builds=1</span><br><span class="line">[session_server].listen_address not defined, session endpoints disabled  builds=0 max_builds=1</span><br><span class="line">Initializing executor providers                     builds=0 max_builds=1</span><br></pre></td></tr></table></figure><h3 id="流水线规则定义"><a href="#流水线规则定义" class="headerlink" title="流水线规则定义"></a>流水线规则定义</h3><p>在项目目录下创建<code>.gitlab-ci.yml</code>文件，内容如下：</p><figure class="highlight yaml"><figcaption><span>.gitlab-ci.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 逻辑规则</span></span><br><span class="line"><span class="attr">workflow:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$CI_COMMIT_BRANCH</span> <span class="string">==</span> <span class="string">&quot;main&quot;</span> <span class="comment"># CI_COMMIT_BRANCH 表示分支为main就触发</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">always</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">when:</span> <span class="string">never</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy_emmet:</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">MyDeploy</span> <span class="comment"># 本地 Runner名称</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hostname</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">pwd</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ls</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;本地程序部署&quot;</span></span><br></pre></td></tr></table></figure><h3 id="将代码上传到仓库，查看流水线"><a href="#将代码上传到仓库，查看流水线" class="headerlink" title="将代码上传到仓库，查看流水线"></a>将代码上传到仓库，查看流水线</h3><p>如下所示表示Runner完成<br><img src="http://image.camcad.cn/2024/04/gitlab-runner-deploy-test.png" alt="gitlab-runner-deploy-test"></p><hr><p><img src="http://image.camcad.cn/2024/04/gitlab-runner.png" alt="gitlab-runner"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://docs.gitlab.com/runner/install/windows.html">Install GitLab Runner on Windows</a><br><a href="https://www.youtube.com/watch?v=wRXBztn6OkE&list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu&index=11">為你自己學 GitLab CI&#x2F;CD</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;要在Windows上安装和运行GitLab Runner，您需要：&lt;br&gt;1、本机需要有Git，可以从&lt;a href=&quot;http://git-scm.com/downloads&quot;&gt;官方网站&lt;/a&gt;安装。&lt;br&gt;2、如果你想在你的用户帐户而不是内置系统帐户下运行它，你的用户账户的密码。&lt;br&gt;3、git的基本操作。&lt;br&gt;4、gitlab Runner配置文件&lt;code&gt;.gitlab-ci.yml&lt;/code&gt;的基础语法。&lt;/p&gt;</summary>
    
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/categories/gitlab/"/>
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>gitlab升级流程（ubuntu serve ）</title>
    <link href="https://notes.camcad.cn/post/e7d1d05.html"/>
    <id>https://notes.camcad.cn/post/e7d1d05.html</id>
    <published>2024-04-02T12:49:52.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看系统版本"><a href="#查看系统版本" class="headerlink" title="查看系统版本"></a>查看系统版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># lsb_release -a</span><br><span class="line"></span><br><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID: Ubuntu</span><br><span class="line">Description:    Ubuntu 20.04.6 LTS</span><br><span class="line">Release:        20.04</span><br><span class="line">Codename:       focal</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="查看本地的GitLab-CE版本"><a href="#查看本地的GitLab-CE版本" class="headerlink" title="查看本地的GitLab CE版本"></a>查看本地的GitLab CE版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># apt policy gitlab-ce</span><br><span class="line"></span><br><span class="line">gitlab-ce:</span><br><span class="line">  Installed: 15.1.0-ce.0</span><br><span class="line">  Candidate: 15.1.0-ce.0</span><br><span class="line">  Version table:</span><br><span class="line"> *** 15.1.0-ce.0 100</span><br><span class="line">        100 /var/lib/dpkg/status</span><br></pre></td></tr></table></figure><h3 id="备份gitlab"><a href="#备份gitlab" class="headerlink" title="备份gitlab"></a>备份gitlab</h3><p>备份</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure><p>并备份下列两个文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/gitlab/gitlab.rb</span><br><span class="line">/etc/gitlab/gitlab-secrets.json</span><br></pre></td></tr></table></figure><h3 id="确认升级路径"><a href="#确认升级路径" class="headerlink" title="确认升级路径"></a>确认升级路径</h3><p>确认升级路径URL：<a href="https://gitlab-com.gitlab.io/support/toolbox/upgrade-path/">https://gitlab-com.gitlab.io/support/toolbox/upgrade-path/</a></p><p><img src="http://image.camcad.cn/2024/03/gitlab-upgrade-path.png" alt="gitlab-upgrade-path"></p><h3 id="升级包查看"><a href="#升级包查看" class="headerlink" title="升级包查看"></a>升级包查看</h3><p>社区版升级包下载：<a href="https://packages.gitlab.com/gitlab/gitlab-ce">https://packages.gitlab.com/gitlab/gitlab-ce</a><br><img src="http://image.camcad.cn/2024/03/gitlab-ce.png" alt="gitlab-ce"></p><h3 id="下载升级包"><a href="#下载升级包" class="headerlink" title="下载升级包"></a>下载升级包</h3><p>安装包下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --content-disposition 安装包URL</span><br><span class="line"></span><br><span class="line">wget --content-disposition https://packages.gitlab.com/gitlab/gitlab-ce/packages/ubuntu/focal/gitlab-ce_15.1.6-ce.0_amd64.deb/download.deb</span><br></pre></td></tr></table></figure><h3 id="gitlab升级"><a href="#gitlab升级" class="headerlink" title="gitlab升级"></a>gitlab升级</h3><p>停止服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl stop unicorn</span><br><span class="line">gitlab-ctl stop sidekiq</span><br><span class="line">gitlab-ctl stop nginx</span><br></pre></td></tr></table></figure><p><code>15.11.13 --&gt; 16.1.6</code>需要升级数据库（PostgreSQL）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl pg-upgrade</span><br></pre></td></tr></table></figure><p>安装软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i 软件包</span><br><span class="line"></span><br><span class="line">dpkg -i gitlab-ce_15.4.6-ce.0_amd64.deb</span><br></pre></td></tr></table></figure><p>如下图所示，表示升级完成<br><img src="http://image.camcad.cn/2024/03/gitlab-upgrade-done.png" alt="gitlab-upgrade-done"></p><p>安装完成之后，执行下列命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure</span><br><span class="line">gitlab-ctl restart</span><br><span class="line">gitlab-rake gitlab:check SANITIZE=true</span><br></pre></td></tr></table></figure><p>查看gitlab版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /opt/gitlab/embedded/service/gitlab-rails/VERSION</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>1、注意版本，CE 升级到 CE；EE 升级到 EE<br>2、升级路径必须要到官方推荐升级路径上，一个版本一个版本升<br>3、升级前务必做好备份</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;查看系统版本&quot;&gt;&lt;a href=&quot;#查看系统版本&quot; class=&quot;headerlink&quot; title=&quot;查看系统版本&quot;&gt;&lt;/a&gt;查看系统版本&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# lsb_release -a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;No LSB modules are available.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Distributor ID: Ubuntu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Description:    Ubuntu 20.04.6 LTS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Release:        20.04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Codename:       focal&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/categories/gitlab/"/>
    
    
    <category term="gitlab" scheme="https://notes.camcad.cn/tags/gitlab/"/>
    
    <category term="ubuntu" scheme="https://notes.camcad.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>CATIA二次开发流程</title>
    <link href="https://notes.camcad.cn/post/2dc29672.html"/>
    <id>https://notes.camcad.cn/post/2dc29672.html</id>
    <published>2024-03-02T19:28:51.000Z</published>
    <updated>2024-04-20T07:43:29.655Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一个CAA开发流程"><a href="#一个CAA开发流程" class="headerlink" title="一个CAA开发流程"></a>一个CAA开发流程</h3><h4 id="新建菜单和工具条"><a href="#新建菜单和工具条" class="headerlink" title="新建菜单和工具条"></a>新建菜单和工具条</h4><ul><li>新建Workspace，创建Framework</li><li>为addin添加Module</li><li>添加Component</li><li>添加菜单和工具条代码</li><li>定义菜单工具条图标名称资源</li></ul><h4 id="创建响应命令和对话框"><a href="#创建响应命令和对话框" class="headerlink" title="创建响应命令和对话框"></a>创建响应命令和对话框</h4><ul><li>添加新的Module</li><li>添加命令Command</li><li>新建对话框Dialog</li><li>对话框按钮响应</li><li>添加功能函数</li></ul><h4 id="程序调试流程"><a href="#程序调试流程" class="headerlink" title="程序调试流程"></a>程序调试流程</h4><h4 id="复制工作空间"><a href="#复制工作空间" class="headerlink" title="复制工作空间"></a>复制工作空间</h4><span id="more"></span><hr><hr><h3 id="Workspace"><a href="#Workspace" class="headerlink" title="Workspace"></a>Workspace</h3><h4 id="1、New-CAA-V5-Workspace"><a href="#1、New-CAA-V5-Workspace" class="headerlink" title="1、New CAA V5 Workspace"></a>1、New CAA V5 Workspace</h4><p><img src="http://image.camcad.cn/2024/03/01.png" alt="01"><br><img src="http://image.camcad.cn/2024/03/02.png" alt="02"></p><h4 id="2、with、Workspace-Directory、Tool-level"><a href="#2、with、Workspace-Directory、Tool-level" class="headerlink" title="2、with、Workspace Directory、Tool level"></a>2、with、Workspace Directory、Tool level</h4><p><code>with</code>：mkmk是一种用于从源文件构建程序的工具。<br><code>Workspace Directory</code>：设置项目保存目录<br><code>Tool level</code>：CATIA版本<br><img src="http://image.camcad.cn/2024/03/03.png" alt="03"></p><h4 id="3、Create-new-generic-framework"><a href="#3、Create-new-generic-framework" class="headerlink" title="3、Create new generic framework"></a>3、Create new generic framework</h4><p><img src="http://image.camcad.cn/2024/03/04.png" alt="04"></p><h4 id="4、New-Framework"><a href="#4、New-Framework" class="headerlink" title="4、New Framework"></a>4、New Framework</h4><p><code>Implementation</code>：应用程序<br><code>Interface</code>：接口<br><img src="http://image.camcad.cn/2024/03/05.png" alt="05"></p><h4 id="5、New-Module"><a href="#5、New-Module" class="headerlink" title="5、New Module"></a>5、New Module</h4><p><img src="http://image.camcad.cn/2024/03/06.png" alt="06"><br><img src="http://image.camcad.cn/2024/03/07.png" alt="07"></p><h3 id="加载CATIA安装目录"><a href="#加载CATIA安装目录" class="headerlink" title="加载CATIA安装目录"></a>加载CATIA安装目录</h3><h4 id="1、将Module设为启动项目"><a href="#1、将Module设为启动项目" class="headerlink" title="1、将Module设为启动项目"></a>1、将<code>Module</code>设为启动项目</h4><p><img src="http://image.camcad.cn/2024/03/08.png" alt="08"></p><h4 id="2、Locate-Prerequisite-Workspaces"><a href="#2、Locate-Prerequisite-Workspaces" class="headerlink" title="2、Locate Prerequisite Workspaces"></a>2、Locate Prerequisite Workspaces</h4><p><img src="http://image.camcad.cn/2024/03/12.png" alt="12"></p><h4 id="3、添加CATIA安装目录"><a href="#3、添加CATIA安装目录" class="headerlink" title="3、添加CATIA安装目录"></a>3、添加CATIA安装目录</h4><p><img src="http://image.camcad.cn/2024/03/13.png" alt="13"></p><p><img src="http://image.camcad.cn/2024/03/14.png" alt="14"></p><h5 id="3-1-加载成功"><a href="#3-1-加载成功" class="headerlink" title="3.1 加载成功"></a>3.1 加载成功</h5><p><img src="http://image.camcad.cn/2024/03/16.png" alt="16"></p><h5 id="3-2-加载失败"><a href="#3-2-加载失败" class="headerlink" title="3.2 加载失败"></a>3.2 <code>加载失败</code></h5><p><img src="http://image.camcad.cn/2024/03/17.png" alt="17"></p><h3 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h3><p><img src="http://image.camcad.cn/2024/03/09.png" alt="09"></p><h4 id="1、Insert-Component"><a href="#1、Insert-Component" class="headerlink" title="1、Insert Component"></a>1、Insert Component</h4><p><img src="http://image.camcad.cn/2024/03/10.png" alt="10"><br><img src="http://image.camcad.cn/2024/03/11.png" alt="11"></p><h4 id="2、Interface-to-implement"><a href="#2、Interface-to-implement" class="headerlink" title="2、Interface to implement"></a>2、Interface to implement</h4><p><img src="http://image.camcad.cn/2024/03/18.png" alt="18"><br><img src="http://image.camcad.cn/2024/03/19.png" alt="19"><br><img src="http://image.camcad.cn/2024/03/20.png" alt="20"></p><h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><p><img src="http://image.camcad.cn/2024/03/26.png" alt="26"><br><img src="http://image.camcad.cn/2024/03/27.png" alt="27"><br><img src="http://image.camcad.cn/2024/03/28.png" alt="28"></p><h3 id="按钮位图资源文件存储"><a href="#按钮位图资源文件存储" class="headerlink" title="按钮位图资源文件存储"></a>按钮位图资源文件存储</h3><p>在<code>...\CNext\resources\graphic\icons\normal\</code>目录下创建<code>CAAHHello.bmp</code>资源文件。<br>创建<code>...\CNext\resources\msgcatalog\CAAHHello.CATRsc</code>文件，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CAAHHello.CAACmd.Icon.Normal=&quot;CAAHHello.bmp&quot;;</span><br></pre></td></tr></table></figure><h3 id="按钮相关帮助文件"><a href="#按钮相关帮助文件" class="headerlink" title="按钮相关帮助文件"></a>按钮相关帮助文件</h3><p>创建<code>...\CNext\resources\msgcatalog\CAAHHello.CATNls</code>文件，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CAAHHello.CAACmd.Title = &quot;EMMET命令&quot;;</span><br><span class="line">CAAHHello.CAACmd.Help = &quot;EMMET提示文字&quot;;</span><br><span class="line">CAAHHello.CAACmd.ShortHelp = &quot;EMMET冒泡信息&quot;;</span><br></pre></td></tr></table></figure><h3 id="按钮标题"><a href="#按钮标题" class="headerlink" title="按钮标题"></a>按钮标题</h3><p>创建<code>...\CNext\resources\msgcatalog\CAACHello.CATNls</code>文件，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BtToolbar.Title = &quot;EMMET工具名称&quot;;</span><br></pre></td></tr></table></figure><h3 id="按钮激活提示信息"><a href="#按钮激活提示信息" class="headerlink" title="按钮激活提示信息"></a>按钮激活提示信息</h3><p>创建<code>...\CNext\resources\msgcatalog\CAARCHello.CATNls</code>文件，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CAARCHello.initialState.Message = &quot;按钮激活后的状态提示&quot;;</span><br></pre></td></tr></table></figure><h3 id="mkmk编译"><a href="#mkmk编译" class="headerlink" title="mkmk编译"></a>mkmk编译</h3><h4 id="1、mkmk编译设置"><a href="#1、mkmk编译设置" class="headerlink" title="1、mkmk编译设置"></a>1、mkmk编译设置</h4><p><img src="http://image.camcad.cn/2024/03/21.png" alt="21"><br><img src="http://image.camcad.cn/2024/03/22.png" alt="22"></p><h4 id="2、编译存在错误"><a href="#2、编译存在错误" class="headerlink" title="2、编译存在错误"></a>2、编译存在错误</h4><p><img src="http://image.camcad.cn/2024/03/23.png" alt="23"></p><h4 id="3、添加接口"><a href="#3、添加接口" class="headerlink" title="3、添加接口"></a>3、添加接口</h4><h5 id="IdentityCard-IdentityCard-h"><a href="#IdentityCard-IdentityCard-h" class="headerlink" title="...\IdentityCard\IdentityCard.h"></a><code>...\IdentityCard\IdentityCard.h</code></h5><figure class="highlight c++"><figcaption><span>IdentityCard.h</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"><span class="built_in">AddPrereqComponent</span>(<span class="string">&quot;ApplicationFrame&quot;</span>,Protected);</span><br><span class="line"><span class="built_in">AddPrereqComponent</span>(<span class="string">&quot;DialogEngine&quot;</span>,Public);</span><br><span class="line"><span class="built_in">AddPrereqComponent</span>(<span class="string">&quot;Mathematics&quot;</span>,Public);</span><br><span class="line"><span class="built_in">AddPrereqComponent</span>(<span class="string">&quot;Dialog&quot;</span>,Public);</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2024/03/24.png" alt="24"></p><h4 id="4、添加模块"><a href="#4、添加模块" class="headerlink" title="4、添加模块"></a>4、添加模块</h4><h5 id="CAAMHello-m-Imakefile-mk"><a href="#CAAMHello-m-Imakefile-mk" class="headerlink" title="...\CAAMHello.m\Imakefile.mk"></a><code>...\CAAMHello.m\Imakefile.mk</code></h5><figure class="highlight c++"><figcaption><span>Imakefile.mk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line">LINK_WITH = $(WIZARD_LINK_MODULES) CATApplicationFrame \</span><br><span class="line">CATDialogEngine CATMathematics DI0PANV2</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2024/03/25.png" alt="25"></p><h5 id="在-CAAMHello-m-LocalInterfaces-CAACHello-h文件中，添加内容如下："><a href="#在-CAAMHello-m-LocalInterfaces-CAACHello-h文件中，添加内容如下：" class="headerlink" title="在...\CAAMHello.m\LocalInterfaces\CAACHello.h文件中，添加内容如下："></a>在<code>...\CAAMHello.m\LocalInterfaces\CAACHello.h</code>文件中，添加内容如下：</h5><figure class="highlight c++"><figcaption><span>CAACHello.h</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;CATCmdContainer.h&gt;</span><span class="comment">// “CATCmdContainer * CreateToolbars()” 函数返回指针，所需头文件</span></span></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CAACHello</span>: <span class="keyword">public</span> CATBaseUnknown</span><br><span class="line">&#123;</span><br><span class="line">......</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreateCommands</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">CATCmdContainer * <span class="title">CreateToolbars</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="在-CAAMHello-m-src-CAACHello-cpp文件中，添加内容如下："><a href="#在-CAAMHello-m-src-CAACHello-cpp文件中，添加内容如下：" class="headerlink" title="在...\CAAMHello.m\src\CAACHello.cpp文件中，添加内容如下："></a>在<code>...\CAAMHello.m\src\CAACHello.cpp</code>文件中，添加内容如下：</h5><p>注意“MacDeclareHeader(CAAHHello);”中<code>CAAHHello</code>名称自行定义，但需要<code>保持一致</code>。</p><figure class="highlight c++"><figcaption><span>CAACHello.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;CATIPRDWorkshopAddin.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;CATCommandHeader.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;CATCmdContainer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;CATCreateWorkshop.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;CATStateCommand.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;CATMathPlane.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">MacDeclareHeader</span>(CAAHHello);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">CATImplementClass</span>(CAACHello,</span><br><span class="line">                  Implementation,</span><br><span class="line">                  CATBaseUnknown,</span><br><span class="line">                  CATnull );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAACHello::CreateCommands</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 新建按钮</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">CAAHHello</span></span><br><span class="line">(<span class="string">&quot;CAACmd&quot;</span>,</span><br><span class="line"><span class="string">&quot;CAACHello&quot;</span>,</span><br><span class="line"><span class="string">&quot;CAARCHello&quot;</span>,</span><br><span class="line">(<span class="type">void</span>*)<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">CATCmdContainer * <span class="title">CAACHello::CreateToolbars</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">NewAccess</span>(CATCmdContainer,pToolbarContainer,BtToolbar);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NewAccess</span>(CATCmdStarter,pCommandStarter,CATnull);</span><br><span class="line"></span><br><span class="line"><span class="built_in">SetAccessCommand</span>(pCommandStarter,<span class="string">&quot;CAACmd&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">SetAccessChild</span>(pToolbarContainer,pCommandStarter);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> nVisibleFlag = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">AddToolbarView</span>(pToolbarContainer,nVisibleFlag,Top);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> pToolbarContainer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5、添加提示对话框"><a href="#5、添加提示对话框" class="headerlink" title="5、添加提示对话框"></a>5、添加提示对话框</h4><p>在<code>...\CAAMHello.m\src\CAARCHello.cpp</code>文件，添加如下代码：</p><figure class="highlight c++"><figcaption><span>CAARCHello.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;CATApplicationFrame.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;CATDlgNotify.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAARCHello::BuildGraph</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span> Define the StateChart</span></span><br><span class="line">  <span class="comment">// ---------------------------</span></span><br><span class="line">  _Indication = <span class="keyword">new</span> <span class="built_in">CATIndicationAgent</span> (<span class="string">&quot;Indication&quot;</span>);</span><br><span class="line">  CATMathPlane PlaneXY;</span><br><span class="line">  _Indication -&gt; <span class="built_in">SetMathPlane</span> (PlaneXY);</span><br><span class="line">  CATDialogState * initialState = <span class="built_in">GetInitialState</span>(<span class="string">&quot;initialState&quot;</span>);</span><br><span class="line">  initialState -&gt; <span class="built_in">AddDialogAgent</span> (_Indication);</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">AddTransition</span>( initialState, <span class="literal">NULL</span>, </span><br><span class="line">                 <span class="built_in">IsOutputSetCondition</span> (_Indication),</span><br><span class="line">                 <span class="built_in">Action</span> ((ActionMethod) &amp;CAARCHello::ActionOne));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 添加提示对话框</span></span><br><span class="line">  CATApplicationFrame *pApplication = CATApplicationFrame::<span class="built_in">GetFrame</span>();</span><br><span class="line">  <span class="keyword">if</span>(pApplication != <span class="literal">NULL</span>)&#123;</span><br><span class="line">CATDlgWindow *pMainWindow = pApplication-&gt;<span class="built_in">GetMainWindow</span>();</span><br><span class="line">CATDlgNotify *pNotifyDlg = <span class="keyword">new</span> <span class="built_in">CATDlgNotify</span>(pMainWindow,<span class="string">&quot;BtCommandDlg&quot;</span>,CATDlgNfyOK);</span><br><span class="line"><span class="keyword">if</span>(pNotifyDlg != <span class="literal">NULL</span>)&#123;</span><br><span class="line">pNotifyDlg-&gt;<span class="built_in">DisplayBlocked</span>(<span class="string">&quot;Hello World!&quot;</span>,<span class="string">&quot;EMMET 对话框名称&quot;</span>);</span><br><span class="line">pNotifyDlg-&gt;<span class="built_in">RequestDelayedDestruction</span>();</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">RequestDelayedDestruction</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编译工程"><a href="#编译工程" class="headerlink" title="编译工程"></a>编译工程</h3><p><img src="http://image.camcad.cn/2024/03/31.png" alt="31"></p><h3 id="Create-x2F-Update-Runtime-View"><a href="#Create-x2F-Update-Runtime-View" class="headerlink" title="Create&#x2F;Update Runtime View"></a>Create&#x2F;Update Runtime View</h3><p><img src="http://image.camcad.cn/2024/03/32.png" alt="32"><br><img src="http://image.camcad.cn/2024/03/33.png" alt="33"></p><h3 id="CAA控制台窗口的输出变量设置"><a href="#CAA控制台窗口的输出变量设置" class="headerlink" title="CAA控制台窗口的输出变量设置"></a>CAA控制台窗口的输出变量设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SET CNEXTOUTPUT = CONSOLE</span><br><span class="line"></span><br><span class="line">变量名称：CNEXTOUTPUT，值：CONSOLE</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2024/03/29.png" alt="29"><br><img src="http://image.camcad.cn/2024/03/30.png" alt="30"></p><h3 id="调动CATIA"><a href="#调动CATIA" class="headerlink" title="调动CATIA"></a>调动CATIA</h3><p><img src="http://image.camcad.cn/2024/03/34.png" alt="34"><br><img src="http://image.camcad.cn/2024/03/35.png" alt="35"></p><h3 id="工具条加载效果"><a href="#工具条加载效果" class="headerlink" title="工具条加载效果"></a>工具条加载效果</h3><p><img src="http://image.camcad.cn/2024/03/36.png" alt="36"><br><img src="http://image.camcad.cn/2024/03/37.png" alt="37"></p><h3 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h3><p><img src="http://image.camcad.cn/2024/03/38.png" alt="38"></p><h4 id="运行效果（无对话框）"><a href="#运行效果（无对话框）" class="headerlink" title="运行效果（无对话框）"></a>运行效果（无对话框）</h4><p><img src="http://image.camcad.cn/2024/03/39.png" alt="39"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一个CAA开发流程&quot;&gt;&lt;a href=&quot;#一个CAA开发流程&quot; class=&quot;headerlink&quot; title=&quot;一个CAA开发流程&quot;&gt;&lt;/a&gt;一个CAA开发流程&lt;/h3&gt;&lt;h4 id=&quot;新建菜单和工具条&quot;&gt;&lt;a href=&quot;#新建菜单和工具条&quot; class=&quot;headerlink&quot; title=&quot;新建菜单和工具条&quot;&gt;&lt;/a&gt;新建菜单和工具条&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;新建Workspace，创建Framework&lt;/li&gt;
&lt;li&gt;为addin添加Module&lt;/li&gt;
&lt;li&gt;添加Component&lt;/li&gt;
&lt;li&gt;添加菜单和工具条代码&lt;/li&gt;
&lt;li&gt;定义菜单工具条图标名称资源&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;创建响应命令和对话框&quot;&gt;&lt;a href=&quot;#创建响应命令和对话框&quot; class=&quot;headerlink&quot; title=&quot;创建响应命令和对话框&quot;&gt;&lt;/a&gt;创建响应命令和对话框&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;添加新的Module&lt;/li&gt;
&lt;li&gt;添加命令Command&lt;/li&gt;
&lt;li&gt;新建对话框Dialog&lt;/li&gt;
&lt;li&gt;对话框按钮响应&lt;/li&gt;
&lt;li&gt;添加功能函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;程序调试流程&quot;&gt;&lt;a href=&quot;#程序调试流程&quot; class=&quot;headerlink&quot; title=&quot;程序调试流程&quot;&gt;&lt;/a&gt;程序调试流程&lt;/h4&gt;&lt;h4 id=&quot;复制工作空间&quot;&gt;&lt;a href=&quot;#复制工作空间&quot; class=&quot;headerlink&quot; title=&quot;复制工作空间&quot;&gt;&lt;/a&gt;复制工作空间&lt;/h4&gt;</summary>
    
    
    
    <category term="CATIA" scheme="https://notes.camcad.cn/categories/CATIA/"/>
    
    
    <category term="CATIA二次开发" scheme="https://notes.camcad.cn/tags/CATIA%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>socket编程</title>
    <link href="https://notes.camcad.cn/post/79a3d743.html"/>
    <id>https://notes.camcad.cn/post/79a3d743.html</id>
    <published>2023-12-10T21:36:12.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><strong>socket</strong>—插口代表一条通信链路的一端，存储或指向与链路有关的所有信息。这些信息包括：使用的协议、协议的状态信息(包括源和目的地址)、到达的连接队列、数据缓存和可选标志。</p><span id="more"></span><table>    <tr>        <th>类别</th>        <th>名称</th>        <th>功能</th>      </tr >    <tr >        <td align="center" colspan="3">Net/3中的网络系统调用</td>    </tr>    <tr >        <td rowspan="2">建立</td>        <td>socket</td>        <td>在指明的通信域内产生一个未命名的插口</td>    </tr>    <tr>        <td>bind</td>        <td>分配一个本地地址给插口</td>    </tr>    <tr>        <td rowspan="2">服务器</td>        <td>listen</td>        <td>使插口准备接收连接请求</td>    </tr>    <tr>        <td>accept</td>        <td>等待并接受连接</td>    </tr>    <tr>      <td>客户</td>      <td>connect</td>        <td>同外部插口建立连接</td>    </tr>    <tr>        <td rowspan="5">输入</td>        <td>read</td>        <td>接收数据到一个缓存中</td>    </tr>    <tr>        <td>readv</td>        <td>接收数据到多个缓存中</td>    </tr>    <tr>        <td>recv</td>        <td>指明选项接收数据</td>    </tr>    <tr>        <td>recvfrom</td>        <td>接收数据和发送者的地址</td>    </tr>    <tr>        <td >recvmsg</td>        <td>接收数据到多个缓存中，接收控制信息和发送者地址；指明接收选项</td>    </tr>    <tr>        <td rowspan="5">输出</td>        <td >write</td>        <td >发送一个缓存中的数据</td>    </tr>    <tr>        <td >writev</td>        <td >发送多个缓存中的数据</td>    </tr>    <tr>        <td >send</td>        <td >指明选项发送数据</td>    </tr>    <tr>        <td >sendto</td>        <td >发送数据到指明的地址</td>    </tr>    <tr>        <td >sendmsg</td>        <td >从多个缓存发送数据和控制信息到指明的地址；指明发送选项</td>    </tr>    <tr>        <td >I/O</td>        <td >select</td>        <td >等待I/O事件</td>    </tr>    <tr>        <td rowspan="2">终止</td>        <td >shutdown</td>        <td >终止一个或两个方向上的连接</td>    </tr>    <tr>        <td >close</td>        <td >终止连接并释放插口</td>    </tr>    <tr>        <td rowspan="6">管理</td>        <td >fcntl</td>        <td >修改I/O语义</td>    </tr>    <tr>        <td >ioctl</td>        <td >各类插口操作</td>    </tr>    <tr>        <td >setsockopt</td>        <td >设置插口或协议选项</td>    </tr>    <tr>        <td >getsockopt</td>        <td >得到插口或协议选项</td>    </tr>    <tr>        <td >getsockname</td>        <td >得到分配给插口的本地地址</td>    </tr>    <tr>        <td >getpeername</td>        <td >得到分配给插口的远端地址</td>    <tr >        <td align="center" colspan="3">蚂蚁Emmet</td>    </tr></table><h3 id="网络系统调用流程图"><a href="#网络系统调用流程图" class="headerlink" title="网络系统调用流程图"></a>网络系统调用流程图</h3><p><img src="http://image.camcad.cn/2023/12/%E7%BD%91%E7%BB%9C%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" alt="网络系统调用流程图"></p><h2 id="socket系统原型"><a href="#socket系统原型" class="headerlink" title="socket系统原型"></a>socket系统原型</h2><h4 id="Linux-Ubuntu"><a href="#Linux-Ubuntu" class="headerlink" title="Linux Ubuntu"></a>Linux Ubuntu</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span>    <span class="comment">/* See NOTES */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">socket</span><span class="params">(<span class="type">int</span> domain, <span class="type">int</span> type, <span class="type">int</span> protocol)</span>;</span><br></pre></td></tr></table></figure><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">SOCKET WSAAPI <span class="title function_">socket</span><span class="params">([in] <span class="type">int</span> af,[in] <span class="type">int</span> type,[in] <span class="type">int</span> protocol)</span>;</span><br></pre></td></tr></table></figure><h4 id="domain-x2F-af-常用互联网协议"><a href="#domain-x2F-af-常用互联网协议" class="headerlink" title="[domain&#x2F;af]常用互联网协议"></a>[domain&#x2F;af]常用互联网协议</h4><p>Internet地址协议族格式。</p><table><thead><tr><th align="center">参数</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">AF_INET</td><td align="center">IPv4 Internet protocols</td><td align="center">IPv4互联网协议</td></tr><tr><td align="center">AF_INET6</td><td align="center">IPv6 Internet protocols</td><td align="center">IPv6互联网协议</td></tr></tbody></table><h4 id="type-常用参数"><a href="#type-常用参数" class="headerlink" title="[type]常用参数"></a>[type]常用参数</h4><p>套接字具有指定的类型，该类型指定通信语义。</p><table><thead><tr><th align="center">参数</th><th align="left">作用</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">SOCK_STREAM</td><td align="left">Provides sequenced, reliable, two-way, connection-based byte  streams. An out-of-band data transmission mechanism may be supported.</td><td align="left">提供有序、可靠、双向、基于连接的字节流。可以支持带外数据传输机制。此套接字类型将传输控制协议（TCP）用于Internet地址系列（AF_INET或AF_INET6）。</td></tr><tr><td align="center">SOCK_DGRAM</td><td align="left">A socket type that supports datagrams, which are connectionless, unreliable buffers of a fixed (typically small) maximum length. This socket type uses the User Datagram Protocol (UDP) for the Internet address family (AF_INET or AF_INET6).</td><td align="left">支持数据报的套接字类型，数据报是无连接、不可靠的最大长度固定(通常很小)的缓冲区。此套接字类型将用户数据报协议(UDP)用于Internet地址系列(AF_INET或AF_INET6)。</td></tr></tbody></table><h4 id="protocol-参数"><a href="#protocol-参数" class="headerlink" title="[protocol]参数"></a>[protocol]参数</h4><p>要使用的协议。协议参数的可能选项特定于指定的地址族和套接字类型。</p><h5 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h5><p>用于制定某个协议的特定类型，即type类型中的某个类型。通常某协议中只有一种特定类型，这样protocol参数仅能设置为0；但是有些协议有多种特定的类型，就需要设置这个参数来选择特定的类型。</p><blockquote><p>1、类型为SOCK_STREAM的套接字表示一个双向的字节流，与管道类似。流式的套接字在进行数据收发之前必须已经连接，连接使用<code>connect()</code>函数进行。一旦连接，可以使用read()或者write()函数进行数据的传输。流式通信方式保证数据不会丢失或者重复接收，当数据在一段时间内任然没有接受完毕，可以认为这个连接已经死掉。<br>2、SOCK_DGRAM和SOCK_RAW 这个两种套接字可以使用函数<code>sendto()</code>来发送数据，使用recvfrom()函数接受数据，recvfrom()接受来自制定IP地址的发送方的数据。<br>3、SOCK_PACKET是一种专用的数据包，它直接从设备驱动接受数据。</p></blockquote><h5 id="windows-1"><a href="#windows-1" class="headerlink" title="windows"></a>windows</h5><table><thead><tr><th align="center">参数</th><th align="left">作用</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">IPPROTO_TCP</td><td align="left">The Transmission Control Protocol (TCP). This is a possible value when the af parameter is AF_INET or AF_INET6 and the type parameter is SOCK_STREAM.</td><td align="left">传输控制协议（TCP）。当af参数为<code>AF_INET</code>或<code>AF_INET6</code>并且类型参数为<code>SOCK_STREAM</code>时，这是一个可能的值。</td></tr><tr><td align="center">IPPROTO_UDP</td><td align="left">The User Datagram Protocol (UDP). This is a possible value when the af parameter is AF_INET or AF_INET6 and the type parameter is SOCK_DGRAM.</td><td align="left">用户数据报协议（UDP）。当af参数是<code>AF_INET</code>或<code>AF_INET6</code>并且类型参数是<code>SOCK_DGRAM</code>时，这是一个可能的值。</td></tr></tbody></table><h4 id="return-value（返回值）"><a href="#return-value（返回值）" class="headerlink" title="return value（返回值）"></a>return value（返回值）</h4><table><thead><tr><th align="center">系统</th><th align="left">作用</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">linux ubuntu</td><td align="left">On success, a file descriptor for the new socket is returned.  On error, -1 is returned, and errno is set appropriately.</td><td align="left">成功后，将返回新套接字的文件描述符。出现错误时，返回-1，并且errno被适当地设置(查看帮助)</td></tr><tr><td align="center">windows</td><td align="left">If no error occurs, socket returns a descriptor referencing the new socket. Otherwise, a value of INVALID_SOCKET is returned, and a specific error code can be retrieved by calling WSAGetLastError.</td><td align="left">如果没有出现错误，socket将返回一个引用新套接字的描述符。否则，将返回INVALID_SOCKET的值，并且可以通过调用WSAGetLastError来检索特定的错误代码。</td></tr></tbody></table><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p>[第15章 插口层 355页]TCPIP详解 卷2：实现（原书第2版） by Kevin R. Fall W. Richard Stevens<br><a href="http://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-socket">windows-socket</a><br>[man 2 socket] linux ubuntu 函数帮助文档</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;socket&lt;/strong&gt;—插口代表一条通信链路的一端，存储或指向与链路有关的所有信息。这些信息包括：使用的协议、协议的状态信息(包括源和目的地址)、到达的连接队列、数据缓存和可选标志。&lt;/p&gt;</summary>
    
    
    
    <category term="网络编程" scheme="https://notes.camcad.cn/categories/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="socket" scheme="https://notes.camcad.cn/tags/socket/"/>
    
    <category term="网络编程" scheme="https://notes.camcad.cn/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++API设计（API Design for C++）</title>
    <link href="https://notes.camcad.cn/post/9d7d8543.html"/>
    <id>https://notes.camcad.cn/post/9d7d8543.html</id>
    <published>2023-12-09T16:19:02.000Z</published>
    <updated>2024-04-20T07:43:29.659Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h2><h3 id="Pimpl（pointer-to-implementation-x3D-指向实现的指针）惯用法"><a href="#Pimpl（pointer-to-implementation-x3D-指向实现的指针）惯用法" class="headerlink" title="Pimpl（pointer to implementation &#x3D; 指向实现的指针）惯用法"></a>Pimpl（pointer to implementation &#x3D; 指向实现的指针）惯用法</h3><p>Pimpl（pointer to implementation &#x3D; 指向实现的指针）惯用法，该技巧支持在公有接口中完全隐藏内部细节。从本质上讲，它支持将私有的成员数据和方法转移到<code>.cpp</code>文件中。因此，Pimpl惯用法是构建接口和实现恰当分离的API的不可或缺的技巧。</p><span id="more"></span><figure class="highlight c++"><figcaption><span>autotimer.h</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// -*- tab-width: 4; c-basic-offset: 4; indent-tabs-mode: t -*-</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// \file   autotimer.h</span></span><br><span class="line"><span class="comment">/// \author Martin Reddy</span></span><br><span class="line"><span class="comment">/// \brief  An example of Pimpl with a smart pointer.</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// Copyright (c) 2010, Martin Reddy. All rights reserved.</span></span><br><span class="line"><span class="comment">/// Distributed under the X11/MIT License. See LICENSE.txt.</span></span><br><span class="line"><span class="comment">/// See http://APIBook.com/ for the latest version.</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> AUTOTIMER_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AUTOTIMER_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> apibook &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// An object that reports how long it was alive for when it</span></span><br><span class="line"><span class="comment">/// is destroyed.</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AutoTimer</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/// Create a new timer object with a human-readable name</span></span><br><span class="line"><span class="function"><span class="keyword">explicit</span> <span class="title">AutoTimer</span><span class="params">(<span class="type">const</span> std::string &amp;name)</span></span>;</span><br><span class="line"><span class="comment">/// On destruction, the timer reports how long it was alive</span></span><br><span class="line">~<span class="built_in">AutoTimer</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Impl</span>;</span><br><span class="line">std::shared_ptr&lt;Impl&gt; mImpl;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><figcaption><span>autotimer.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// -*- tab-width: 4; c-basic-offset: 4; indent-tabs-mode: t -*-</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// \file   autotimer.cpp</span></span><br><span class="line"><span class="comment">/// \author Martin Reddy</span></span><br><span class="line"><span class="comment">/// \brief  An example of Pimpl with a smart pointer.</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// Copyright (c) 2010, Martin Reddy. All rights reserved.</span></span><br><span class="line"><span class="comment">/// Distributed under the X11/MIT License. See LICENSE.txt.</span></span><br><span class="line"><span class="comment">/// See http://APIBook.com/ for the latest version.</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;autotimer.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _WIN32</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> apibook &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AutoTimer</span>::Impl</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">/// Return how long the object has been alive</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">GetElapsed</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _WIN32</span></span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">GetTickCount</span>() - mStartTime) / <span class="number">1e3</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">timeval</span> end_time;</span><br><span class="line"><span class="built_in">gettimeofday</span>(&amp;end_time, <span class="literal">NULL</span>);</span><br><span class="line"><span class="type">double</span> t1 = mStartTime.tv_usec / <span class="number">1e6</span> + mStartTime.tv_sec;</span><br><span class="line"><span class="type">double</span> t2 = end_time.tv_usec / <span class="number">1e6</span> + end_time.tv_sec;</span><br><span class="line"><span class="keyword">return</span> t2 - t1;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">std::string mName;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _WIN32</span></span><br><span class="line">DWORD mStartTime;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">timeval</span> mStartTime;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">AutoTimer::<span class="built_in">AutoTimer</span>(<span class="type">const</span> std::string &amp;name) :</span><br><span class="line"><span class="built_in">mImpl</span>(<span class="keyword">new</span> AutoTimer::<span class="built_in">Impl</span>())</span><br><span class="line">&#123;</span><br><span class="line">mImpl-&gt;mName = name;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _WIN32</span></span><br><span class="line">mImpl-&gt;mStartTime = <span class="built_in">GetTickCount</span>();</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="built_in">gettimeofday</span>(&amp;mImpl-&gt;mStartTime, <span class="literal">NULL</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">AutoTimer::~<span class="built_in">AutoTimer</span>()</span><br><span class="line">&#123;</span><br><span class="line">std::cout &lt;&lt; mImpl-&gt;mName &lt;&lt; <span class="string">&quot;: took &quot;</span> &lt;&lt; mImpl-&gt;<span class="built_in">GetElapsed</span>()</span><br><span class="line">  &lt;&lt; <span class="string">&quot; secs&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><figcaption><span>main.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// -*- tab-width: 4; c-basic-offset: 4; indent-tabs-mode: t -*-</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// \file   main.cpp</span></span><br><span class="line"><span class="comment">/// \author Martin Reddy</span></span><br><span class="line"><span class="comment">/// \brief  An example of Pimpl with a smart pointer.</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// Copyright (c) 2010, Martin Reddy. All rights reserved.</span></span><br><span class="line"><span class="comment">/// Distributed under the X11/MIT License. See LICENSE.txt.</span></span><br><span class="line"><span class="comment">/// See http://APIBook.com/ for the latest version.</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;autotimer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> std::cout;</span><br><span class="line"><span class="keyword">using</span> std::endl;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span>, <span class="type">char</span> **)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">apibook::AutoTimer <span class="title">timer</span><span class="params">(<span class="string">&quot;MyTimer&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;.&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ol><li><strong>信息隐藏</strong>—私有成员现在可以完全隐藏在公有接口之外，使得实现细节得以隐藏（同时保护了闭源API的专有性)。信息隐藏也意味着公有头文件能够更加干净、更加清晰地表达真正的公有接口，因此也更易于用户阅读和理解。信息隐藏带来的另一个好处是，用户不能轻易使用“脏”手段访问私有成员。</li><li><strong>降低耦合</strong>—不用Pimpl，公有头文件就必须包含所有私有成员变量所需的头文件，这就增加了API与其他部分在编译时的耦合度。使用Pimpl可以将那些依赖项转移到.cpp文件中，并移除耦合的元素。</li><li><strong>加速编译</strong>—将与实现相关的头文件移入.cpp文件带来的另一个隐含结果是API的引用层次得以降低，这将直接影响编译时间。</li><li><strong>更好的二进制兼容性</strong>—采用Pimpl的对象大小从不改变，因为对象总是单个指针的大小。对私有成员变量做任何修改都只影响隐藏在.cpp文件内部的实现类的大小。如果对实现做出重大改变时，对象的<code>二进制</code>表示可以不变。</li></ol><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ol><li>Pimpl惯用法最主要的缺点是，必须为你创建的每个对象<code>分配并释放</code>实现对象。这使对象增加了一个指针，同时因为必须通过指针间接访问所有成员变量，这种额外的调用层次与新增的<code>new和delete</code>开销类似，可能引入性能冲击。</li><li>编译器将不再能够捕获<code>const</code>方法中对成员变量的修改。这是由于成员变量现在存在于独立的对象中。编译器仅检查<code>const</code>方法中的<code>mImp1</code>指针值是否发生变化，而不检查<code>mImp1</code>指向的任何成员。事实上，采用Pimpl的类中的每个成员函数都可以定义为<code>const</code>的。(除了构造函数和析构函数。)下面的const方法改变了Imp1对象中的变量，这证明了上述说法。<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">PimpledObject::ConstMethod</span><span class="params">()</span> <span class="type">const</span></span>&#123;</span><br><span class="line">    mImp1-&gt;mName = <span class="string">&quot;const方法更改的字符串&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ol><li>C++ API设计( API Design for C++) ([美]Martin Reddy 刘晓娜，臧秀涛，林健)[第3章 模式-pimpl惯用法，55页]</li><li><a href="http://apibook.com/">http://apibook.com</a></li></ol><h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><h3 id="类设计选项"><a href="#类设计选项" class="headerlink" title="类设计选项"></a>类设计选项</h3><ol><li><strong>const的使用</strong>—尽可能将参数、返回值和方法定义为const。</li><li><strong>exp1icit的使用</strong>—对于单参数构造函数使用<code>explicit</code>关键字以避免意外的类型转换。</li></ol><figure class="highlight c++"><figcaption><span>定义</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="built_in">A</span>();<span class="comment">// default构造函数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">explicit</span> <span class="title">B</span><span class="params">(<span class="type">int</span> x = <span class="number">0</span>,<span class="type">bool</span> b = <span class="literal">true</span>)</span></span>;<span class="comment">//explicit和default构造函数;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doSomething</span><span class="params">(B bObject)</span></span>;<span class="comment">// 接受一个类型为B的对象</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><figcaption><span>正确示例</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">B bObj1;<span class="comment">// 一个类型为B的对象</span></span><br><span class="line"><span class="built_in">doSomething</span>(bObj1);<span class="comment">// 没问题，传递一个B对象给doSomething函数</span></span><br><span class="line"><span class="function">B <span class="title">bObj2</span><span class="params">(<span class="number">26</span>)</span></span>;<span class="comment">// 没问题，根据int（26）建立一个B对象（函数的bool参数缺省值为true）</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><figcaption><span>错误示例</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">doSomething</span>(<span class="number">26</span>);<span class="comment">//explicit：错误，doSomething应该接受一个B对象，不是一个int，而int至B对象之间，并没有隐式转换</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">doSomething</span>(<span class="built_in">B</span>(<span class="number">26</span>));<span class="comment">// 没有问题，使用B构造函数将int显式转换（也就是转型，cast）为一个B对象以促成此一调用</span></span><br></pre></td></tr></table></figure><h4 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h4><ol><li>C++ API设计( API Design for C++) ([美]Martin Reddy 刘晓娜，臧秀涛，林健)[第4章 设计-类的设计，113页]</li><li>Effective C++ 改善程序与设计的55个具体做法 第3版 ([美] Scott Meyers  侯捷 译)[1.让自己习惯C++ -条例03：尽可能使用const，13页]</li><li><a href="http://apibook.com/">http://apibook.com</a></li></ol><h3 id="为多态基类声明virtual析构函数"><a href="#为多态基类声明virtual析构函数" class="headerlink" title="为多态基类声明virtual析构函数"></a>为多态基类声明virtual析构函数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TimeKeeper</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="built_in">TimeKeeper</span>()&#123;&#125;</span><br><span class="line">  <span class="keyword">virtual</span> ~<span class="built_in">TimeKeeper</span>()&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AtomicClock</span>: <span class="keyword">public</span> TimeKeeper&#123;...&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WaterClock</span>: <span class="keyword">public</span> TimeKeeper&#123;...&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WristWatch</span>: <span class="keyword">public</span> TimeKeeper&#123;...&#125;;</span><br></pre></td></tr></table></figure><p><strong>避免资源泄漏：</strong>polymorphic（带多态性质的）base classes应该声明一个virtual析构函数。如果class带有任何virtual函数，它就应该拥有一个virtual析构函数。<br><strong>非基类不声明virtual：</strong>Classes的设计目的如果不是作为base classes使用，或不是为了具备多态性(polymorphically），就不该声明virtual析构函数。<code>不然会导致对象的体积增加和不再具有移植性</code>。</p><h4 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h4><ol><li>Effective C++ 改善程序与设计的55个具体做法 第3版 ([美] Scott Meyers  侯捷 译)[2.构造 &#x2F; 析构 &#x2F; 赋值运算-条例07：为多态基类声明virtual析构函数，40页]</li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;模式&quot;&gt;&lt;a href=&quot;#模式&quot; class=&quot;headerlink&quot; title=&quot;模式&quot;&gt;&lt;/a&gt;模式&lt;/h2&gt;&lt;h3 id=&quot;Pimpl（pointer-to-implementation-x3D-指向实现的指针）惯用法&quot;&gt;&lt;a href=&quot;#Pimpl（pointer-to-implementation-x3D-指向实现的指针）惯用法&quot; class=&quot;headerlink&quot; title=&quot;Pimpl（pointer to implementation &amp;#x3D; 指向实现的指针）惯用法&quot;&gt;&lt;/a&gt;Pimpl（pointer to implementation &amp;#x3D; 指向实现的指针）惯用法&lt;/h3&gt;&lt;p&gt;Pimpl（pointer to implementation &amp;#x3D; 指向实现的指针）惯用法，该技巧支持在公有接口中完全隐藏内部细节。从本质上讲，它支持将私有的成员数据和方法转移到&lt;code&gt;.cpp&lt;/code&gt;文件中。因此，Pimpl惯用法是构建接口和实现恰当分离的API的不可或缺的技巧。&lt;/p&gt;</summary>
    
    
    
    <category term="C++" scheme="https://notes.camcad.cn/categories/C/"/>
    
    
    <category term="C++" scheme="https://notes.camcad.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>SQL基础教程</title>
    <link href="https://notes.camcad.cn/post/cf0550f2.html"/>
    <id>https://notes.camcad.cn/post/cf0550f2.html</id>
    <published>2023-11-23T11:22:45.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SQL概要"><a href="#SQL概要" class="headerlink" title="SQL概要"></a>SQL概要</h2><ul><li>SQL是为操作数据库而开发的语言</li><li>虽然SQL也有标准，但实际上根据RDBMS的不同SQL也不尽相同</li><li>SQL通过一条语句来描述想要进行的操作，发送给RDBMS</li><li>原则上SQL语句都会分号结尾</li><li>SQL根据操作目的可以分为DDL、DML和DCL（一般为DML）<span id="more"></span></li></ul><h2 id="排序检索数据"><a href="#排序检索数据" class="headerlink" title="排序检索数据"></a>排序检索数据</h2><h3 id="检索所有列"><a href="#检索所有列" class="headerlink" title="检索所有列"></a>检索所有列</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输入</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> CAMCAD_USERS;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line"><span class="keyword">No</span> <span class="operator">|</span>Host_Name      <span class="operator">|</span>User_Name      <span class="operator">|</span>CPU_Vendor  <span class="operator">|</span>CPU_Brand                                      <span class="operator">|</span>CPU_ID          <span class="operator">|</span>Display_Adapters                                                                                    <span class="operator">|</span>Memory    <span class="operator">|</span>OS_Version                                                   <span class="operator">|</span>NX_Version                     <span class="operator">|</span>Login_Date         <span class="operator">|</span>Stop_Date<span class="operator">|</span></span><br><span class="line"><span class="comment">---+---------------+---------------+------------+-----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------+----------+-------------------------------------------------------------+-------------------------------+-------------------+---------+</span></span><br><span class="line">  <span class="number">1</span><span class="operator">|</span>WIN<span class="number">-73</span>CP1JT5II8<span class="operator">|</span>Administrator  <span class="operator">|</span>GenuineIntel<span class="operator">|</span>Intel(R) Core(TM) i5<span class="number">-8500</span> CPU @ <span class="number">3.00</span>GHz        <span class="operator">|</span>BFEBFBFF000906EA<span class="operator">|</span>Microsoft Basic Render Driver,NVIDIA GeForce GTX <span class="number">1060</span> <span class="number">5</span>GB                                           <span class="operator">|</span><span class="number">15.922200</span> <span class="operator">|</span><span class="number">6.3</span> Windows <span class="number">10</span> Pro (Build <span class="number">18363</span>)                             <span class="operator">|</span>NX <span class="number">1957.1901</span>                   <span class="operator">|</span><span class="number">2021</span><span class="operator">/</span><span class="number">5</span><span class="operator">/</span><span class="number">12</span><span class="number">-17</span>:<span class="number">37</span>:<span class="number">00</span> <span class="operator">|</span><span class="keyword">null</span>     <span class="operator">|</span></span><br><span class="line">  <span class="number">2</span><span class="operator">|</span>PC<span class="number">-20201223</span>RMUE<span class="operator">|</span>Administrator  <span class="operator">|</span>GenuineIntel<span class="operator">|</span>      Intel(R) Xeon(R) CPU E5<span class="number">-2651</span> v2 @ <span class="number">1.80</span>GHz<span class="operator">|</span>BFEBFBFF000306E4<span class="operator">|</span>NVIDIA GeForce GTX <span class="number">1050</span> Ti                                                                          <span class="operator">|</span><span class="number">15.919800</span> <span class="operator">|</span><span class="number">6.1</span> Windows <span class="number">7</span> Ultimate (Build <span class="number">7601</span>) Service Pack <span class="number">1</span>           <span class="operator">|</span>NX <span class="number">1899.1700</span>                   <span class="operator">|</span><span class="number">2021</span><span class="operator">/</span><span class="number">5</span><span class="operator">/</span><span class="number">15</span><span class="number">-10</span>:<span class="number">11</span>:<span class="number">35</span> <span class="operator">|</span><span class="keyword">null</span>     <span class="operator">|</span></span><br><span class="line">  <span class="number">3</span><span class="operator">|</span>cc             <span class="operator">|</span>Administrator  <span class="operator">|</span>GenuineIntel<span class="operator">|</span>Intel(R) Core(TM) i7<span class="number">-9700</span> CPU @ <span class="number">3.00</span>GHz        <span class="operator">|</span>BFEBFBFF000906ED<span class="operator">|</span>Intel(R) UHD Graphics <span class="number">630</span>,Microsoft Basic Render Driver,NVIDIA GeForce GTX <span class="number">1050</span> Ti                  <span class="operator">|</span><span class="number">15.787000</span> <span class="operator">|</span><span class="number">6.3</span> Windows <span class="number">10</span> Enterprise (Build <span class="number">19042</span>)                      <span class="operator">|</span>NX <span class="number">1969.2802</span>                   <span class="operator">|</span><span class="number">2021</span><span class="operator">/</span><span class="number">6</span><span class="operator">/</span><span class="number">4</span><span class="number">-16</span>:<span class="number">11</span>:<span class="number">52</span>  <span class="operator">|</span><span class="keyword">null</span>     <span class="operator">|</span></span><br><span class="line">  <span class="number">4</span><span class="operator">|</span>LAPTOP<span class="operator">-</span>RUKV82NI<span class="operator">|</span>Brooks         <span class="operator">|</span>AuthenticAMD<span class="operator">|</span>AMD Ryzen <span class="number">7</span> <span class="number">4800</span>H <span class="keyword">with</span> Radeon Graphics         <span class="operator">|</span><span class="number">178</span>BFBFF00860F01<span class="operator">|</span>Microsoft Basic Render Driver,NVIDIA GeForce GTX <span class="number">1650</span>                                               <span class="operator">|</span><span class="number">15.372400</span> <span class="operator">|</span><span class="number">6.3</span> Windows <span class="number">10</span> Home China (Build <span class="number">19042</span>)                      <span class="operator">|</span>NX <span class="number">12.0</span><span class="number">.1</span><span class="number">.7</span>                    <span class="operator">|</span><span class="number">2021</span><span class="operator">/</span><span class="number">6</span><span class="operator">/</span><span class="number">7</span><span class="number">-18</span>:<span class="number">18</span>:<span class="number">23</span>  <span class="operator">|</span><span class="keyword">null</span>     <span class="operator">|</span></span><br><span class="line">  <span class="number">5</span><span class="operator">|</span>DESKTOP<span class="number">-29</span>J8660<span class="operator">|</span>lijunfeng      <span class="operator">|</span>GenuineIntel<span class="operator">|</span>Intel(R) Core(TM) i7<span class="number">-4770</span> CPU @ <span class="number">3.40</span>GHz        <span class="operator">|</span>BFEBFBFF000306C3<span class="operator">|</span>Microsoft Basic Render Driver,NVIDIA Quadro K600                                                    <span class="operator">|</span><span class="number">7.945300</span>  <span class="operator">|</span><span class="number">6.3</span> Windows <span class="number">10</span> Pro <span class="keyword">for</span> Workstations (Build <span class="number">19043</span>)            <span class="operator">|</span>NX <span class="number">1892.2903</span>                   <span class="operator">|</span><span class="number">2021</span><span class="operator">/</span><span class="number">6</span><span class="operator">/</span><span class="number">12</span><span class="number">-10</span>:<span class="number">57</span>:<span class="number">33</span> <span class="operator">|</span><span class="keyword">null</span>     <span class="operator">|</span></span><br><span class="line">.................</span><br></pre></td></tr></table></figure><h3 id="检索多个列"><a href="#检索多个列" class="headerlink" title="检索多个列"></a>检索多个列</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,<span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输入</span></span><br><span class="line"><span class="keyword">SELECT</span> &quot;No&quot;,CPU_Brand,NX_Version <span class="keyword">FROM</span> CAMCAD_USERS;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line"><span class="keyword">No</span> <span class="operator">|</span>CPU_Brand                                      <span class="operator">|</span>NX_Version                     <span class="operator">|</span></span><br><span class="line"><span class="comment">---+-----------------------------------------------+-------------------------------+</span></span><br><span class="line">  <span class="number">1</span><span class="operator">|</span>Intel(R) Core(TM) i5<span class="number">-8500</span> CPU @ <span class="number">3.00</span>GHz        <span class="operator">|</span>NX <span class="number">1957.1901</span>                   <span class="operator">|</span></span><br><span class="line">  <span class="number">2</span><span class="operator">|</span>      Intel(R) Xeon(R) CPU E5<span class="number">-2651</span> v2 @ <span class="number">1.80</span>GHz<span class="operator">|</span>NX <span class="number">1899.1700</span>                   <span class="operator">|</span></span><br><span class="line">  <span class="number">3</span><span class="operator">|</span>Intel(R) Core(TM) i7<span class="number">-9700</span> CPU @ <span class="number">3.00</span>GHz        <span class="operator">|</span>NX <span class="number">1969.2802</span>                   <span class="operator">|</span></span><br><span class="line">  <span class="number">4</span><span class="operator">|</span>AMD Ryzen <span class="number">7</span> <span class="number">4800</span>H <span class="keyword">with</span> Radeon Graphics         <span class="operator">|</span>NX <span class="number">12.0</span><span class="number">.1</span><span class="number">.7</span>                    <span class="operator">|</span></span><br><span class="line">  <span class="number">5</span><span class="operator">|</span>Intel(R) Core(TM) i7<span class="number">-4770</span> CPU @ <span class="number">3.40</span>GHz        <span class="operator">|</span>NX <span class="number">1892.2903</span>                   <span class="operator">|</span></span><br><span class="line">  ............</span><br></pre></td></tr></table></figure><h3 id="只返回不同的值"><a href="#只返回不同的值" class="headerlink" title="只返回不同的值"></a>只返回不同的值</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,<span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输入</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> cpu_brand <span class="keyword">FROM</span> CAMCAD_USERS;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line">CPU_Brand                                      <span class="operator">|</span></span><br><span class="line"><span class="comment">-----------------------------------------------+</span></span><br><span class="line">Intel(R) Core(TM) i5<span class="number">-8500</span> CPU @ <span class="number">3.00</span>GHz        <span class="operator">|</span></span><br><span class="line">      Intel(R) Xeon(R) CPU E5<span class="number">-2651</span> v2 @ <span class="number">1.80</span>GHz<span class="operator">|</span></span><br><span class="line">Intel(R) Core(TM) i7<span class="number">-9700</span> CPU @ <span class="number">3.00</span>GHz        <span class="operator">|</span></span><br><span class="line">AMD Ryzen <span class="number">7</span> <span class="number">4800</span>H <span class="keyword">with</span> Radeon Graphics         <span class="operator">|</span></span><br><span class="line">Intel(R) Core(TM) i7<span class="number">-4770</span> CPU @ <span class="number">3.40</span>GHz        <span class="operator">|</span></span><br><span class="line">.........</span><br></pre></td></tr></table></figure><h3 id="只检索前几行数据（MySQL、MariaDB、PostgreSQL或SQLite）"><a href="#只检索前几行数据（MySQL、MariaDB、PostgreSQL或SQLite）" class="headerlink" title="只检索前几行数据（MySQL、MariaDB、PostgreSQL或SQLite）"></a>只检索前几行数据（MySQL、MariaDB、PostgreSQL或SQLite）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span> LIMIT <span class="operator">&lt;</span>数字<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输入</span></span><br><span class="line"><span class="keyword">SELECT</span> cpu_brand <span class="keyword">FROM</span> CAMCAD_USERS LIMIT <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line">CPU_Brand                                      <span class="operator">|</span></span><br><span class="line"><span class="comment">-----------------------------------------------+</span></span><br><span class="line">Intel(R) Core(TM) i5<span class="number">-8500</span> CPU @ <span class="number">3.00</span>GHz        <span class="operator">|</span></span><br><span class="line">      Intel(R) Xeon(R) CPU E5<span class="number">-2651</span> v2 @ <span class="number">1.80</span>GHz<span class="operator">|</span></span><br><span class="line">Intel(R) Core(TM) i7<span class="number">-9700</span> CPU @ <span class="number">3.00</span>GHz        <span class="operator">|</span></span><br><span class="line">AMD Ryzen <span class="number">7</span> <span class="number">4800</span>H <span class="keyword">with</span> Radeon Graphics         <span class="operator">|</span></span><br><span class="line">Intel(R) Core(TM) i7<span class="number">-4770</span> CPU @ <span class="number">3.40</span>GHz        <span class="operator">|</span></span><br></pre></td></tr></table></figure><h3 id="返回从第几行起的几行数据"><a href="#返回从第几行起的几行数据" class="headerlink" title="返回从第几行起的几行数据"></a>返回从第几行起的几行数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span> LIMIT <span class="operator">&lt;</span>数字<span class="operator">&gt;</span> <span class="keyword">OFFSET</span> <span class="operator">&lt;</span>数字<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输入</span></span><br><span class="line"><span class="keyword">SELECT</span> cpu_brand <span class="keyword">FROM</span> CAMCAD_USERS LIMIT <span class="number">5</span> <span class="keyword">OFFSET</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line">CPU_Brand                                      <span class="operator">|</span></span><br><span class="line"><span class="comment">-----------------------------------------------+</span></span><br><span class="line">Intel(R) Core(TM) i7<span class="number">-8700</span> CPU @ <span class="number">3.20</span>GHz        <span class="operator">|</span></span><br><span class="line">Intel(R) Core(TM) i5<span class="number">-7300</span>HQ CPU @ <span class="number">2.50</span>GHz      <span class="operator">|</span></span><br><span class="line">Intel(R) Core(TM) i7<span class="number">-7700</span> CPU @ <span class="number">3.60</span>GHz        <span class="operator">|</span></span><br><span class="line">AMD A6<span class="number">-5350</span>M APU <span class="keyword">with</span> Radeon(tm) HD Graphics   <span class="operator">|</span></span><br><span class="line">Intel(R) Xeon(R) CPU E5<span class="number">-1620</span> v3 @ <span class="number">3.50</span>GHz      <span class="operator">|</span></span><br></pre></td></tr></table></figure><h3 id="单列升序排序（从0到9，从A到Z）"><a href="#单列升序排序（从0到9，从A到Z）" class="headerlink" title="单列升序排序（从0到9，从A到Z）"></a>单列升序排序（从0到9，从A到Z）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输入</span></span><br><span class="line"><span class="keyword">SELECT</span> Host_Name <span class="keyword">FROM</span> CAMCAD_USERS <span class="keyword">ORDER</span> <span class="keyword">BY</span> Host_Name;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line"><span class="number">20210124</span><span class="number">-205150</span> <span class="operator">|</span></span><br><span class="line"><span class="number">7</span>X8RHBGHYPGT713 <span class="operator">|</span></span><br><span class="line">Azhou           <span class="operator">|</span></span><br><span class="line">BUYIOS          <span class="operator">|</span></span><br><span class="line">Chensy          <span class="operator">|</span></span><br><span class="line">DEH<span class="number">-211130</span>      <span class="operator">|</span></span><br><span class="line">........</span><br></pre></td></tr></table></figure><h3 id="单列降序排序（从9到0，从Z到A，DESC关键字只应用到直接位于其前面的列名）"><a href="#单列降序排序（从9到0，从Z到A，DESC关键字只应用到直接位于其前面的列名）" class="headerlink" title="单列降序排序（从9到0，从Z到A，DESC关键字只应用到直接位于其前面的列名）"></a>单列降序排序（从9到0，从Z到A，DESC关键字只应用到直接位于其前面的列名）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span> <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输入</span></span><br><span class="line"><span class="keyword">SELECT</span> Host_Name <span class="keyword">FROM</span> CAMCAD_USERS <span class="keyword">ORDER</span> <span class="keyword">BY</span> Host_Name <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line">DEH<span class="number">-211130</span>      <span class="operator">|</span></span><br><span class="line">Chensy          <span class="operator">|</span></span><br><span class="line">BUYIOS          <span class="operator">|</span></span><br><span class="line">Azhou           <span class="operator">|</span></span><br><span class="line"><span class="number">7</span>X8RHBGHYPGT713 <span class="operator">|</span></span><br><span class="line"><span class="number">20210124</span><span class="number">-205150</span> <span class="operator">|</span></span><br><span class="line">........</span><br></pre></td></tr></table></figure><h3 id="多列排序（首先按内存大小排序，然后按名称排序）"><a href="#多列排序（首先按内存大小排序，然后按名称排序）" class="headerlink" title="多列排序（首先按内存大小排序，然后按名称排序）"></a>多列排序（首先按内存大小排序，然后按名称排序）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,...;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输入</span></span><br><span class="line"><span class="keyword">SELECT</span> Memory,Host_Name,Display_Adapters <span class="keyword">FROM</span> CAMCAD_USERS <span class="keyword">ORDER</span> <span class="keyword">BY</span> Memory,Host_Name;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line">Memory    <span class="operator">|</span>Host_Name       <span class="operator">|</span>Display_Adapters                                                                                    <span class="operator">|</span></span><br><span class="line"><span class="comment">----------+----------------+----------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1.81561</span>   <span class="operator">|</span><span class="keyword">USER</span><span class="number">-20200131</span>HG <span class="operator">|</span>Intel(R) HD Graphics                                                                                <span class="operator">|</span></span><br><span class="line"><span class="number">11.6823</span>   <span class="operator">|</span>SK<span class="number">-20200401</span>OTGH <span class="operator">|</span>Intel(R) HD Graphics <span class="number">4600</span>                                                                           <span class="operator">|</span></span><br><span class="line"><span class="number">11.7997</span>   <span class="operator">|</span>SKY<span class="number">-20190921</span>ZEJ <span class="operator">|</span>Intel(R) HD Graphics <span class="number">530</span>,Microsoft Basic Render Driver,NVIDIA GeForce GTX <span class="number">950</span>M                      <span class="operator">|</span></span><br><span class="line"><span class="number">11.8549</span>   <span class="operator">|</span>LAPTOP<span class="operator">-</span>N0BJVI0D <span class="operator">|</span>Intel(R) UHD Graphics <span class="number">620</span>,Microsoft Basic Render Driver,NVIDIA GeForce MX250                        <span class="operator">|</span></span><br><span class="line"><span class="number">11.8653</span>   <span class="operator">|</span>XTZJ<span class="number">-20210529</span>GG <span class="operator">|</span>Intel(R) UHD Graphics <span class="number">620</span>,Microsoft Basic Render Driver,Radeon (TM) <span class="number">520</span>                             <span class="operator">|</span></span><br><span class="line">...........</span><br></pre></td></tr></table></figure><h3 id="按列位置排序（按第三列排序后，再按第一列排序）"><a href="#按列位置排序（按第三列排序后，再按第一列排序）" class="headerlink" title="按列位置排序（按第三列排序后，再按第一列排序）"></a>按列位置排序（按第三列排序后，再按第一列排序）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>数字<span class="operator">&gt;</span>,...;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输入</span></span><br><span class="line"><span class="keyword">SELECT</span> Host_Name,Display_Adapters,Memory <span class="keyword">FROM</span> CAMCAD_USERS <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">3</span>,<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line">Host_Name       <span class="operator">|</span>Display_Adapters                                                                                    <span class="operator">|</span>Memory    <span class="operator">|</span></span><br><span class="line"><span class="comment">----------------+----------------------------------------------------------------------------------------------------+----------+</span></span><br><span class="line"><span class="keyword">USER</span><span class="number">-20200131</span>HG <span class="operator">|</span>Intel(R) HD Graphics                                                                                <span class="operator">|</span><span class="number">1.81561</span>   <span class="operator">|</span></span><br><span class="line">SK<span class="number">-20200401</span>OTGH <span class="operator">|</span>Intel(R) HD Graphics <span class="number">4600</span>                                                                           <span class="operator">|</span><span class="number">11.6823</span>   <span class="operator">|</span></span><br><span class="line">SKY<span class="number">-20190921</span>ZEJ <span class="operator">|</span>Intel(R) HD Graphics <span class="number">530</span>,Microsoft Basic Render Driver,NVIDIA GeForce GTX <span class="number">950</span>M                      <span class="operator">|</span><span class="number">11.7997</span>   <span class="operator">|</span></span><br><span class="line">LAPTOP<span class="operator">-</span>N0BJVI0D <span class="operator">|</span>Intel(R) UHD Graphics <span class="number">620</span>,Microsoft Basic Render Driver,NVIDIA GeForce MX250                        <span class="operator">|</span><span class="number">11.8549</span>   <span class="operator">|</span></span><br><span class="line">XTZJ<span class="number">-20210529</span>GG <span class="operator">|</span>Intel(R) UHD Graphics <span class="number">620</span>,Microsoft Basic Render Driver,Radeon (TM) <span class="number">520</span>                             <span class="operator">|</span><span class="number">11.8653</span>   <span class="operator">|</span></span><br><span class="line">............</span><br></pre></td></tr></table></figure><h2 id="过滤数据（WHERE）"><a href="#过滤数据（WHERE）" class="headerlink" title="过滤数据（WHERE）"></a>过滤数据（WHERE）</h2><h3 id="WHERE-子句操作符"><a href="#WHERE-子句操作符" class="headerlink" title="WHERE 子句操作符"></a>WHERE 子句操作符</h3><table><thead><tr><th align="center">操作符</th><th align="center">说明</th><th align="center">操作符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&#x3D;</td><td align="center">等于</td><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&lt;&gt;</td><td align="center">不等于</td><td align="center">&gt;&#x3D;</td><td align="center">大于等于</td></tr><tr><td align="center">!&#x3D;</td><td align="center">不等于</td><td align="center">!&gt;</td><td align="center">不大于</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td><td align="center">BETWEEN</td><td align="center">在指定的两个值之间</td></tr><tr><td align="center">&lt;&#x3D;</td><td align="center">小于等于</td><td align="center">IS NULL</td><td align="center">为NULL值</td></tr><tr><td align="center">!&lt;</td><td align="center">不小于</td><td align="center"></td><td align="center"></td></tr></tbody></table><h3 id="检查单个值"><a href="#检查单个值" class="headerlink" title="检查单个值"></a>检查单个值</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span> ,<span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>列的值<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--输入</span></span><br><span class="line"><span class="comment">--只返回 User_Name 值为&#x27;Administrator&#x27;的行</span></span><br><span class="line"><span class="keyword">SELECT</span> User_Name ,Memory <span class="keyword">FROM</span> CAMCAD_USERS <span class="keyword">WHERE</span> User_Name <span class="operator">=</span><span class="string">&#x27;Administrator&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--输出</span></span><br><span class="line">User_Name    <span class="operator">|</span>Memory    <span class="operator">|</span></span><br><span class="line"><span class="comment">-------------+----------+</span></span><br><span class="line">Administrator<span class="operator">|</span><span class="number">15.922200</span> <span class="operator">|</span></span><br><span class="line">Administrator<span class="operator">|</span><span class="number">15.919800</span> <span class="operator">|</span></span><br><span class="line">Administrator<span class="operator">|</span><span class="number">15.787000</span> <span class="operator">|</span></span><br><span class="line">Administrator<span class="operator">|</span><span class="number">15.950000</span> <span class="operator">|</span></span><br><span class="line">Administrator<span class="operator">|</span><span class="number">6.061470</span>  <span class="operator">|</span></span><br><span class="line">.........</span><br></pre></td></tr></table></figure><h3 id="不匹配检查"><a href="#不匹配检查" class="headerlink" title="不匹配检查"></a>不匹配检查</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,<span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span> <span class="operator">&lt;</span>操作符<span class="operator">&gt;</span> <span class="operator">&lt;</span>列的值<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--输入</span></span><br><span class="line"><span class="keyword">SELECT</span> User_Name,Memory <span class="keyword">FROM</span> CAMCAD_USERS <span class="keyword">WHERE</span> User_Name <span class="operator">!=</span> <span class="string">&#x27;Administrator&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--输出</span></span><br><span class="line">User_Name      <span class="operator">|</span>Memory    <span class="operator">|</span></span><br><span class="line"><span class="comment">---------------+----------+</span></span><br><span class="line">Brooks         <span class="operator">|</span><span class="number">15.372400</span> <span class="operator">|</span></span><br><span class="line">lijunfeng      <span class="operator">|</span><span class="number">7.945300</span>  <span class="operator">|</span></span><br><span class="line">cnc            <span class="operator">|</span><span class="number">15.938900</span> <span class="operator">|</span></span><br><span class="line">Emmet_huang    <span class="operator">|</span><span class="number">7.91433</span>   <span class="operator">|</span></span><br><span class="line">shenchy        <span class="operator">|</span><span class="number">31.7203</span>   <span class="operator">|</span></span><br><span class="line">.........</span><br></pre></td></tr></table></figure><h3 id="范围值检查（检索-No-在5行和10行之间的值）"><a href="#范围值检查（检索-No-在5行和10行之间的值）" class="headerlink" title="范围值检查（检索 No 在5行和10行之间的值）"></a>范围值检查（检索 No 在5行和10行之间的值）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,<span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span> <span class="keyword">BETWEEN</span> <span class="operator">&lt;</span>条件<span class="operator">&gt;</span> <span class="keyword">AND</span> <span class="operator">&lt;</span>条件<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--输入</span></span><br><span class="line"><span class="keyword">SELECT</span> &quot;No&quot;,MEMORY <span class="keyword">FROM</span> CAMCAD_USERS <span class="keyword">WHERE</span> &quot;No&quot; <span class="keyword">BETWEEN</span> <span class="number">5</span> <span class="keyword">AND</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--输出</span></span><br><span class="line"><span class="keyword">No</span><span class="operator">|</span>Memory    <span class="operator">|</span></span><br><span class="line"><span class="comment">--+----------+</span></span><br><span class="line"> <span class="number">5</span><span class="operator">|</span><span class="number">7.945300</span>  <span class="operator">|</span></span><br><span class="line"> <span class="number">6</span><span class="operator">|</span><span class="number">15.950000</span> <span class="operator">|</span></span><br><span class="line"> <span class="number">7</span><span class="operator">|</span><span class="number">6.061470</span>  <span class="operator">|</span></span><br><span class="line"> <span class="number">8</span><span class="operator">|</span><span class="number">15.938900</span> <span class="operator">|</span></span><br><span class="line"> <span class="number">9</span><span class="operator">|</span><span class="number">3.205720</span>  <span class="operator">|</span></span><br><span class="line"><span class="number">10</span><span class="operator">|</span><span class="number">15.918100</span> <span class="operator">|</span></span><br></pre></td></tr></table></figure><h3 id="空值检查"><a href="#空值检查" class="headerlink" title="空值检查"></a>空值检查</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span>,<span class="operator">&lt;</span>列<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>表<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>列<span class="operator">&gt;</span> <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--输入</span></span><br><span class="line"><span class="keyword">SELECT</span> &quot;No&quot;,NX_Version <span class="keyword">FROM</span> CAMCAD_USERS <span class="keyword">WHERE</span> Stop_Date <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--输出</span></span><br><span class="line"><span class="keyword">No</span><span class="operator">|</span>NX_Version<span class="operator">|</span></span><br><span class="line"><span class="comment">--+----------+</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>SQL必知必会（第5版） (福达)<br>SQL基础教程（第2版） ([日] MICK) </p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;SQL概要&quot;&gt;&lt;a href=&quot;#SQL概要&quot; class=&quot;headerlink&quot; title=&quot;SQL概要&quot;&gt;&lt;/a&gt;SQL概要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;SQL是为操作数据库而开发的语言&lt;/li&gt;
&lt;li&gt;虽然SQL也有标准，但实际上根据RDBMS的不同SQL也不尽相同&lt;/li&gt;
&lt;li&gt;SQL通过一条语句来描述想要进行的操作，发送给RDBMS&lt;/li&gt;
&lt;li&gt;原则上SQL语句都会分号结尾&lt;/li&gt;
&lt;li&gt;SQL根据操作目的可以分为DDL、DML和DCL（一般为DML）</summary>
    
    
    
    <category term="辅助" scheme="https://notes.camcad.cn/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="SQL" scheme="https://notes.camcad.cn/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-BlockStyler::Tree部分中文字符乱码原因</title>
    <link href="https://notes.camcad.cn/post/4d8ef017.html"/>
    <id>https://notes.camcad.cn/post/4d8ef017.html</id>
    <published>2023-11-16T15:18:39.000Z</published>
    <updated>2024-04-20T07:43:29.659Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>在系统编码字符集为<code>GB2312(Simplified)</code>的环境下，通过HTTP协议发起GET请求（<code>Content-type: application/json;charset=GBK</code>），将响应的JSON字符串进行解析。将得到的字符串数组放入<code>BlockStyler::Tree</code>树列表中，导致部分中文字符乱码。<br><img src="http://image.camcad.cn/2023/11/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91-%E6%A0%91%E5%88%97%E8%A1%A8%E9%83%A8%E5%88%86%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81.jpg" alt="NX二次开发-树列表部分中文乱码"></p><span id="more"></span><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>由于系统编码字符集<code>GB2312(Simplified)</code>和响应的编码字符集<code>GBK</code>不完全兼容所致。</p><p>几种常见中文编码之间兼容性：<br><img src="http://image.camcad.cn/2023/11/%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E4%B8%AD%E6%96%87%E7%BC%96%E7%A0%81%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7.jpg" alt="几种常见中文编码的兼容性"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>将字符串插入到树列表之前，将字符串进行本地转码，然后将转换后的字符串插入树列表中，NX已经提供对应接口<code>NXOpen::NXString</code>，如下操作：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、通过有参构造函数进行本地转码</span><br><span class="line">NXOpen::<span class="built_in">NXString</span>(<span class="string">&quot;中文字符串&quot;</span>, NXOpen::NXString::NXStringMode::Locale)</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、通过赋值的方式进行本地转码</span><br><span class="line">NXOpen::NXString nxNote = <span class="string">&quot;中文字符串&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="http://zhuanlan.zhihu.com/p/46216008">程序员必备：彻底弄懂常见的7种中文字符编码</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;在系统编码字符集为&lt;code&gt;GB2312(Simplified)&lt;/code&gt;的环境下，通过HTTP协议发起GET请求（&lt;code&gt;Content-type: application/json;charset=GBK&lt;/code&gt;），将响应的JSON字符串进行解析。将得到的字符串数组放入&lt;code&gt;BlockStyler::Tree&lt;/code&gt;树列表中，导致部分中文字符乱码。&lt;br&gt;&lt;img src=&quot;http://image.camcad.cn/2023/11/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91-%E6%A0%91%E5%88%97%E8%A1%A8%E9%83%A8%E5%88%86%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81.jpg&quot; alt=&quot;NX二次开发-树列表部分中文乱码&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="疑难杂症" scheme="https://notes.camcad.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>C++实现HTTP超文本传送协议请求</title>
    <link href="https://notes.camcad.cn/post/4d747de1.html"/>
    <id>https://notes.camcad.cn/post/4d747de1.html</id>
    <published>2023-11-10T18:40:55.000Z</published>
    <updated>2024-04-20T07:43:29.675Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="0846ccbfe8f3508eef6daf045675700313ab42ef7ff372ce096059accff50fd5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="辅助" scheme="https://notes.camcad.cn/categories/%E8%BE%85%E5%8A%A9/"/>
    
    
    <category term="C++" scheme="https://notes.camcad.cn/tags/C/"/>
    
    <category term="公共" scheme="https://notes.camcad.cn/tags/%E5%85%AC%E5%85%B1/"/>
    
    <category term="socket" scheme="https://notes.camcad.cn/tags/socket/"/>
    
    <category term="网络编程" scheme="https://notes.camcad.cn/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    <category term="http" scheme="https://notes.camcad.cn/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>C++中字符编码的转换(Unicode、UTF-8、ANSI)</title>
    <link href="https://notes.camcad.cn/post/88fc5fdb.html"/>
    <id>https://notes.camcad.cn/post/88fc5fdb.html</id>
    <published>2023-10-31T12:14:33.000Z</published>
    <updated>2024-04-20T07:43:29.659Z</updated>
    
    <content type="html"><![CDATA[<p>C++的项目，字符编码是一个大坑，不同平台之间的编码往往不一样，如果不同编码格式用一套字符读取格式读取就会出现乱码。因此，一般都是转化成UTF-8这种平台通用，且支持性很好的编码格式。</p><p>Unicode、UTF-8的概念不做过多解释，这里说一下ANSI，我第一次看到这个名词，我看成了ASCII。被Mentor狠批一顿。</p><span id="more"></span><blockquote><p>ANSI是一种字符代码，为使计算机支持更多语言，通常使用 0x00 ~ 0x7F范围的1 个字节来表示 1 个英文字符。超出此范围的使用0x80~0xFFFF来编码，即扩展的ASCII编码。<br>　<br>不同的国家和地区制定了不同的标准，由此产生了 GB2312、GBK、GB18030、Big5、Shift_JIS 等各自的编码标准。这些使用多个字节来代表一个字符的各种汉字延伸编码方式，称为 ANSI 编码。在简体中文Windows操作系统中，ANSI 编码代表 GBK 编码；在繁体中文Windows操作系统中，ANSI编码代表Big5；在日文Windows操作系统中，ANSI 编码代表 Shift_JIS 编码。</p></blockquote><p>几种常见中文编码之间兼容性：<br><img src="http://image.camcad.cn/2023/11/%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E4%B8%AD%E6%96%87%E7%BC%96%E7%A0%81%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7.jpg" alt="几种常见中文编码的兼容性"></p><p>以上内容摘自百度百科，可以看出，ANSI和ASCII还是有关系的。<code>ANSI也叫本地码</code>。</p><p>我们要做到能在Unicode、UTF-8、ANSI这三种编码格式中自由转换。如下图所示：<br><img src="http://image.camcad.cn/2023/10/Unicode-UTF-8-ANSI.jpg" alt="Unicode-UTF-8-ANSI"></p><p>在C++中，要怎么做呢？当然是用标准库的东西啦，C++11对国际化标准做得还是可以的，提供了这些接口，正如图中虚线所示，标准库没有提供UTF-8到ANSI的互相转化接口，但是我们可以自己封转接口，借用这条路(<code>UTF-8 &lt;=&gt; Unicode &lt;=&gt; ANSI</code>)来实现。</p><p>因此，接下来就聊聊<code>UTF8 &lt;=&gt; Unicode</code>和<code>Unicode &lt;=&gt; ANSI</code>。</p><h2 id="UTF8-lt-gt-Unicode"><a href="#UTF8-lt-gt-Unicode" class="headerlink" title="UTF8 &lt;=&gt; Unicode"></a><code>UTF8 &lt;=&gt; Unicode</code></h2><p>先看代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">UnicodeToUTF8</span><span class="params">(<span class="type">const</span> std::wstring &amp; wstr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::string ret;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        std::wstring_convert&lt; std::codecvt_utf8&lt;<span class="type">wchar_t</span>&gt; &gt; wcv;</span><br><span class="line">        ret = wcv.<span class="built_in">to_bytes</span>(wstr);</span><br><span class="line">    &#125; <span class="built_in">catch</span> (<span class="type">const</span> std::exception &amp; e) &#123;</span><br><span class="line">        std::cerr &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">UTF8ToUnicode</span><span class="params">(<span class="type">const</span> std::string &amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::wstring ret;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        std::wstring_convert&lt; std::codecvt_utf8&lt;<span class="type">wchar_t</span>&gt; &gt; wcv;</span><br><span class="line">        ret = wcv.<span class="built_in">from_bytes</span>(str);</span><br><span class="line">    &#125; <span class="built_in">catch</span> (<span class="type">const</span> std::exception &amp; e) &#123;</span><br><span class="line">        std::cerr &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UTF-8是多字节字符串(multibyte string)，而Unicode是宽字符字符串(wchar_t string)。</p><p>而C++11提供了<code>wstring_convert</code>这个类，这个类可以在<code>wchar_t string</code>和<code>multibyte string</code>之间来回转换；</p><p>而<code>codecvt_utf8</code>可以提供UTF-8的编码规则。这个类在<code>#include &lt;codecvt&gt;</code>中。有了<code>wstring_convert</code>提供宽字符字符串到多字节字符串的转化，而这个转换规则由<code>codecvt_uft8</code>提供。这样子就可以实现UTF8和Unicode的互相转换。</p><ul><li>从UTF8到Unicode调用成员函数<code>wstring_convert::from_bytes</code>；</li><li>从Unicode到UTF8调用成员函数<code>wstring_convert::to_bytes</code>；</li></ul><h2 id="Unicode-lt-gt-ANSI"><a href="#Unicode-lt-gt-ANSI" class="headerlink" title="Unicode &lt;=&gt; ANSI"></a><code>Unicode &lt;=&gt; ANSI</code></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">UnicodeToANSI</span><span class="params">(<span class="type">const</span> std::wstring &amp; wstr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::string ret;</span><br><span class="line">    std::<span class="type">mbstate_t</span> state = &#123;&#125;;</span><br><span class="line">    <span class="type">const</span> <span class="type">wchar_t</span> *src = wstr.<span class="built_in">data</span>();</span><br><span class="line">    <span class="type">size_t</span> len = std::<span class="built_in">wcsrtombs</span>(<span class="literal">nullptr</span>, &amp;src, <span class="number">0</span>, &amp;state);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">        <span class="function">std::unique_ptr&lt; <span class="type">char</span> [] &gt; <span class="title">buff</span><span class="params">(<span class="keyword">new</span> <span class="type">char</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">        len = std::<span class="built_in">wcsrtombs</span>(buff.<span class="built_in">get</span>(), &amp;src, len, &amp;state);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">            ret.<span class="built_in">assign</span>(buff.<span class="built_in">get</span>(), len);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">ANSIToUnicode</span><span class="params">(<span class="type">const</span> std::string &amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::wstring ret;</span><br><span class="line">    std::<span class="type">mbstate_t</span> state = &#123;&#125;;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *src = str.<span class="built_in">data</span>();</span><br><span class="line">    <span class="type">size_t</span> len = std::<span class="built_in">mbsrtowcs</span>(<span class="literal">nullptr</span>, &amp;src, <span class="number">0</span>, &amp;state);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">        <span class="function">std::unique_ptr&lt; <span class="type">wchar_t</span> [] &gt; <span class="title">buff</span><span class="params">(<span class="keyword">new</span> <span class="type">wchar_t</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">        len = std::<span class="built_in">mbsrtowcs</span>(buff.<span class="built_in">get</span>(), &amp;src, len, &amp;state);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">            ret.<span class="built_in">assign</span>(buff.<span class="built_in">get</span>(), len);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>标准库提供了<code>wcsrtombs</code>和<code>mbsrtowcs</code>这两个函数，当然C的标准库也提供了这两个函数。</p><p>讲下<code>wcsrtombs</code>，这个函数把宽字符串转成多字节字符串。编码规则受地域的<code>LC_CTYPE</code>影响。因此这个函数可以用于本地码的转化(和本地的编码息息相关)。</p><p><code>因此，有关于本地码的使用，在代码中要加上下列语句：</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setlocale</span>(LC_CTYPE, <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><p>目的是让本地码生效，这条代码的作用就是让C++语言的<code>Locale</code>(地域)和本地的地域相同。在Linux下可以运行<code>locale</code>命令看看：<br><img src="http://image.camcad.cn/2023/10/ubuntu_locale.jpg" alt="ubuntu_locale"></p><p>可以看到，<code>LC_CTYPE = en_US.UTF-8</code>，这表示<strong>英文，英国，UTF-8编码</strong>，也就是说本地码就是这个。</p><p>当然，你也可以在<code>setlocale</code>中指定一些编码规则，把<code>wcsrtombs</code>用于别的编码转化，但是，这里不推荐，因为<code>setlocale</code>是全局的，设置了这个就会影响其他地方的编码。</p><p><code>wcsrtombs</code>的四个参数分别代表什么意思呢？</p><p><code>std::size_t wcsrtombs( char* dst, const wchar_t** src, std::size_t len, std::mbstate_t* ps );</code></p><ul><li><code>dst</code>，转化后的结果存入<code>dst</code>指向的内存；</li><li><code>src</code>，待转化的字符串的指针的指针；</li><li><code>len</code>，<code>dst</code>指向内存的可用字节数；</li><li><code>ps</code>，转换的状态，一般默认初始化就好了；</li><li><code>return type</code>，转化后结果的长度，不包含<code>\0</code>。</li></ul><p><strong>注意</strong>：如果<code>dst == nullptr</code>，这个时候<code>wcstombs</code>的返回值表示会有这么多字节的结果产生，因此，我们可以拿到这个返回值去新建一个数组来存储<code>new char[len + 1]</code>。所以，一般调用两次<code>wcstombs</code>。</p><p><code>mbsrtowcs</code>同理。</p><h2 id="UTF-8-lt-gt-ANSI"><a href="#UTF-8-lt-gt-ANSI" class="headerlink" title="UTF-8 &lt;=&gt; ANSI"></a><code>UTF-8 &lt;=&gt; ANSI</code></h2><p>以<code>Unicode</code>为中介装换便是。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">UTF8ToANSI</span><span class="params">(<span class="type">const</span> std::string &amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">UnicodeToANSI</span>(<span class="built_in">UTF8ToUnicode</span>(str));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">ANSIToUTF8</span><span class="params">(<span class="type">const</span> std::string &amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">UnicodeToUTF8</span>(<span class="built_in">ANSIToUnicode</span>(str));</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>C++11的标准库还是挺强大的，虽然这么强大，但是很多特性还不了解，因此还是要多扩宽自己的视野，不然有好东西都不知道用，那就棒槌了。</p><p>对了，在Linux下加上<code>setlocale(LC_CTYPE, &quot;&quot;)</code>后程序在命令行中可以正常显示，不加有可能不正常显示，原因是<code>setlocale(LC_CTYPE, &quot;&quot;)</code>也影响了<code>cout</code>，全局的嘛；而在CodeBlocks下不能正常显示，不知道为什么，但是调试的过程中，观察到了正常的结果；Visual Studio中没有做实验，不过应该没问题。</p><h2 id="封装库"><a href="#封装库" class="headerlink" title="封装库"></a>封装库</h2><figure class="highlight c++"><figcaption><span>character_encoding_conversion.hpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> CHARACTER_ENCODING_CONVERSION_HPP_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CHARACTER_ENCODING_CONVERSION_HPP_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;locale&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;codecvt&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span>  </span></span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">UnicodeToUTF8</span><span class="params">(<span class="type">const</span> std::wstring&amp; wstr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::string ret;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">std::wstring_convert&lt; std::codecvt_utf8&lt;<span class="type">wchar_t</span>&gt; &gt; wcv;</span><br><span class="line">ret = wcv.<span class="built_in">to_bytes</span>(wstr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">catch</span> (<span class="type">const</span> std::exception&amp; e) &#123;</span><br><span class="line">std::cerr &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">UTF8ToUnicode</span><span class="params">(<span class="type">const</span> std::string&amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::wstring ret;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">std::wstring_convert&lt; std::codecvt_utf8&lt;<span class="type">wchar_t</span>&gt; &gt; wcv;</span><br><span class="line">ret = wcv.<span class="built_in">from_bytes</span>(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">catch</span> (<span class="type">const</span> std::exception&amp; e) &#123;</span><br><span class="line">std::cerr &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">UnicodeToANSI</span><span class="params">(<span class="type">const</span> std::wstring&amp; wstr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::string ret;</span><br><span class="line">std::<span class="type">mbstate_t</span> state = &#123;&#125;;</span><br><span class="line"><span class="type">const</span> <span class="type">wchar_t</span>* src = wstr.<span class="built_in">data</span>();</span><br><span class="line"><span class="type">size_t</span> len = std::<span class="built_in">wcsrtombs</span>(<span class="literal">nullptr</span>, &amp;src, <span class="number">0</span>, &amp;state);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line"><span class="function">std::unique_ptr&lt; <span class="type">char</span>[] &gt; <span class="title">buff</span><span class="params">(<span class="keyword">new</span> <span class="type">char</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">len = std::<span class="built_in">wcsrtombs</span>(buff.<span class="built_in">get</span>(), &amp;src, len, &amp;state);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">ret.<span class="built_in">assign</span>(buff.<span class="built_in">get</span>(), len);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">ANSIToUnicode</span><span class="params">(<span class="type">const</span> std::string&amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::wstring ret;</span><br><span class="line">std::<span class="type">mbstate_t</span> state = &#123;&#125;;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* src = str.<span class="built_in">data</span>();</span><br><span class="line"><span class="type">size_t</span> len = std::<span class="built_in">mbsrtowcs</span>(<span class="literal">nullptr</span>, &amp;src, <span class="number">0</span>, &amp;state);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line"><span class="function">std::unique_ptr&lt; <span class="type">wchar_t</span>[] &gt; <span class="title">buff</span><span class="params">(<span class="keyword">new</span> <span class="type">wchar_t</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">len = std::<span class="built_in">mbsrtowcs</span>(buff.<span class="built_in">get</span>(), &amp;src, len, &amp;state);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">-1</span>) != len) &#123;</span><br><span class="line">ret.<span class="built_in">assign</span>(buff.<span class="built_in">get</span>(), len);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">UTF8ToANSI</span><span class="params">(<span class="type">const</span> std::string&amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">UnicodeToANSI</span>(<span class="built_in">UTF8ToUnicode</span>(str));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">ANSIToUTF8</span><span class="params">(<span class="type">const</span> std::string&amp; str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">UnicodeToUTF8</span>(<span class="built_in">ANSIToUnicode</span>(str));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// !CHARACTER_ENCODING_CONVERSION_HPP_</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><figcaption><span>main</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setlocale</span>(LC_CTYPE, <span class="string">&quot;&quot;</span>);</span><br><span class="line">std::cout &lt;&lt; <span class="built_in">UTF8ToANSI</span>(tmp) &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><hr><p><strong>参考：</strong></p><ul><li>《C++标准库》(第二版)</li><li><a href="https://en.cppreference.com/">C++ Reference</a></li><li><a href="https://msdn.microsoft.com/zh-cn/library/67tc3c7x%28v=vs.110%29.aspx">MSDN - mbsrtowcs</a></li></ul><p>转载：<a href="https://blog.csdn.net/FlushHip/article/details/82836867">https://blog.csdn.net/FlushHip/article/details/82836867</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;C++的项目，字符编码是一个大坑，不同平台之间的编码往往不一样，如果不同编码格式用一套字符读取格式读取就会出现乱码。因此，一般都是转化成UTF-8这种平台通用，且支持性很好的编码格式。&lt;/p&gt;
&lt;p&gt;Unicode、UTF-8的概念不做过多解释，这里说一下ANSI，我第一次看到这个名词，我看成了ASCII。被Mentor狠批一顿。&lt;/p&gt;</summary>
    
    
    
    <category term="疑难杂症" scheme="https://notes.camcad.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
    <category term="C++" scheme="https://notes.camcad.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-无法识别的标志“-scalableinclude-”(在“c1xx”中)</title>
    <link href="https://notes.camcad.cn/post/de726f2e.html"/>
    <id>https://notes.camcad.cn/post/de726f2e.html</id>
    <published>2023-09-07T10:02:19.000Z</published>
    <updated>2024-04-20T07:43:29.659Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>通过NX的<code>NXOpen C++ Wizard</code>向导创建项目，使用与NX不对应的VS<code>平台工具集</code>编译，出现<code>无法识别的标志“-scalableinclude-”(在“c1xx”中)</code>错误。<br><img src="http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_01.jpg" alt="无法识别的标志“-scalableinclude-”(在c1xx中)_01"></p><span id="more"></span><h3 id="NXOpen-C-Wizard"><a href="#NXOpen-C-Wizard" class="headerlink" title="NXOpen C++ Wizard"></a>NXOpen C++ Wizard</h3><p><img src="http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_00.jpg" alt="无法识别的标志“-scalableinclude-”(在c1xx中)_00"></p><h3 id="平台工具集"><a href="#平台工具集" class="headerlink" title="平台工具集"></a>平台工具集</h3><p><img src="http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_03.jpg" alt="无法识别的标志“-scalableinclude-”(在c1xx中)_03"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="一、解决模板问题"><a href="#一、解决模板问题" class="headerlink" title="一、解决模板问题"></a>一、解决模板问题</h3><p>找到<code>$(UGII_BASE_DIR)\UGOPEN\vs_files\VC\VCWizards\NX11_NXOpenCPP\scripts\1033\default.js</code>文件,通过记录本打开，将如下内容注释保存文件。然后把修改好的文件替换到VS中即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CLTool.AdditionalOptions = &quot;/d1scalableinclude-&quot;;</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_04.jpg" alt="无法识别的标志“-scalableinclude-”(在c1xx中)_04"></p><h3 id="二、解决项目出错"><a href="#二、解决项目出错" class="headerlink" title="二、解决项目出错"></a>二、解决项目出错</h3><p>打开项目配置<code>属性--&gt;配置属性--&gt;C/C++--&gt;所有选项--&gt;附加选项</code>将<code>/d1scalableinclude- %(AdditionalOptions)</code>删除后，保存即可。<br><img src="http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_02.jpg" alt="无法识别的标志“-scalableinclude-”(在c1xx中)_02"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;通过NX的&lt;code&gt;NXOpen C++ Wizard&lt;/code&gt;向导创建项目，使用与NX不对应的VS&lt;code&gt;平台工具集&lt;/code&gt;编译，出现&lt;code&gt;无法识别的标志“-scalableinclude-”(在“c1xx”中)&lt;/code&gt;错误。&lt;br&gt;&lt;img src=&quot;http://image.camcad.cn/2023/09/%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E7%9A%84%E6%A0%87%E5%BF%97%E2%80%9C-scalableinclude-%E2%80%9D(%E5%9C%A8c1xx%E4%B8%AD)_01.jpg&quot; alt=&quot;无法识别的标志“-scalableinclude-”(在c1xx中)_01&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="疑难杂症" scheme="https://notes.camcad.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>NX二次开发-自定义语言包(custom language)</title>
    <link href="https://notes.camcad.cn/post/4435e0f6.html"/>
    <id>https://notes.camcad.cn/post/4435e0f6.html</id>
    <published>2023-08-29T10:16:25.000Z</published>
    <updated>2024-04-20T07:43:29.659Z</updated>
    
    <content type="html"><![CDATA[<p>NX为国际化软件，本身支持多国语言包，同为二次开发的插件。有必要支持多语言，本章通过NX开放的接口，制作一个示例，翻译自定义语言文件中定义的其他字符串。</p><figure class="highlight txt"><figcaption><span>NX1953支持语言</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#if $&#123;UGII_LANG&#125; = &quot;english&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;en-US&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;braz_portuguese&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;pt-BR&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;czech&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;cs-CZ&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;french&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;fr-FR&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;german&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;de-DE&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;hungarian&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;en-US&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;italian&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;it-IT&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;japanese&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;ja-JP&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;korean&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;ko-KR&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;polish&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;pl-PL&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;russian&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;ru-RU&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;simpl_chinese&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;zh-CN&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;spanish&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;es-ES&quot;</span><br><span class="line">#endif</span><br><span class="line">#if $&#123;UGII_LANG&#125; = &quot;trad_chinese&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;zh-TW&quot;</span><br><span class="line">#endif</span><br><span class="line"># Set default help language as English &quot;en-US&quot;</span><br><span class="line">UGII_UGDOC_LANG=&quot;en-US&quot;</span><br></pre></td></tr></table></figure><span id="more"></span><h4 id="基础环境准备"><a href="#基础环境准备" class="headerlink" title="基础环境准备"></a>基础环境准备</h4><p>使用<code>%UGII_BASE_DIR%\localization\nldmgr.exe</code>插件，需要在环境变量<code>Path</code>中添加NX安装路径，不然会出现找不到<code>libsyss.dll</code>文件情况，示例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\Siemens\NX1953\NXBIN</span><br></pre></td></tr></table></figure><h3 id="操作步骤如下："><a href="#操作步骤如下：" class="headerlink" title="操作步骤如下："></a>操作步骤如下：</h3><h4 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h4><p>创建一个包含所有所需字符串内容的自定义语言文本文件。</p><figure class="highlight txt"><figcaption><span>simpl_chinese_custom.txt</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x27;My UIStyler Dialog&#x27; = &#x27;EMMET 我的 UIStyler 对话框&#x27;</span><br><span class="line">&#x27;Group1&#x27; = &#x27;EMMET 组一&#x27;</span><br><span class="line">&#x27;Description1&#x27; = &#x27;EMMET 描述一&#x27;</span><br><span class="line">&#x27;Distance1&#x27; = &#x27;EMMET 距离一&#x27;</span><br><span class="line"></span><br><span class="line">&#x27;My Blockstyler Dialog&#x27; = &#x27;EMMET 我的 Blockstyler 对话框&#x27;</span><br><span class="line">&#x27;Group2&#x27; = &#x27;EMMET 组二&#x27;</span><br><span class="line">&#x27;Description2&#x27; = &#x27;EMMET 描述二&#x27;</span><br><span class="line">&#x27;Distance2&#x27; = &#x27;EMMET 距离二&#x27;</span><br></pre></td></tr></table></figure><h4 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h4><p>使用NX语言转换插件，创建二进制语言文件。</p><figure class="highlight txt"><figcaption><span>例如：</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">## 方法一</span><br><span class="line">D:\emmet_translate_custom&gt;&quot;%UGII_BASE_DIR%\LOCALIZATION\nldmgr.exe&quot;</span><br><span class="line">nldmgr: Native Language Menu Dialog Manager</span><br><span class="line"></span><br><span class="line">Choose Option:</span><br><span class="line">    1. Text to Binary</span><br><span class="line">    2. Binary to Text</span><br><span class="line">    3. Generate Incremental Update File</span><br><span class="line">    4. Generate Translated File</span><br><span class="line">    5. Exit</span><br><span class="line">-&gt; 1</span><br><span class="line">Native Text File  : simpl_chinese_custom.txt</span><br><span class="line">Native Binary File: simpl_chinese_custom.lng</span><br><span class="line">Language Name     : simpl_chinese</span><br><span class="line"></span><br><span class="line">Converting text file to binary file...</span><br><span class="line">-&gt; 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 方法二</span><br><span class="line">D:\emmet_translate_custom&gt;&quot;%UGII_BASE_DIR%\LOCALIZATION\nldmgr.exe&quot; -c simpl_chinese_custom.txt simpl_chinese_custom.lng simpl_chinese</span><br><span class="line"></span><br><span class="line">Converting text file to binary file...</span><br></pre></td></tr></table></figure><h4 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h4><p>将自定义翻译文件加载到NX会话中。</p><figure class="highlight c++"><figcaption><span>接口代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Open C API:</span><br><span class="line">-------------</span><br><span class="line"><span class="built_in">UF_TEXT_init_native_lang_support</span>(<span class="type">void</span>)</span><br><span class="line"><span class="built_in">UF_TEXT_load_translation_file</span>(<span class="type">const</span> <span class="type">char</span> * file ) </span><br><span class="line"></span><br><span class="line">NXOpen UFWrapper:</span><br><span class="line">-------------------</span><br><span class="line">NXOpen.UF -&gt; UFText -&gt; <span class="built_in">InitNativeLangSupport</span>()</span><br><span class="line">NXOpen.UF -&gt; UFText -&gt; <span class="built_in">LoadTranslationFile</span>(string file)</span><br></pre></td></tr></table></figure><figure class="highlight c#"><figcaption><span>示例</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> NXOpen;</span><br><span class="line"><span class="keyword">using</span> NXOpen.UF;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">translation</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            Session theSession = Session.GetSession();</span><br><span class="line">            UFSession theUFSession = UFSession.GetUFSession();</span><br><span class="line">            String strUserDir = theSession.GetEnvironmentVariableValue(<span class="string">&quot;UGII_USER_DIR&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            String strLang=theSession.GetEnvironmentVariableValue(<span class="string">&quot;UGII_LANG&quot;</span>);</span><br><span class="line">            String strFile=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(strLang == <span class="string">&quot;simpl_chinese&quot;</span>)&#123;</span><br><span class="line">              strFile = strUserDir + <span class="string">@&quot;\simpl_chinese_custom.lng&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(strLang == <span class="string">&quot;german&quot;</span>)&#123;</span><br><span class="line">              strFile = strUserDir + <span class="string">@&quot;\german_custom.lng&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">              strFile = strUserDir + <span class="string">@&quot;\simpl_chinese_custom.lng&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            theUFSession.Text.InitNativeLangSupport();</span><br><span class="line">            theUFSession.Text.LoadTranslationFile(strFile) ;</span><br><span class="line">            UI.GetUI().NXMessageBox.Show(<span class="string">&quot;Loaded Translation File&quot;</span>, NXMessageBox.DialogType.Information, strFile);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            UI.GetUI().NXMessageBox.Show(<span class="string">&quot;C# Journal&quot;</span>, NXMessageBox.DialogType.Error, ex.ToString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="步骤四"><a href="#步骤四" class="headerlink" title="步骤四"></a>步骤四</h4><p>设置NX挂载插件环境变量<code>UGII_USER_DIR</code>值。</p><figure class="highlight txt"><figcaption><span>UGII_USER_DIR</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## 添加环境变量</span><br><span class="line">UGII_USER_DIR=D:\emmet_translate_custom</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 说明</span><br><span class="line">将环境变量UGII_USER_DIR设置为该文件夹。</span><br><span class="line">该示例添加了一个自定义功能区选项卡“GTAC Tab”，其中包含3个 C# Journal按钮：</span><br><span class="line">“Show BlockStyler”、“Show UIStyler”、“Load Translation”。</span><br><span class="line">通过这些按钮打开对话框以查看原始字符串内容。</span><br><span class="line">您也可以通过以下方式实例化UIStyler对话框加载翻译文件并再次打开对话框。</span><br><span class="line">所有对话框现在都将显示自定义翻译的字符串。</span><br></pre></td></tr></table></figure><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p><img src="http://image.camcad.cn/2023/09/nx_translate_custom.png" alt="nx_translate_custom"></p><h4 id="附件下载"><a href="#附件下载" class="headerlink" title="附件下载"></a>附件下载</h4><p><a href="https://solutions.industrysoftware.automation.siemens.com/srch/api/nx_api5392.zip">translate_custom_dialogs</a>)</p><hr><h3 id="原始文件"><a href="#原始文件" class="headerlink" title="原始文件"></a>原始文件</h3><figure class="highlight txt"><figcaption><span>translate_custom_dialogs.faq</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">Localization of custom Pre-NX6 UIStyler and Block UI Styler dialogs.</span><br><span class="line">===============================================================================</span><br><span class="line"></span><br><span class="line">Step 1) Create a custom language text file with all desired string contents.</span><br><span class="line"></span><br><span class="line">Sample custom.txt holding all strings used in custom DLG/DLX files:</span><br><span class="line">---------------------</span><br><span class="line">&#x27;My UIStyler Dialog&#x27; = &#x27;Mein UIStyler Dialog&#x27;</span><br><span class="line">&#x27;Group1&#x27; = &#x27;Gruppe1&#x27;</span><br><span class="line">&#x27;Description1&#x27; = &#x27;Beschreibung1&#x27;</span><br><span class="line">&#x27;Distance1&#x27; = &#x27;Distanz1&#x27;</span><br><span class="line">&#x27;My Blockstyler Dialog&#x27; = &#x27;Mein Blockstyler Dialog&#x27;</span><br><span class="line">&#x27;Group2&#x27; = &#x27;Gruppe2&#x27;</span><br><span class="line">&#x27;Description2&#x27; = &#x27;Beschreibung2&#x27;</span><br><span class="line">&#x27;Distance2&#x27; = &#x27;Distanz2&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Step 2) Create a binary language file from a NX command prompt.</span><br><span class="line"></span><br><span class="line">For example:</span><br><span class="line">---------------------</span><br><span class="line">D:\translate_custom_dialogs&gt;&quot;%UGII_BASE_DIR%\LOCALIZATION\nldmgr.exe&quot;</span><br><span class="line"> nldmgr: Native Language Menu Dialog Manager</span><br><span class="line"> Choose Option:</span><br><span class="line">    1. Text to Binary</span><br><span class="line">    2. Binary to Text</span><br><span class="line">    3. Generate Incremental Update File</span><br><span class="line">    4. Generate Translated File</span><br><span class="line">    5. Exit</span><br><span class="line">-&gt; 1</span><br><span class="line"> Native Text File  : custom.txt</span><br><span class="line"> Native Binary File: custom.lng</span><br><span class="line"> Language Name     : german</span><br><span class="line"></span><br><span class="line"> Converting text file to binary file...</span><br><span class="line">-&gt; 5</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">Step 3) Load your custom translation file into your NX session.</span><br><span class="line"></span><br><span class="line"> Open C API:</span><br><span class="line"> -------------</span><br><span class="line"> UF_TEXT_init_native_lang_support(void)</span><br><span class="line"> UF_TEXT_load_translation_file(const char * file ) </span><br><span class="line"></span><br><span class="line"> NXOpen UFWrapper:</span><br><span class="line"> -------------------</span><br><span class="line"> NXOpen.UF -&gt; UFText -&gt; InitNativeLangSupport()</span><br><span class="line"> NXOpen.UF -&gt; UFText -&gt; LoadTranslationFile(string file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Step 4) Implement the sample customization with a NX Ribbon Tab.</span><br><span class="line"></span><br><span class="line"> Extract the attached ZIP file archive to a new folder.</span><br><span class="line"> Set the environment variable UGII_USER_DIR to that folder.</span><br><span class="line"> The sample adds a custom Ribbon tab &#x27;GTAC&#x27; with 3 C# Journal Buttons:</span><br><span class="line"> &quot;Show BlockStyler&quot;, &quot;Show UIStyler&quot;, &quot;Load Translation&quot;.</span><br><span class="line"> Open the dialogs by those buttons to see the original string contents.</span><br><span class="line"> You may also instantiate the UIStyler dialog by </span><br><span class="line"> The load the translation file and open the dialogs again.</span><br><span class="line"> All dialogs will now show the custom translated strings instead.</span><br><span class="line"></span><br><span class="line">Attachments in ZIP:</span><br><span class="line">----------------------</span><br><span class="line"> \custom.lng</span><br><span class="line"> \custom.txt</span><br><span class="line"> \translate_custom_dialogs.avi</span><br><span class="line"> \translate_custom_dialogs.faq</span><br><span class="line"> \application\load_translation.cs</span><br><span class="line"> \application\myblockstyler.cs</span><br><span class="line"> \application\myblockstyler.dlx</span><br><span class="line"> \application\Myuistyler.cs</span><br><span class="line"> \application\myuistyler.dlg</span><br><span class="line"> \dfa\myuistyler.dfa</span><br><span class="line"> \startup\gtac_men.men</span><br><span class="line"> \startup\gtac_ribbon_tab.rtb</span><br><span class="line"></span><br><span class="line">See also</span><br><span class="line">------------</span><br><span class="line">&lt;a id=&quot;u_link&quot; href=&quot;http://solutions.industrysoftware.automation.siemens.com/view.php?si=nx_api4942&quot;&gt;Sample Open C API program : translate custom strings&lt;/a&gt;</span><br><span class="line">&lt;a id=&quot;u_link&quot; href=&quot;http://solutions.industrysoftware.automation.siemens.com/view.php?si=nx_api5245&quot;&gt;Sample NX Open .NET C# program : translate custom strings&lt;/a&gt;</span><br><span class="line">&lt;a id=&quot;u_link&quot; href=&quot;http://solutions.industrysoftware.automation.siemens.com/view.php?si=nx_api5392&quot;&gt;Getting Started with NXOpen : translate custom dialogs nx10&lt;/a&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;NX为国际化软件，本身支持多国语言包，同为二次开发的插件。有必要支持多语言，本章通过NX开放的接口，制作一个示例，翻译自定义语言文件中定义的其他字符串。&lt;/p&gt;
&lt;figure class=&quot;highlight txt&quot;&gt;&lt;figcaption&gt;&lt;span&gt;NX1953支持语言&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;english&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;braz_portuguese&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;pt-BR&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;czech&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;cs-CZ&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;french&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;fr-FR&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;german&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;de-DE&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;hungarian&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;italian&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;it-IT&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;japanese&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;ja-JP&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;korean&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;ko-KR&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;polish&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;pl-PL&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;russian&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;ru-RU&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;simpl_chinese&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;zh-CN&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;spanish&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;es-ES&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if $&amp;#123;UGII_LANG&amp;#125; = &amp;quot;trad_chinese&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;zh-TW&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Set default help language as English &amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UGII_UGDOC_LANG=&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="疑难杂症" scheme="https://notes.camcad.cn/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
    <category term="NX二次开发" scheme="https://notes.camcad.cn/tags/NX%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
