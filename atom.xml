<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蚂蚁Emmet</title>
  
  <subtitle>逆境求生存，顺境求发展</subtitle>
  <link href="https://notes.camcad.cn/atom.xml" rel="self"/>
  
  <link href="https://notes.camcad.cn/"/>
  <updated>2023-04-06T05:38:14.985Z</updated>
  <id>https://notes.camcad.cn/</id>
  
  <author>
    <name>蚂蚁Emmet</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++提高编程</title>
    <link href="https://notes.camcad.cn/post/13756432.html"/>
    <id>https://notes.camcad.cn/post/13756432.html</id>
    <published>2020-08-06T10:33:44.000Z</published>
    <updated>2023-04-06T05:38:14.985Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-提高编程"><a href="#C-提高编程" class="headerlink" title="C++提高编程"></a>C++提高编程</h1><p>本阶段主要针对 C++<code>泛型编程</code>和<code>STL</code>技术做详细讲解，探讨 C++更深层的使用。</p><h4 id="第一章：模板"><a href="#第一章：模板" class="headerlink" title="第一章：模板"></a>第一章：模板</h4><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">001</td><td align="left"><a href="https://notes.camcad.cn/post/e472be6d.html">C++提高编程01：模板（模板的概念）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=167">04:56</a></td></tr><tr><td align="center">002</td><td align="left"><a href="https://notes.camcad.cn/post/30168b8d.html">C++提高编程02：模板（函数模板-函数模板的语法）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=168">16:41</a></td></tr><tr><td align="center">003</td><td align="left"><a href="https://notes.camcad.cn/post/760e6263.html">C++提高编程03：模板（函数模板-函数模板注意事项）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=169">09:45</a></td></tr><tr><td align="center">004</td><td align="left"><a href="https://notes.camcad.cn/post/78da7e04.html">C++提高编程04：模板（函数模板-函数模板案例）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=170">12:13</a></td></tr><tr><td align="center">005</td><td align="left"><a href="https://notes.camcad.cn/post/b4e4aa78.html">C++提高编程05：模板（函数模板-普通函数与函数模板的区别）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=171">09:19</a></td></tr><tr><td align="center">006</td><td align="left"><a href="https://notes.camcad.cn/post/27f24ea2.html">C++提高编程06：模板（函数模板-普通函数与函数模板调用规则）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=172">11:59</a></td></tr><tr><td align="center">007</td><td align="left"><a href="https://notes.camcad.cn/post/1e329533.html">C++提高编程07：模板（函数模板-模板的局限性）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=173">12:33</a></td></tr><tr><td align="center">008</td><td align="left"><a href="https://notes.camcad.cn/post/64b85e0c.html">C++提高编程08：模板（类模板-类模板的语法）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=174">06:47</a></td></tr><tr><td align="center">009</td><td align="left"><a href="https://notes.camcad.cn/post/77590297.html">C++提高编程09：模板（类模板- 类模板与函数模板区别）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=175">07:49</a></td></tr><tr><td align="center">010</td><td align="left"><a href="https://notes.camcad.cn/post/c6fb3775.html">C++提高编程10：模板（类模板-类模板中成员函数创建时机）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=176">08:00</a></td></tr><tr><td align="center">011</td><td align="left"><a href="https://notes.camcad.cn/post/b9754251.html">C++提高编程11：模板（类模板-类模板对象做函数参数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=177">13:40</a></td></tr><tr><td align="center">012</td><td align="left"><a href="https://notes.camcad.cn/post/24f7c9.html">C++提高编程12：模板（类模板-类模板与继承）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=178">09:59</a></td></tr><tr><td align="center">013</td><td align="left"><a href="https://notes.camcad.cn/post/bbca2a77.html">C++提高编程13：模板（类模板-类模板成员函数类外实现）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=179">08:28</a></td></tr><tr><td align="center">014</td><td align="left"><a href="https://notes.camcad.cn/post/a5263ddf.html">C++提高编程14：模板（类模板-类模板分文件编写）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=180">13:18</a></td></tr><tr><td align="center">015</td><td align="left"><a href="https://notes.camcad.cn/post/809a0b8.html">C++提高编程15：模板（类模板-类模板与友元）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=181">12:56</a></td></tr><tr><td align="center">016</td><td align="left"><a href="https://notes.camcad.cn/post/a1b304bb.html">C++提高编程16：模板（类模板-类模板案例）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=182">06:37</a></td></tr></tbody></table><h4 id="第二章：C-STL-常用容器"><a href="#第二章：C-STL-常用容器" class="headerlink" title="第二章：C++ STL 常用容器"></a>第二章：C++ STL 常用容器</h4><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">017</td><td align="left"><a href="https://notes.camcad.cn/post/51a145f9.html">C++提高编程17：STL初识（STL的诞生，STL基本概念，STL六大组件，STL中容器、算法、迭代器）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=185">17:43</a></td></tr><tr><td align="center">018</td><td align="left"><a href="https://notes.camcad.cn/post/9ad20f91.html">C++提高编程18：STL初识（容器算法迭代器初识）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=186">14:11</a></td></tr><tr><td align="center">019</td><td align="left"><a href="https://notes.camcad.cn/post/41dab95a.html">C++提高编程19：STL常用容器（string容器-string基本概念）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=189">06:48</a></td></tr><tr><td align="center">020</td><td align="left"><a href="https://notes.camcad.cn/post/4cf03f75.html">C++提高编程20：STL常用容器（string容器-string构造函数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=189">00:00</a></td></tr><tr><td align="center">021</td><td align="left"><a href="https://notes.camcad.cn/post/1e20fd3e.html">C++提高编程21：STL常用容器（string容器-string赋值操作）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=190">07:15</a></td></tr><tr><td align="center">022</td><td align="left"><a href="https://notes.camcad.cn/post/688b2f27.html">C++提高编程22：STL常用容器（string容器-string字符串拼接）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=191">11:04</a></td></tr><tr><td align="center">023</td><td align="left"><a href="https://notes.camcad.cn/post/708754f6.html">C++提高编程23：STL常用容器（string容器-string查找和替换）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=192">10:56</a></td></tr><tr><td align="center">024</td><td align="left"><a href="https://notes.camcad.cn/post/35ac6e08.html">C++提高编程24：STL常用容器（string容器- string字符串比较）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=193">05:12</a></td></tr><tr><td align="center">025</td><td align="left"><a href="https://notes.camcad.cn/post/f8fa3b7d.html">C++提高编程25：STL常用容器（string容器- string字符存取）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=194">05:32</a></td></tr><tr><td align="center">026</td><td align="left"><a href="https://notes.camcad.cn/post/fda2c593.html">C++提高编程26：STL常用容器（string容器- string插入和删除）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=195">04:26</a></td></tr><tr><td align="center">027</td><td align="left"><a href="https://notes.camcad.cn/post/4addf364.html">C++提高编程27：STL常用容器（string容器- string子串）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=196">07:19</a></td></tr><tr><td align="center">028</td><td align="left"><a href="https://notes.camcad.cn/post/874b2290.html">C++提高编程28：STL常用容器（vector容器- vector基本概念）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=197">12:06</a></td></tr><tr><td align="center">029</td><td align="left"><a href="https://notes.camcad.cn/post/4a098d18.html">C++提高编程29：STL常用容器（vector容器- vector构造函数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=197">00:00</a></td></tr><tr><td align="center">030</td><td align="left"><a href="https://notes.camcad.cn/post/92771253.html">C++提高编程30：STL常用容器（vector容器- vector赋值操作）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=198">05:48</a></td></tr><tr><td align="center">031</td><td align="left"><a href="https://notes.camcad.cn/post/e82d8690.html">C++提高编程31：STL常用容器（vector容器- vector容量和大小）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=199">09:26</a></td></tr><tr><td align="center">032</td><td align="left"><a href="https://notes.camcad.cn/post/e8abcb67.html">C++提高编程32：STL常用容器（vector容器- vector插入和删除）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=200">08:30</a></td></tr><tr><td align="center">033</td><td align="left"><a href="https://notes.camcad.cn/post/7528e38.html">C++提高编程33：STL常用容器（vector容器- vector数据存取）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=201">04:48</a></td></tr><tr><td align="center">034</td><td align="left"><a href="https://notes.camcad.cn/post/ae7f0af0.html">C++提高编程34：STL常用容器（vector容器- vector互换容器）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=202">12:39</a></td></tr><tr><td align="center">035</td><td align="left"><a href="https://notes.camcad.cn/post/d3b74cd4.html">C++提高编程35：STL常用容器（vector容器- vector预留空间）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=203">06:54</a></td></tr><tr><td align="center">036</td><td align="left"><a href="https://notes.camcad.cn/post/2d258b96.html">C++提高编程36：STL常用容器（deque容器-deque容器基本概念）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=204">11:44</a></td></tr><tr><td align="center">037</td><td align="left"><a href="https://notes.camcad.cn/post/3ddb7e7f.html">C++提高编程37：STL常用容器（deque容器-deque构造函数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=204">00:00</a></td></tr><tr><td align="center">038</td><td align="left"><a href="https://notes.camcad.cn/post/7bcbbe51.html">C++提高编程38：STL常用容器（deque容器-deque赋值操作）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=205">04:30</a></td></tr><tr><td align="center">039</td><td align="left"><a href="https://notes.camcad.cn/post/ffb738d8.html">C++提高编程39：STL常用容器（deque容器-deque大小操作）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=206">07:09</a></td></tr><tr><td align="center">040</td><td align="left"><a href="https://notes.camcad.cn/post/8feeb365.html">C++提高编程40：STL常用容器（deque容器-deque插入和删除）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=207">13:07</a></td></tr><tr><td align="center">041</td><td align="left"><a href="https://notes.camcad.cn/post/2593a9e0.html">C++提高编程41：STL常用容器（deque容器-deque数据存取）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=208">04:25</a></td></tr><tr><td align="center">042</td><td align="left"><a href="https://notes.camcad.cn/post/f71fb165.html">C++提高编程42：STL常用容器（deque容器-deque排序）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=209">06:53</a></td></tr><tr><td align="center">043</td><td align="left"><a href="https://notes.camcad.cn/post/39e2ef53.html">C++提高编程43：STL常用容器（案例-评委打分）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=210">23:34</a></td></tr><tr><td align="center">044</td><td align="left"><a href="https://notes.camcad.cn/post/55b24c9e.html">C++提高编程44：STL常用容器（stack容器-stack基本概念）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=211">07:08</a></td></tr><tr><td align="center">045</td><td align="left"><a href="https://notes.camcad.cn/post/40b5411f.html">C++提高编程45：STL常用容器（stack容器-stack常用接口）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=212">06:49</a></td></tr><tr><td align="center">046</td><td align="left"><a href="https://notes.camcad.cn/post/8813420.html">C++提高编程46：STL常用容器（queue容器-queue基本概念）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=213">06:41</a></td></tr><tr><td align="center">047</td><td align="left"><a href="https://notes.camcad.cn/post/1d8639a1.html">C++提高编程47：STL常用容器（queue容器-queue常用接口）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=214">08:21</a></td></tr><tr><td align="center">048</td><td align="left"><a href="https://notes.camcad.cn/post/61296b91.html">C++提高编程48：STL常用容器（list容器-list基本概念）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=215">15:02</a></td></tr><tr><td align="center">049</td><td align="left"><a href="https://notes.camcad.cn/post/dd0dea70.html">C++提高编程49：STL常用容器（list容器-list构造函数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=216">05:30</a></td></tr><tr><td align="center">050</td><td align="left"><a href="https://notes.camcad.cn/post/95bac996.html">C++提高编程50：STL常用容器（list容器-list赋值和交换）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=217">06:46</a></td></tr><tr><td align="center">051</td><td align="left"><a href="https://notes.camcad.cn/post/91cc4878.html">C++提高编程51：STL常用容器（list容器-list大小操作）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=218">05:24</a></td></tr><tr><td align="center">052</td><td align="left"><a href="https://notes.camcad.cn/post/2aa283e5.html">C++提高编程52：STL常用容器（list容器-list插入和删除）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=219">11:44</a></td></tr><tr><td align="center">053</td><td align="left"><a href="https://notes.camcad.cn/post/7b56759a.html">C++提高编程53：STL常用容器（list容器-list数据存取）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=220">08:28</a></td></tr><tr><td align="center">054</td><td align="left"><a href="https://notes.camcad.cn/post/c17ab38c.html">C++提高编程54：STL常用容器（list容器-list反转和排序）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=221">12:18</a></td></tr><tr><td align="center">055</td><td align="left"><a href="https://notes.camcad.cn/post/d0f75ff3.html">C++提高编程55：STL常用容器（list容器-排序案例）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=222">12:39</a></td></tr><tr><td align="center">056</td><td align="left"><a href="https://notes.camcad.cn/post/b4fb037.html">C++提高编程56：STL常用容器（set&#x2F;multiset容器-set基本概念&#x2F;set构造和赋值）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=223">08:07</a></td></tr><tr><td align="center">057</td><td align="left"><a href="https://notes.camcad.cn/post/2e2675d0.html">C++提高编程57：STL常用容器（set&#x2F;multiset容器-set大小和交换）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=224">06:24</a></td></tr><tr><td align="center">058</td><td align="left"><a href="https://notes.camcad.cn/post/13341423.html">C++提高编程58：STL常用容器（set&#x2F;multiset容器-set插入和删除）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=225">05:52</a></td></tr><tr><td align="center">059</td><td align="left"><a href="https://notes.camcad.cn/post/42c5dc37.html">C++提高编程59：STL常用容器（set&#x2F;multiset容器-set查找和统计）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=226">06:25</a></td></tr><tr><td align="center">060</td><td align="left"><a href="https://notes.camcad.cn/post/2f1836d.html">C++提高编程60：STL常用容器（set&#x2F;multiset容器-set和multiset区别）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=227">08:33</a></td></tr><tr><td align="center">061</td><td align="left"><a href="https://notes.camcad.cn/post/e2e78da9.html">C++提高编程61：STL常用容器（set&#x2F;multiset容器-pair对组创建）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=228">04:15</a></td></tr><tr><td align="center">062</td><td align="left"><a href="https://notes.camcad.cn/post/2a5b6f84.html">C++提高编程62：STL常用容器（set&#x2F;multiset容器-set容器排序）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=229">08:14</a></td></tr><tr><td align="center">063</td><td align="left"><a href="https://notes.camcad.cn/post/752fb09b.html">C++提高编程63：STL常用容器（map&#x2F;multimap容器-map基本概念&#x2F;map构造和赋值）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=231">10:07</a></td></tr><tr><td align="center">064</td><td align="left"><a href="https://notes.camcad.cn/post/99f475b2.html">C++提高编程64：STL常用容器（map&#x2F;multimap容器-map大小和交换）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=232">07:28</a></td></tr><tr><td align="center">065</td><td align="left"><a href="https://notes.camcad.cn/post/16d449a4.html">C++提高编程65：STL常用容器（map&#x2F;multimap容器-map插入和删除）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=233">11:18</a></td></tr><tr><td align="center">066</td><td align="left"><a href="https://notes.camcad.cn/post/f0634711.html">C++提高编程66：STL常用容器（map&#x2F;multimap容器-map查找和统计）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=234">06:58</a></td></tr><tr><td align="center">067</td><td align="left"><a href="https://notes.camcad.cn/post/4fea10f2.html">C++提高编程67：STL常用容器（map&#x2F;multimap容器-map容器排序）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=235">07:15</a></td></tr><tr><td align="center">068</td><td align="left"><a href="https://notes.camcad.cn/post/b4f414d.html">C++提高编程68：STL常用容器（案例-员工分组）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=236">21:58</a></td></tr><tr><td align="center">069</td><td align="left"><a href="https://notes.camcad.cn/post/b9db3b6b.html">C++提高编程69：STL函数对象（函数对象）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=237">11:06</a></td></tr><tr><td align="center">070</td><td align="left"><a href="https://notes.camcad.cn/post/f42f72e5.html">C++提高编程70：STL函数对象（谓词）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=238">08:28</a></td></tr><tr><td align="center">071</td><td align="left"><a href="https://notes.camcad.cn/post/d7fa12cb.html">C++提高编程71：STL函数对象（内建函数对象-内建函数对象意义&#x2F;算术仿函数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=240">06:26</a></td></tr><tr><td align="center">072</td><td align="left"><a href="https://notes.camcad.cn/post/234337fe.html">C++提高编程72：STL函数对象（内建函数对象-关系仿函数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=241">07:08</a></td></tr><tr><td align="center">073</td><td align="left"><a href="https://notes.camcad.cn/post/bb18a6d3.html">C++提高编程73：STL函数对象（内建函数对象-逻辑仿函数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=242">07:37</a></td></tr><tr><td align="center">074</td><td align="left"><a href="https://notes.camcad.cn/post/437af6a8.html">C++提高编程74：STL常用算法（常用遍历算法-for_each）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=243">06:30</a></td></tr><tr><td align="center">075</td><td align="left"><a href="https://notes.camcad.cn/post/39184424.html">C++提高编程75：STL常用算法（常用遍历算法-transform）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=244">06:16</a></td></tr><tr><td align="center">076</td><td align="left"><a href="https://notes.camcad.cn/post/4e4670d3.html">C++提高编程76：STL常用算法（常用查找算法）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=245">12:26</a></td></tr><tr><td align="center">077</td><td align="left"><a href="https://notes.camcad.cn/post/c9c5a6ae.html">C++提高编程77：STL常用算法（常用排序算法）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=251">05:31</a></td></tr><tr><td align="center">078</td><td align="left"><a href="https://notes.camcad.cn/post/b764b3e7.html">C++提高编程78：STL常用算法（常用拷贝和替换算法）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=255">04:56</a></td></tr><tr><td align="center">079</td><td align="left"><a href="https://notes.camcad.cn/post/56601927.html">C++提高编程79：STL常用算法（常用算术生成算法）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=259">05:18</a></td></tr><tr><td align="center">080</td><td align="left"><a href="https://notes.camcad.cn/post/dfef9d8b.html">C++提高编程80：STL常用算法（常用集合算法）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=259">10:26</a></td></tr><tr><td align="center">081</td><td align="left"><a href="https://notes.camcad.cn/post/adbe7ef1.html">C++提高编程81：演讲比赛流程管理系统</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=264">08:36</a></td></tr><tr><td align="center">082</td><td align="left"><a href="https://notes.camcad.cn/post/17c061d0.html">C++提高编程82：演讲比赛流程管理系统-头文件&#x2F;源文件</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=264">00:00</a></td></tr><tr><td align="center">083</td><td align="left"><a href="https://notes.camcad.cn//post/d0efdeb2.html">C++面向对象（案列）：机房预约系统(头文件&#x2F;源文件)</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=282">08:03</a></td></tr><tr><td align="center">084</td><td align="left"><a href="https://notes.camcad.cn/post/b0cae4ad.html">C++面向对象（案列）：机房预约系统(头文件&#x2F;源文件)</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=282">00:00</a></td></tr></tbody></table><h3 id="视频转载-bilibili博主《黑马程序员》"><a href="#视频转载-bilibili博主《黑马程序员》" class="headerlink" title="视频转载 bilibili博主《黑马程序员》"></a>视频转载 bilibili博主《<a href="https://space.bilibili.com/37974444?spm_id_from=333.788.b_765f7570696e666f.2">黑马程序员</a>》</h3>]]></content>
    
    
    <summary type="html">C++提高编程目录</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++面向对象（案列）：机房预约系统(头文件/源文件)</title>
    <link href="https://notes.camcad.cn/post/b0cae4ad.html"/>
    <id>https://notes.camcad.cn/post/b0cae4ad.html</id>
    <published>2020-08-06T10:09:17.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="机房预约系统"><a href="#机房预约系统" class="headerlink" title="机房预约系统"></a>机房预约系统</h1><h2 id="机房预约系统-cpp（源文件）"><a href="#机房预约系统-cpp（源文件）" class="headerlink" title="机房预约系统.cpp（源文件）"></a>机房预约系统.cpp（源文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once;</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&quot;globalFile.h&quot;</span></span><br><span class="line"><span class="meta">#include&quot;Identity.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;fstream&gt;</span></span><br><span class="line"><span class="meta">#include&quot;student.h&quot;</span></span><br><span class="line"><span class="meta">#include&quot;teacher.h&quot;</span></span><br><span class="line"><span class="meta">#include&quot;manager.h&quot;</span></span><br><span class="line"><span class="meta">#include&quot;student.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//登陆功能  参数1：操作的文件名，参数2：类型</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loginIn</span>(<span class="params"><span class="built_in">string</span> fileName, <span class="built_in">int</span> type</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//管理员 子菜单</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">managerMenu</span>(<span class="params">Identity * &amp;p</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//学生代表 子菜单</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">studentMenu</span>(<span class="params">Identity * &amp;p</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//老师代表 子菜单</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">teacherMenu</span>(<span class="params">Identity * &amp;p</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;     <span class="comment">//用于接收用户的选择</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;====================  欢迎来到《蚂蚁》预约系统  ====================&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的身份：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           1.学生代表           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           2.教    师           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           3.管 理 员           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           0.退    出           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入您的选择：&quot;</span>;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;        <span class="comment">//接收用户选择</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (<span class="keyword">select</span>)     <span class="comment">//根据用户选择 实现不同接口的功能</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:     <span class="comment">//学生代表</span></span><br><span class="line">            loginIn(STUDENT_FILE, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:     <span class="comment">//教    师</span></span><br><span class="line">            loginIn(TEACHER_FILE, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:     <span class="comment">//管 理 员</span></span><br><span class="line">            loginIn(ADMIN_FILE, <span class="number">3</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:     <span class="comment">//退出系统</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;欢迎下次使用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="literal">default</span>:</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//登录功能</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loginIn</span>(<span class="params"><span class="built_in">string</span> fileName, <span class="built_in">int</span> type</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开文件-读操作</span></span><br><span class="line">    ifs.open(fileName, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件是否存在</span></span><br><span class="line">    <span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        ifs.close();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//学号/编号</span></span><br><span class="line">    <span class="built_in">int</span> id = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户名</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//密码</span></span><br><span class="line">    <span class="built_in">string</span> pwd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (type == <span class="number">1</span>)      <span class="comment">//学生登录</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入学号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>) <span class="comment">//职工登录</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入用户名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入密码：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//基类创建</span></span><br><span class="line">    Identity *person = NULL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (type == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//学生登录验证</span></span><br><span class="line">        <span class="built_in">int</span> fId = <span class="number">0</span>;    <span class="comment">//文件 学号</span></span><br><span class="line">        <span class="built_in">string</span> fName;   <span class="comment">//文件 用户名</span></span><br><span class="line">        <span class="built_in">string</span> fPwd;    <span class="comment">//文件 密码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (ifs &gt;&gt; fId &amp;&amp; ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//与用户输入的信息做对比</span></span><br><span class="line">            <span class="keyword">if</span> (fId == id &amp;&amp; fName == name &amp;&amp; fPwd == pwd)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;学生验证登录成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">                system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                person = <span class="keyword">new</span> Student(id, name, pwd);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//进入学生身份的子菜单</span></span><br><span class="line">                studentMenu(person);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//教师登录验证</span></span><br><span class="line">        <span class="built_in">int</span> fId = <span class="number">0</span>;    <span class="comment">//文件 编号</span></span><br><span class="line">        <span class="built_in">string</span> fName;   <span class="comment">//文件 用户名</span></span><br><span class="line">        <span class="built_in">string</span> fPwd;    <span class="comment">//文件 密码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (ifs &gt;&gt; fId &amp;&amp; ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//与用户输入的信息做对比</span></span><br><span class="line">            <span class="keyword">if</span> (fId == id &amp;&amp; fName == name &amp;&amp; fPwd == pwd)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;教师验证登录成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">                system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                person = <span class="keyword">new</span> Teacher(id, name, pwd);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//进入老师身份的子菜单</span></span><br><span class="line">                teacherMenu(person);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//管理员登录验证</span></span><br><span class="line">        <span class="built_in">string</span> fName;   <span class="comment">//文件 用户名</span></span><br><span class="line">        <span class="built_in">string</span> fPwd;    <span class="comment">//文件 密码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//与用户输入的信息做对比</span></span><br><span class="line">            <span class="keyword">if</span> (fName == name &amp;&amp; fPwd == pwd)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;管理员验证登录成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">                system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                person = <span class="keyword">new</span> Manager(name, pwd);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//进入管理员身份的子菜单</span></span><br><span class="line">                managerMenu(person);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;验证登录失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//管理员 子菜单</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">managerMenu</span>(<span class="params">Identity * &amp;p</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//调用 管理员 子菜单</span></span><br><span class="line">        p-&gt;openMenu();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将父类指针 转为子类指针，调用子类里其他接口</span></span><br><span class="line">        Manager *ma = (Manager*)p;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收用户选项</span></span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span>;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)        <span class="comment">//添加账号</span></span><br><span class="line">        &#123;</span><br><span class="line">            ma-&gt;addPerson();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">2</span>)   <span class="comment">//查看账号</span></span><br><span class="line">        &#123;</span><br><span class="line">            ma-&gt;showPerson();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">3</span>)   <span class="comment">//查看机房</span></span><br><span class="line">        &#123;</span><br><span class="line">            ma-&gt;showComputer();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">4</span>)   <span class="comment">//清空预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            ma-&gt;cleanFile();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">0</span>)   <span class="comment">//注销登录</span></span><br><span class="line">        &#123;</span><br><span class="line">            delete p;       <span class="comment">//释放堆区对象</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;注销登录成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//学生代表 子菜单</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">studentMenu</span>(<span class="params">Identity * &amp;p</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//调用 学生代表 子菜单</span></span><br><span class="line">        p-&gt;openMenu();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将父类指针 转为子类指针，调用子类里其他接口</span></span><br><span class="line">        Student *stu = (Student*)p;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收用户选项</span></span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span>;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)        <span class="comment">//申请预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            stu-&gt;applyOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">2</span>)   <span class="comment">//查看我的预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            stu-&gt;showMyOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">3</span>)   <span class="comment">//查看所有预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            stu-&gt;showAllOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">4</span>)   <span class="comment">//取消预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            stu-&gt;cancelOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">0</span>)   <span class="comment">//注销登录</span></span><br><span class="line">        &#123;</span><br><span class="line">            delete p;       <span class="comment">//释放堆区对象</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;注销登录成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//老师 子菜单</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">teacherMenu</span>(<span class="params">Identity * &amp;p</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//调用 老师 子菜单</span></span><br><span class="line">        p-&gt;openMenu();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将父类指针 转为子类指针，调用子类里其他接口</span></span><br><span class="line">        Teacher *tea = (Teacher*)p;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收用户选项</span></span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span>;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="computerRoom-h（头文件）"><a href="#computerRoom-h（头文件）" class="headerlink" title="computerRoom.h（头文件）"></a>computerRoom.h（头文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//机房类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">computerRoom</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//机房编号</span></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="globalFile-h（头文件）"><a href="#globalFile-h（头文件）" class="headerlink" title="globalFile.h（头文件）"></a>globalFile.h（头文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//管理员文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ADMIN_FILE &quot;admin.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//学生文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STUDENT_FILE &quot;student.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//教师文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TEACHER_FILE &quot;teacher.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//机房信息文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COMPUTER_FILE &quot;computerRoom.txt&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Identity-h（头文件）"><a href="#Identity-h（头文件）" class="headerlink" title="Identity.h（头文件）"></a>Identity.h（头文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once    //防止头文件重复定义</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//身份抽象类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Identity</span>      <span class="comment">//同一特性类</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//操作菜单 纯虚函数</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">openMenu</span>()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户名称</span></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="orderFile-h（头文件）"><a href="#orderFile-h（头文件）" class="headerlink" title="orderFile.h（头文件）"></a>orderFile.h（头文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&quot;globalFile.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;map&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&lt;fstream&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">orderFile</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    orderFile();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//更新预约记录</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">initMap</span>(<span class="params"><span class="built_in">string</span> str</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//临时容器</span></span><br><span class="line">    map&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;m_tempMap;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//记录的容器 key---记录的条数 value---具体要求记录的键值对信息</span></span><br><span class="line">    map&lt;<span class="built_in">int</span>, map&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;&gt; m_OrderData;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="orderFile-cpp（源文件）"><a href="#orderFile-cpp（源文件）" class="headerlink" title="orderFile.cpp（源文件）"></a>orderFile.cpp（源文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &quot;orderFile.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">orderFile::orderFile()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_OrderData.clear();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//预约记录个数</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取文件中的数据 </span></span><br><span class="line">    <span class="built_in">string</span> date;        <span class="comment">//时间</span></span><br><span class="line">    <span class="built_in">string</span> interval;    <span class="comment">//时间段</span></span><br><span class="line">    <span class="built_in">string</span> stuId;       <span class="comment">//学生学号</span></span><br><span class="line">    <span class="built_in">string</span> stuName;     <span class="comment">//学生姓名</span></span><br><span class="line">    <span class="built_in">string</span> roomId;      <span class="comment">//机房编号</span></span><br><span class="line">    <span class="built_in">string</span> status;      <span class="comment">//预约状态</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    <span class="function">ifstream <span class="title">ifs</span>(<span class="params">ORDER_FILE, ios::<span class="keyword">in</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取内容</span></span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; date &amp;&amp; ifs &gt;&gt; interval &amp;&amp; ifs &gt;&gt; stuId &amp;&amp; ifs &gt;&gt;</span><br><span class="line">        stuName &amp;&amp; ifs &gt;&gt; roomId &amp;&amp; ifs &gt;&gt; status)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//初始化临时容器</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_tempMap.clear();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将数据放入到临时容器中</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(date);     <span class="comment">//时间</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(interval); <span class="comment">//时间段</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(stuId);        <span class="comment">//学生学号</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(stuName);      <span class="comment">//学生姓名</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(roomId);       <span class="comment">//机房编号</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(status);       <span class="comment">//预约状态</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//将数据放入到容器中</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_OrderData.insert(make_pair(<span class="keyword">this</span>-&gt;m_Size, <span class="keyword">this</span>-&gt;m_tempMap));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//预约记录个数</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Size++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新预约记录</span></span><br><span class="line"><span class="keyword">void</span> orderFile::updateOrder()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;     <span class="comment">//预约记录0条，直接return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    <span class="function">ofstream <span class="title">ofs</span>(<span class="params">ORDER_FILE, ios::<span class="keyword">out</span>  ios::trunc</span>)</span>;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;date:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;date&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;interval:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;interval&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;stuId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;stuId&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;stuName:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;stuName&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;roomId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;roomId&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;status:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;status&quot;</span>] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化容器</span></span><br><span class="line"><span class="keyword">void</span> orderFile::initMap(<span class="built_in">string</span> str)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> tempKey;     <span class="comment">//临时Key值</span></span><br><span class="line">    <span class="built_in">string</span> tempValue;   <span class="comment">//临时Value值</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> start = <span class="number">0</span>;              <span class="comment">//起始位置</span></span><br><span class="line">    <span class="built_in">int</span> pos = str.find(<span class="string">&quot;:&quot;</span>);  <span class="comment">//返回&quot;:&quot;的位置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//不等于 -1 执行</span></span><br><span class="line">    <span class="keyword">if</span> (pos != <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tempKey = str.substr(start, pos);</span><br><span class="line">        tempValue = str.substr(pos + <span class="number">1</span>, str.size() - pos - <span class="number">1</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="manager-h（头文件）"><a href="#manager-h（头文件）" class="headerlink" title="manager.h（头文件）"></a>manager.h（头文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&quot;Identity.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&quot;globalFile.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;fstream&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&quot;student.h&quot;</span></span><br><span class="line"><span class="meta">#include&quot;teacher.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&quot;computerRoom.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Manager</span> :<span class="title">public</span> <span class="title">Identity</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//默认构造</span></span><br><span class="line">    Manager();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造 参数：姓名，密码</span></span><br><span class="line">    Manager(<span class="built_in">string</span> name, <span class="built_in">string</span> pwd);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//操作菜单</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">openMenu</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加帐号</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addPerson</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看帐号</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showPerson</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看机房</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showComputer</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//清空预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">cleanFile</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">initVector</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//学生容器</span></span><br><span class="line">    vector&lt;Student&gt;vStu;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//教师容器</span></span><br><span class="line">    vector&lt;Teacher&gt;vTea;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检查重复 参数：（传入id,传入类型）返回值：（true代表有重复，false代表没有重复）</span></span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">checkRepeat</span>(<span class="params"><span class="built_in">int</span> id, <span class="built_in">int</span> type</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//机房容器</span></span><br><span class="line">    vector&lt;computerRoom&gt;vCom;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="manager-cpp（源文件）"><a href="#manager-cpp（源文件）" class="headerlink" title="manager.cpp（源文件）"></a>manager.cpp（源文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&quot;manager.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Manager::Manager()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造 参数：用户名称，用户密码</span></span><br><span class="line">Manager::Manager(<span class="built_in">string</span> name, <span class="built_in">string</span> pwd)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;initVector();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//操作菜单</span></span><br><span class="line"><span class="keyword">void</span> Manager::openMenu()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎管理员：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot; 登录&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           1.添加账号           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           2.查看账号           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           3.查看机房           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           4.清空预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           0.注销登录           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加帐号</span></span><br><span class="line"><span class="keyword">void</span> Manager::addPerson()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;     <span class="comment">//接收用户的选择</span></span><br><span class="line">    <span class="built_in">string</span> fileName;    <span class="comment">//文件名称</span></span><br><span class="line">    <span class="built_in">string</span> tip;         <span class="comment">//提示需要输入的ip号</span></span><br><span class="line">    <span class="built_in">string</span> errorTip;    <span class="comment">//重复错误提示</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入添加账号类型：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1.添加学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2.添加教师&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            fileName = STUDENT_FILE;</span><br><span class="line">            tip = <span class="string">&quot;请输入学号：&quot;</span>;</span><br><span class="line">            errorTip = <span class="string">&quot;学号重复，请重新输入！\n&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            fileName = TEACHER_FILE;</span><br><span class="line">            tip = <span class="string">&quot;请输入职工编号：&quot;</span>;</span><br><span class="line">            errorTip = <span class="string">&quot;职工编号重复，请重新输入！\n&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);  </span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);        <span class="comment">//清屏</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>-&gt;openMenu();    <span class="comment">//调用 管理员 子菜单</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开文件-写内容</span></span><br><span class="line">    ofs.open(fileName, ios::<span class="keyword">out</span>  ios::app);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取用户的输入</span></span><br><span class="line">    <span class="built_in">int</span> id;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="built_in">string</span> pwd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; tip;  <span class="comment">//学号或职工编号</span></span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line">        <span class="built_in">bool</span> ret = <span class="keyword">this</span>-&gt;checkRepeat(id, <span class="keyword">select</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ret)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; errorTip;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入用户名：&quot;</span>;</span><br><span class="line">    cin &gt;&gt; name;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入密码：&quot;</span>;</span><br><span class="line">    cin &gt;&gt; pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//向文件添加数据</span></span><br><span class="line">    ofs &lt;&lt; id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; pwd &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;initVector();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;添加成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印输出类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">myPrintClass</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//学生 仿函数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operator</span>()(<span class="params">Student &amp;s</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;学号：&quot;</span> &lt;&lt; s.m_Id &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; s.m_Name &lt;&lt; <span class="string">&quot;\t密码：&quot;</span> &lt;&lt; s.m_Pwd &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//教师 仿函数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operator</span>()(<span class="params">Teacher &amp;t</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; t.m_EmpId &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; t.m_Name &lt;&lt; <span class="string">&quot;\t密码：&quot;</span> &lt;&lt; t.m_Pwd &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//机房 仿函数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operator</span>()(<span class="params">computerRoom &amp;c</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;机房编号：&quot;</span> &lt;&lt; c.m_Name &lt;&lt; <span class="string">&quot;\t机房最大容量：&quot;</span> &lt;&lt; c.m_Maximum &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看帐号</span></span><br><span class="line"><span class="keyword">void</span> Manager::showPerson()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//接收用户的输入</span></span><br><span class="line">    <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1、查看所有学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2、查看所有教师&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//遍历学生容器 所有元素</span></span><br><span class="line">            for_each(vStu.begin(), vStu.end(), myPrintClass());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//遍历教师容器 所有元素</span></span><br><span class="line">            for_each(vTea.begin(), vTea.end(), myPrintClass());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入错误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//调用 管理员 子菜单</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;openMenu();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看机房</span></span><br><span class="line"><span class="keyword">void</span> Manager::showComputer()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;机房信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历机房容器 所有元素</span></span><br><span class="line">    for_each(vCom.begin(), vCom.end(), myPrintClass());</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空预约</span></span><br><span class="line"><span class="keyword">void</span> Manager::cleanFile()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建流文件（如果文件存在先删除，再创建)</span></span><br><span class="line">    <span class="function">ofstream <span class="title">ofs</span>(<span class="params">ORDER_FILE, ios::trunc</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化容器</span></span><br><span class="line"><span class="keyword">void</span> Manager::initVector()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;vStu.clear();</span><br><span class="line">    <span class="keyword">this</span>-&gt;vTea.clear();</span><br><span class="line">    <span class="keyword">this</span>-&gt;vCom.clear();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取学生文件中信息</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.open(STUDENT_FILE, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//char ch;</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>/判断文件是否存在</span></span><br><span class="line">    <span class="comment">//if (!ifs.is_open())</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; &quot;学生 文件读取失败！&quot; &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  ifs.close();</span></span><br><span class="line">    <span class="comment">//  return;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>/判断文件是否为空</span></span><br><span class="line">    <span class="comment">//ifs &gt;&gt; ch;</span></span><br><span class="line">    <span class="comment">//if (ifs.eof())</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; &quot;学生 文件为空！&quot; &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  ifs.close();</span></span><br><span class="line">    <span class="comment">//  return;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="comment">//ifs.putback(ch);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//读内容</span></span><br><span class="line">    Student s;</span><br><span class="line">    <span class="comment">//将数据放入到容器中</span></span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; s.m_Id &amp;&amp; ifs &gt;&gt; s.m_Name &amp;&amp; ifs &gt;&gt; s.m_Pwd)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;vStu.push_back(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; &quot;学生数量为：&quot; &lt;&lt; this-&gt;vStu.size() &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取教师文件中信息</span></span><br><span class="line">    ifs.open(TEACHER_FILE, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>/判断文件是否存在</span></span><br><span class="line">    <span class="comment">//if (!ifs.is_open())</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; &quot;教师 文件读取失败！&quot; &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  ifs.close();</span></span><br><span class="line">    <span class="comment">//  return;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>/判断文件是否为空</span></span><br><span class="line">    <span class="comment">//ifs &gt;&gt; ch;</span></span><br><span class="line">    <span class="comment">//if (ifs.eof())</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; &quot;教师 文件为空！&quot; &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  ifs.close();</span></span><br><span class="line">    <span class="comment">//  return;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="comment">//ifs.putback(ch);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//读内容</span></span><br><span class="line">    Teacher t;</span><br><span class="line">    <span class="comment">//将数据放入到容器中</span></span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; t.m_EmpId &amp;&amp; ifs &gt;&gt; t.m_Name &amp;&amp; ifs &gt;&gt; t.m_Pwd)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;vTea.push_back(t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; &quot;教师数量为：&quot; &lt;&lt; this-&gt;vTea.size() &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取机房文件中信息</span></span><br><span class="line">    ifs.open(COMPUTER_FILE, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>/判断文件是否存在</span></span><br><span class="line">    <span class="comment">//if (!ifs.is_open())</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; &quot;机房 文件读取失败！&quot; &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  ifs.close();</span></span><br><span class="line">    <span class="comment">//  return;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>/判断文件是否为空</span></span><br><span class="line">    <span class="comment">//ifs &gt;&gt; ch;</span></span><br><span class="line">    <span class="comment">//if (ifs.eof())</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; &quot;机房 文件为空！&quot; &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  ifs.close();</span></span><br><span class="line">    <span class="comment">//  return;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="comment">//ifs.putback(ch);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//读内容</span></span><br><span class="line">    computerRoom c;</span><br><span class="line">    <span class="comment">//将数据放入到容器中</span></span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; c.m_Name &amp;&amp; ifs &gt;&gt; c.m_Maximum)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;vCom.push_back(c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; &quot;机房数量为：&quot; &lt;&lt; this-&gt;vCom.size() &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="student-h（头文件）"><a href="#student-h（头文件）" class="headerlink" title="student.h（头文件）"></a>student.h（头文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&quot;Identity.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&quot;computerRoom.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;fstream&gt;</span></span><br><span class="line"><span class="meta">#include&quot;globalFile.h&quot;</span></span><br><span class="line"><span class="meta">#include&quot;orderFile.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Student</span> :<span class="title">public</span> <span class="title">Identity</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//默认构造</span></span><br><span class="line">    Student();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造  参数：学号、姓名、密码</span></span><br><span class="line">    Student(<span class="built_in">int</span> id, <span class="built_in">string</span> name, <span class="built_in">string</span> pwd);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//操作菜单</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">openMenu</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//申请预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">applyOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看自身的预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showMyOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看所有预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showAllOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//取消预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">cancelOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~Student();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//学号</span></span><br><span class="line">    <span class="built_in">int</span> m_Id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//容器初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">initVector</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//机房容器</span></span><br><span class="line">    vector&lt;computerRoom&gt;vCom;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="student-cpp（源文件）"><a href="#student-cpp（源文件）" class="headerlink" title="student.cpp（源文件）"></a>student.cpp（源文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&quot;student.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Student::Student()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造</span></span><br><span class="line">Student::Student(<span class="built_in">int</span> id, <span class="built_in">string</span> name, <span class="built_in">string</span> pwd)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化属性</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Id = id;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//容器初始化</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;initVector();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//操作菜单</span></span><br><span class="line"><span class="keyword">void</span> Student::openMenu()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎学生代表：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot; 登录&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           1.申请预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           2.我的预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           3.所有预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           4.取消预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           0.注销登录           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//申请预约</span></span><br><span class="line"><span class="keyword">void</span> Student::applyOrder()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> date = <span class="number">0</span>;           <span class="comment">//周一~周五</span></span><br><span class="line">    <span class="built_in">int</span> interval = <span class="number">0</span>;       <span class="comment">//上午、下午</span></span><br><span class="line">    <span class="built_in">int</span> roomId = <span class="number">0</span>;         <span class="comment">//机房容量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;机房开放的时间为周一至周五！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入申请预约的时间：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1、周一&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2、周二&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;3、周三&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;4、周四&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;5、周五&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; date;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">1</span> &lt;= date &amp;&amp; date &lt;= <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//调用 学生 子菜单</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;openMenu();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入申请预约的时间段：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1、上午&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2、下午&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; interval;</span><br><span class="line">        <span class="keyword">if</span> (interval &gt;= <span class="number">1</span> &amp;&amp; interval &lt;= <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择机房：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; vCom.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="keyword">this</span>-&gt;vCom[i].m_Name &lt;&lt; <span class="string">&quot;机房 容量：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;vCom[i].m_Maximum &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; roomId;</span><br><span class="line">        <span class="keyword">if</span> (roomId &gt;= <span class="number">1</span> &amp;&amp; roomId &lt;= <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    <span class="function">ofstream <span class="title">ofs</span>(<span class="params">ORDER_FILE, ios::<span class="keyword">out</span>  ios::app</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插入数据</span></span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;date:&quot;</span> &lt;&lt; date &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;interval:&quot;</span> &lt;&lt; interval &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;stuId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Id &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;stuName:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;roomId:&quot;</span> &lt;&lt; roomId &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;status:&quot;</span> &lt;&lt; <span class="number">1</span> &lt;&lt; endl;      <span class="comment">//1：审核中</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;预约成功，审核中&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看自身的预约</span></span><br><span class="line"><span class="keyword">void</span> Student::showMyOrder()</span><br><span class="line">&#123;</span><br><span class="line">    orderFile ord;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ord.m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; ord.m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//string 转 int</span></span><br><span class="line">        <span class="comment">//string 利用 .c_str() 转 const char *</span></span><br><span class="line">        <span class="comment">//利用 atoi(const char *) 转 int</span></span><br><span class="line">        <span class="keyword">if</span> (atoi(ord.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>].c_str()) == <span class="keyword">this</span>-&gt;m_Id)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; ord.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;   时段：&quot;</span> &lt;&lt; (ord.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;   机房编号：&quot;</span> &lt;&lt; ord.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line"></span><br><span class="line">            <span class="comment">//1审核中 2已预约 0取消预约 -1预约失败</span></span><br><span class="line">            <span class="built_in">string</span> status = <span class="string">&quot;   状态：&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (ord.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (ord.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                status += <span class="string">&quot;已预约&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (ord.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                status += <span class="string">&quot;预约失败&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="keyword">void</span> Student::showAllOrder()</span><br><span class="line">&#123;</span><br><span class="line">    orderFile of;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;、&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t学号：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuName&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t机房编号：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> status = <span class="string">&quot;\t状态：&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;已预约&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;预约失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取消预约</span></span><br><span class="line"><span class="keyword">void</span> Student::cancelOrder()</span><br><span class="line">&#123;</span><br><span class="line">    orderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v;     <span class="comment">//存放在最大容器中的下标编号</span></span><br><span class="line">    <span class="built_in">int</span> index = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//先判断自身学号</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Id == atoi(of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>].c_str()))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//再筛选状态 审核中或预约成功</span></span><br><span class="line">            <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>  of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//放入到容器中</span></span><br><span class="line">                v.push_back(i);</span><br><span class="line"></span><br><span class="line">                cout &lt;&lt; index &lt;&lt; <span class="string">&quot;、&quot;</span>;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\t时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\t机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line"></span><br><span class="line">                <span class="built_in">string</span> status = <span class="string">&quot; \t状态：&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    status += <span class="string">&quot;已预约&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//记录下标加1</span></span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (v.size() == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有审核中或已预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;审核中或预约成功的记录可以取消，请输入取消的记录：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入取消预约状态的序号，0 表示返回&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> &gt;= <span class="number">0</span> &amp;&amp; <span class="keyword">select</span> &lt;= v.size())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                of.m_OrderData[v[<span class="keyword">select</span> - <span class="number">1</span>]][<span class="string">&quot;status&quot;</span>] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                of.updateOrder();</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;已取消预约！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">Student::~Student()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//容器初始化</span></span><br><span class="line"><span class="keyword">void</span> Student::initVector()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;vCom.clear();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.open(COMPUTER_FILE, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建临时接收类</span></span><br><span class="line">    computerRoom com;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取数据</span></span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; com.m_Name &amp;&amp; ifs &gt;&gt; com.m_Maximum)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将读取的信息放入到 容器中</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;vCom.push_back(com);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="teacher-h（头文件）"><a href="#teacher-h（头文件）" class="headerlink" title="teacher.h（头文件）"></a>teacher.h（头文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&quot;Identity.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&quot;orderFile.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Teacher</span> :<span class="title">public</span> <span class="title">Identity</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//默认构造</span></span><br><span class="line">    Teacher();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造 参数：职工编号、姓名、密码</span></span><br><span class="line">    Teacher(<span class="built_in">int</span> empid, <span class="built_in">string</span> name, <span class="built_in">string</span> pwd);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//菜单界面</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">openMenu</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看所有预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showAllOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//审核预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">validOrder</span>()</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="teacher-cpp（源文件）"><a href="#teacher-cpp（源文件）" class="headerlink" title="teacher.cpp（源文件）"></a>teacher.cpp（源文件）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&quot;teacher.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Teacher::Teacher()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造 参数：职工编号、姓名、密码</span></span><br><span class="line">Teacher::Teacher(<span class="built_in">int</span> empid, <span class="built_in">string</span> name, <span class="built_in">string</span> pwd)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_EmpId = empid;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="keyword">void</span> Teacher::openMenu()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎教师：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot; 登录&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           1.所有预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           2.审核预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           0.注销登录           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="keyword">void</span> Teacher::showAllOrder()</span><br><span class="line">&#123;</span><br><span class="line">    orderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; of.m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;、&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t学号&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t姓名&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuName&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t机房&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> status = <span class="string">&quot; \t状态：&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;已预约&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;取消预约&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;预约失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//审核预约</span></span><br><span class="line"><span class="keyword">void</span> Teacher::validOrder()</span><br><span class="line">&#123;</span><br><span class="line">    orderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v;</span><br><span class="line">    v.clear();</span><br><span class="line">    <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; of.m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            v.push_back(i);</span><br><span class="line">            cout &lt;&lt; ++index &lt;&lt; <span class="string">&quot;、&quot;</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;\t时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;\t学号：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuName&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;\t机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> status = <span class="string">&quot; \t状态：&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (v.size() == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有审核中的记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">机房预约系统(头文件/源文件)</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++面向对象（案列）：机房预约系统</title>
    <link href="https://notes.camcad.cn/post/d0efdeb2.html"/>
    <id>https://notes.camcad.cn/post/d0efdeb2.html</id>
    <published>2020-08-06T09:15:56.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="机房预约系统"><a href="#机房预约系统" class="headerlink" title="机房预约系统"></a>机房预约系统</h1><h2 id="1、机房预约系统需求"><a href="#1、机房预约系统需求" class="headerlink" title="1、机房预约系统需求"></a>1、机房预约系统需求</h2><h3 id="1-1-系统简介"><a href="#1-1-系统简介" class="headerlink" title="1.1 系统简介"></a>1.1 系统简介</h3><p>学校现有几个规格不同的机房，由于使用时经常出现“撞车”现象，现开发一套机房预约系统，解决这一问题。<br><img src="http://image.camcad.cn/2020/07/2020070907260630.jpg"></p><h3 id="1-2-身份简介"><a href="#1-2-身份简介" class="headerlink" title="1.2 身份简介"></a>1.2 身份简介</h3><h4 id="分别有三种身份使用该程序："><a href="#分别有三种身份使用该程序：" class="headerlink" title="分别有三种身份使用该程序："></a>分别有三种身份使用该程序：</h4><ul><li><strong>学生代表：</strong>申请使用机房</li><li><strong>教师：</strong>审校学生的预约申请</li><li><strong>管理员：</strong>给学生、教师创建帐号</li></ul><h3 id="1-3-机房简介"><a href="#1-3-机房简介" class="headerlink" title="1.3 机房简介"></a>1.3 机房简介</h3><h4 id="机房总共有3间："><a href="#机房总共有3间：" class="headerlink" title="机房总共有3间："></a>机房总共有3间：</h4><ul><li>1号机房—最大容量20人</li><li>2号机房—最大容量50人</li><li>3号机房—最大容量100人</li></ul><h3 id="1-4-申请简介"><a href="#1-4-申请简介" class="headerlink" title="1.4 申请简介"></a>1.4 申请简介</h3><ul><li>申请的订单每周由管理员负责清空</li><li>学生可以预约未来一周内的机房使用，预约的日期为周一至周五，预约时需要选择预约时段（上午、下午）</li><li>教师来审核预约，依据实际情况审核预约通过或者不通过</li></ul><h3 id="1-5-系统具体需求"><a href="#1-5-系统具体需求" class="headerlink" title="1.5 系统具体需求"></a>1.5 系统具体需求</h3><h4 id="首先进入登录界面，可选登录身份有："><a href="#首先进入登录界面，可选登录身份有：" class="headerlink" title="首先进入登录界面，可选登录身份有："></a>首先进入登录界面，可选登录身份有：</h4><ul><li>学生代表（Student）</li><li>老师（Teacher）</li><li>管理员（Manager）</li><li>退出（Exit）</li></ul><h4 id="每个身份都需要进行验证后，进入子菜单"><a href="#每个身份都需要进行验证后，进入子菜单" class="headerlink" title="每个身份都需要进行验证后，进入子菜单"></a>每个身份都需要进行验证后，进入子菜单</h4><ul><li>学生需要输入：学号、姓名、登录密码</li><li>老师需要输入：职工号、姓名、登录密码</li><li>管理员需要输入：管理员姓名、登录密码</li></ul><h4 id="学生具体功能"><a href="#学生具体功能" class="headerlink" title="学生具体功能"></a>学生具体功能</h4><ul><li>申请预约（applyOrder）—预约机房</li><li>查看自身的预约（showMyOrder）—查看自己的预约状态</li><li>查看所有预约（showAllOrder）—查看全部预约信息以及预约状态</li><li>取消预约（cancelOrder）—取消自身的预约，预约成功或审核中的预约均可取消</li><li>注销登录（）—退出登录</li></ul><h4 id="教师具体功能"><a href="#教师具体功能" class="headerlink" title="教师具体功能"></a>教师具体功能</h4><ul><li>查看所有预约（showAllOrder）—查看全部预约信息以及预约状态</li><li>审核预约（validOrder）—对学生的预约进行审核</li><li>注销登录（）—退出登录</li></ul><h4 id="管理员具体功能"><a href="#管理员具体功能" class="headerlink" title="管理员具体功能"></a>管理员具体功能</h4><ul><li>添加帐号（addPerson）—添加学生或教师的帐号，需要检测学生编号或教师职工号是否重复</li><li>查看帐号（showPerson）—可以选择查看学生或教师的全部信息</li><li>查看机房（showComputer）—查看所有机房的信息</li><li>清空预约（cleanFile）—清空所有预约记录</li><li>注销登录（）—退出登录<br><a href="http://image.camcad.cn/2020/07/2020070907475320.png"><img src="http://image.camcad.cn/2020/07/2020070907475320-1024x500.png"></a></li></ul><h2 id="2、创建项目"><a href="#2、创建项目" class="headerlink" title="2、创建项目"></a>2、创建项目</h2><p><strong>创建新项目步骤如下：</strong></p><ul><li>创建新项目</li><li>添加文件</li></ul><h3 id="2-1-创建项目"><a href="#2-1-创建项目" class="headerlink" title="2.1 创建项目"></a>2.1 创建项目</h3><ul><li>打开VS后，点击创建新项目，创建新的C++项目</li></ul><p>如图：<br><img src="http://image.camcad.cn/2020/07/2020070908040855-1024x762.jpg"></p><ul><li>填写项目名称以及选取项目路径，点击确定生成项目。<br><img src="http://image.camcad.cn/2020/07/2020070908091879-1024x747.jpg"></li></ul><h3 id="2-2-添加文件"><a href="#2-2-添加文件" class="headerlink" title="2.2 添加文件"></a>2.2 添加文件</h3><ul><li><p>右键源文件，进行添加文件操作<br><img src="http://image.camcad.cn/2020/07/2020070908124761-1024x762.jpg"></p></li><li><p>填写文件名称，点击添加<br><img src="http://image.camcad.cn/2020/07/2020070908160680-1024x744.jpg"></p></li><li><p>生成文件成功，效果如下图：<br><img src="http://image.camcad.cn/2020/07/20200709081759100-1024x762.jpg"></p></li></ul><h2 id="3、创建主菜单"><a href="#3、创建主菜单" class="headerlink" title="3、创建主菜单"></a>3、创建主菜单</h2><p><strong>功能描述：</strong></p><ul><li>设计主菜单，与用户进行交互</li></ul><h3 id="3-1-菜单实现"><a href="#3-1-菜单实现" class="headerlink" title="3.1 菜单实现"></a>3.1 菜单实现</h3><ul><li>在主函数main中添加菜单提示，代码如下：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;====================  欢迎来到《蚂蚁》预约系统  ====================&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的身份：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           1.学生代表           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           2.教    师           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           3.管 理 员           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           0.退    出           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入您的选择：&quot;</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果如图：<br><img src="http://image.camcad.cn/2020/07/2020070909085733-1024x550.jpg"></p><h3 id="3-2-搭建接口"><a href="#3-2-搭建接口" class="headerlink" title="3.2 搭建接口"></a>3.2 搭建接口</h3><ul><li>接受用户的选择，搭建接口</li><li>在main中添加如下代码：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;     <span class="comment">//用于接收用户的选择</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;====================  欢迎来到《蚂蚁》预约系统  ====================&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的身份：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           1.学生代表           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           2.教    师           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           3.管 理 员           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t           0.退    出           \n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入您的选择：&quot;</span>;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;        <span class="comment">//接收用户选择</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (<span class="keyword">select</span>)     <span class="comment">//根据用户选择 实现不同接口的功能</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:     <span class="comment">//学生代表</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:     <span class="comment">//教    师</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:     <span class="comment">//管 理 员</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:     <span class="comment">//退出系统</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="literal">default</span>:</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试，输入0、1、2、3、会重新回到界面，输入其他提示输入有误，清屏后重新选择 效果如图：<br><img src="http://image.camcad.cn/2020/07/2020070909141133-1024x546.jpg"> </p><p>至此，界面搭建完毕</p><h2 id="4、退出功能实现"><a href="#4、退出功能实现" class="headerlink" title="4、退出功能实现"></a>4、退出功能实现</h2><h3 id="4-1-退出功能实现"><a href="#4-1-退出功能实现" class="headerlink" title="4.1 退出功能实现"></a>4.1 退出功能实现</h3><p>在main函数分支0选项中，添加退出程序的代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下次使用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2020/07/2020070909220564.jpg"></p><h3 id="4-2-测试退出功能"><a href="#4-2-测试退出功能" class="headerlink" title="4.2 测试退出功能"></a>4.2 测试退出功能</h3><p>运行程序，效果如图：<br><img src="http://image.camcad.cn/2020/07/2020070909235514-1024x557.jpg"> </p><p>至此，退出程序功能实现。</p><h2 id="5、创建身份类"><a href="#5、创建身份类" class="headerlink" title="5、创建身份类"></a>5、创建身份类</h2><h3 id="5-1-身份的基类"><a href="#5-1-身份的基类" class="headerlink" title="5.1 身份的基类"></a>5.1 身份的基类</h3><ul><li>在整个系统中，有三种身份，分别为：学生代表、老师以及管理员</li><li>三种身份有其共性也有其特性，因此我们可以将三种身份抽象出一个身份基类<code>Identity</code></li><li>在头文件下创建<code>identity.h</code>文件</li></ul><p>identity.h中添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once    //防止头文件重复定义</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//身份抽象类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Identity</span>      <span class="comment">//同一特性类</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//操作菜单 纯虚函数</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">openMenu</span>()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户名称</span></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//登录密码</span></span><br><span class="line">    <span class="built_in">string</span> m_Pwd;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>效果如图：<br><img src="http://image.camcad.cn/2020/07/202007090944129-1024x594.jpg"></p><h3 id="5-2-学生类"><a href="#5-2-学生类" class="headerlink" title="5.2 学生类"></a>5.2 学生类</h3><h4 id="5-2-1-功能分析"><a href="#5-2-1-功能分析" class="headerlink" title="5.2.1 功能分析"></a>5.2.1 功能分析</h4><h4 id="学生类主要功能是可以通过类中成员函数，实现预约操作"><a href="#学生类主要功能是可以通过类中成员函数，实现预约操作" class="headerlink" title="学生类主要功能是可以通过类中成员函数，实现预约操作"></a>学生类主要功能是可以通过类中成员函数，实现预约操作</h4><h4 id="学生类中主要功能有："><a href="#学生类中主要功能有：" class="headerlink" title="学生类中主要功能有："></a>学生类中主要功能有：</h4><ul><li>1.显示学生操作的菜单界面</li><li>2.申请预约</li><li>3.查看自身预约</li><li>4.查看所有预约</li><li>5.取消预约</li></ul><h4 id="5-2-2-类的创建"><a href="#5-2-2-类的创建" class="headerlink" title="5.2.2 类的创建"></a>5.2.2 类的创建</h4><ul><li>在头文件以及源文件下创建<code>student.h</code>和<code>student.cpp</code>文件 student.h中添加如下代码：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&quot;Identity.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Student</span> :<span class="title">public</span> <span class="title">Identity</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//默认构造</span></span><br><span class="line">    Student();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造  参数：学号、姓名、密码</span></span><br><span class="line">    Student(<span class="built_in">int</span> id, <span class="built_in">string</span> name, <span class="built_in">string</span> pwd);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//操作菜单</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">openMenu</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//申请预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">applyOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看自身的预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showMyOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看所有预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showAllOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//取消预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">cancelOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~Student();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//学号</span></span><br><span class="line">    <span class="built_in">int</span> m_Id;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>student.cpp中添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&quot;student.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Student::Student()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造  参数：学号、姓名、密码</span></span><br><span class="line">Student::Student(<span class="built_in">int</span> id, <span class="built_in">string</span> name, <span class="built_in">string</span> pwd)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//操作菜单</span></span><br><span class="line"><span class="keyword">void</span> Student::openMenu()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//申请预约</span></span><br><span class="line"><span class="keyword">void</span> Student::applyOrder()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看自身的预约</span></span><br><span class="line"><span class="keyword">void</span> Student::showMyOrder()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="keyword">void</span> Student::showAllOrder()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取消预约</span></span><br><span class="line"><span class="keyword">void</span> Student::cancelOrder()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">Student::~Student()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-教师类"><a href="#5-3-教师类" class="headerlink" title="5.3 教师类"></a>5.3 教师类</h3><h4 id="5-3-1-功能分析"><a href="#5-3-1-功能分析" class="headerlink" title="5.3.1 功能分析"></a>5.3.1 功能分析</h4><h4 id="教师类主要功能是查看学生的预约，并进行审核"><a href="#教师类主要功能是查看学生的预约，并进行审核" class="headerlink" title="教师类主要功能是查看学生的预约，并进行审核"></a>教师类主要功能是查看学生的预约，并进行审核</h4><h4 id="教师类中主要功能有："><a href="#教师类中主要功能有：" class="headerlink" title="教师类中主要功能有："></a>教师类中主要功能有：</h4><ul><li>1.显示教师操作的菜单界面</li><li>2.查看所有预约</li><li>3.审核预约</li></ul><h4 id="5-3-2-类的创建"><a href="#5-3-2-类的创建" class="headerlink" title="5.3.2 类的创建"></a>5.3.2 类的创建</h4><ul><li>在头文件以及源文件下创建<code>teacher.h</code>和<code>teacher.cpp</code>文件</li></ul><p>teacher.h中添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&quot;Identity.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Teacher</span> :<span class="title">public</span> <span class="title">Identity</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//默认构造</span></span><br><span class="line">    Teacher();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造 参数：职工编号、姓名、密码</span></span><br><span class="line">    Teacher(<span class="built_in">int</span> empid, <span class="built_in">string</span> name, <span class="built_in">string</span> pwd);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//菜单界面</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">openMenu</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看所有预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showAllOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//审核预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">validOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//职工编号</span></span><br><span class="line">    <span class="built_in">int</span> m_EmpId;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>teacher.cpp是添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&quot;teacher.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Teacher::Teacher()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造 参数：职工编号、姓名、密码</span></span><br><span class="line">Teacher::Teacher(<span class="built_in">int</span> empid, <span class="built_in">string</span> name, <span class="built_in">string</span> pwd)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="keyword">void</span> Teacher::openMenu()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="keyword">void</span> Teacher::showAllOrder()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//审核预约</span></span><br><span class="line"><span class="keyword">void</span> Teacher::validOrder()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-4-管理员类"><a href="#5-4-管理员类" class="headerlink" title="5.4 管理员类"></a>5.4 管理员类</h3><h4 id="5-4-1-功能分析"><a href="#5-4-1-功能分析" class="headerlink" title="5.4.1 功能分析"></a>5.4.1 功能分析</h4><h4 id="管理员主要功能是对学生和老师账号管理，查看机房信息以及清空预约记录"><a href="#管理员主要功能是对学生和老师账号管理，查看机房信息以及清空预约记录" class="headerlink" title="管理员主要功能是对学生和老师账号管理，查看机房信息以及清空预约记录"></a>管理员主要功能是对学生和老师账号管理，查看机房信息以及清空预约记录</h4><h4 id="管理员类中主要功能有："><a href="#管理员类中主要功能有：" class="headerlink" title="管理员类中主要功能有："></a>管理员类中主要功能有：</h4><ul><li>1.显示管理员操作的菜单界面</li><li>2.添加账号</li><li>3.查看账号</li><li>4.查看机房信息</li><li>5.清空预约记录</li></ul><h4 id="5-4-2-类的创建"><a href="#5-4-2-类的创建" class="headerlink" title="5.4.2 类的创建"></a>5.4.2 类的创建</h4><ul><li>在头文件以及源文件下创建<code>manager.h</code>和<code>manager.cpp</code>文件</li></ul><p>manager.h中添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&quot;Identity.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Manager</span> :<span class="title">public</span> <span class="title">Identity</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//默认构造</span></span><br><span class="line">    Manager();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造 参数：姓名，密码</span></span><br><span class="line">    Manager(<span class="built_in">string</span> name, <span class="built_in">string</span> pwd);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//操作菜单</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">openMenu</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加帐号</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addPerson</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看帐号</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showPerson</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看机房</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showComputer</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//清空预约</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">cleanFile</span>()</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>manager.cpp中添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&quot;manager.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Manager::Manager()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造 参数：用户名称，用户密码</span></span><br><span class="line">Manager::Manager(<span class="built_in">string</span> name, <span class="built_in">string</span> pwd)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//操作菜单</span></span><br><span class="line"><span class="keyword">void</span> Manager::openMenu()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加帐号</span></span><br><span class="line"><span class="keyword">void</span> Manager::addPerson()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看帐号</span></span><br><span class="line"><span class="keyword">void</span> Manager::showPerson()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看机房</span></span><br><span class="line"><span class="keyword">void</span> Manager::showComputer()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空预约</span></span><br><span class="line"><span class="keyword">void</span> Manager::cleanFile()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，所有身份类创建完毕，效果如图：<br><img src="http://image.camcad.cn/2020/07/2020070911574188.jpg"></p><h2 id="6、登录模块"><a href="#6、登录模块" class="headerlink" title="6、登录模块"></a>6、登录模块</h2><h3 id="6-1-全局文件添加"><a href="#6-1-全局文件添加" class="headerlink" title="6.1 全局文件添加"></a>6.1 全局文件添加</h3><p><strong>功能描述：</strong></p><ul><li>不同的身份可能会用到不同的文件操作，我们可以将所有的文件名定义到一个全局的文件中</li><li>在头文件中添加<code>globalFile.h</code>文件</li><li>并添加如下代码：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//管理员文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ADMIN_FILE &quot;admin.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//学生文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STUDENT_FILE &quot;student.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//教师文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TEACHER_FILE &quot;teacher.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//机房信息文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COMPUTER_FILE &quot;computerRoom.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//订单文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ORDER_FILE &quot;order.txt&quot;</span></span><br></pre></td></tr></table></figure><p>并且在同级目录下，创建这几个文件<br><img src="http://image.camcad.cn/2020/07/2020071002450157-1024x633.jpg"></p><h3 id="6-2-登录函数封装"><a href="#6-2-登录函数封装" class="headerlink" title="6.2 登录函数封装"></a>6.2 登录函数封装</h3><p><strong>功能描述：</strong></p><ul><li>根据用户的选择，进入不同的身份登录</li><li>在 机房预约系统 的.cpp文件中添加全局函数<code>void loginIn(string fileName, int type);</code></li></ul><p><strong>参数：</strong></p><ul><li>fileName—操作的文件名</li><li>type—登录的身份（1代表学生，2代表教师，3代表管理员）</li></ul><p>loginIn中添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once;</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&quot;globalFile.h&quot;</span></span><br><span class="line"><span class="meta">#include&quot;Identity.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;fstream&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//登陆功能  参数1：操作的文件名，参数2：类型</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loginIn</span>(<span class="params"><span class="built_in">string</span> fileName, <span class="built_in">int</span> type</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//登录功能</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loginIn</span>(<span class="params"><span class="built_in">string</span> fileName, <span class="built_in">int</span> type</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开文件-读操作</span></span><br><span class="line">    ifs.open(fileName, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件是否存在</span></span><br><span class="line">    <span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        ifs.close();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//学号/编号</span></span><br><span class="line">    <span class="built_in">int</span> id = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户名</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//密码</span></span><br><span class="line">    <span class="built_in">string</span> pwd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (type == <span class="number">1</span>)      <span class="comment">//学生登录</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入学号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>) <span class="comment">//职工登录</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入用户名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入密码：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//基类创建</span></span><br><span class="line">    Identity *person = NULL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (type == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//学生登录验证</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//教师登录验证</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//管理员登录验证</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;验证登录失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在main函数的不同分支中，填入不同的登录接口<br><img src="http://image.camcad.cn/2020/07/2020071004011384.jpg"></li></ul><h3 id="6-3-学生登录实现"><a href="#6-3-学生登录实现" class="headerlink" title="6.3 学生登录实现"></a>6.3 学生登录实现</h3><p>在student.txt文件中添加两条学生信息，用于测试 添加信息：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1001</span> 张三 <span class="number">123</span></span><br><span class="line"><span class="number">1002</span> 李四 <span class="number">123456</span></span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>第一列 代表 <strong>学号</strong></li><li>第二列 代表 <strong>学生姓名</strong></li><li>第三列 代表 <strong>密码</strong></li></ul><p>效果图：<br><img src="http://image.camcad.cn/2020/07/2020071004503448.jpg"></p><ul><li>在loginIn函数的学生分支中加入如下代码，验证学生身份</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生登录验证</span></span><br><span class="line">        <span class="built_in">int</span> fId = <span class="number">0</span>;    <span class="comment">//文件 学号/编号</span></span><br><span class="line">        <span class="built_in">string</span> fName;   <span class="comment">//文件 用户名</span></span><br><span class="line">        <span class="built_in">string</span> fPwd;    <span class="comment">//文件 密码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (ifs &gt;&gt; fId &amp;&amp; ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//与用户输入的信息做对比</span></span><br><span class="line">            <span class="keyword">if</span> (fId == id &amp;&amp; fName == name &amp;&amp; fPwd == pwd)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;学生验证登录成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">                system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                person = <span class="keyword">new</span> Student(id, name, pwd);</span><br><span class="line">                <span class="comment">//进入学生身份的子菜单</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>添加代码效果图<br><img src="http://image.camcad.cn/2020/07/2020071004462530.jpg"> </p><p>测试，效果如下：<br><img src="http://image.camcad.cn/2020/07/2020071004474780-1024x767.jpg"></p><h3 id="6-4-教师登录实现"><a href="#6-4-教师登录实现" class="headerlink" title="6.4 教师登录实现"></a>6.4 教师登录实现</h3><p>在teacher.txt文件中添加一条教师信息，用于测试 添加信息：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2001</span> 老赵 <span class="number">321</span></span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>第一列 代表 <strong>职工编号</strong></li><li>第二列 代表 <strong>教师姓名</strong></li><li>第三列 代表 <strong>密码</strong></li></ul><p>效果图：<br><img src="http://image.camcad.cn/2020/07/2020071005034540.jpg"></p><ul><li>在loginIn函数的教师分支中加入如下代码，验证教师身份</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//教师登录验证</span></span><br><span class="line">        <span class="built_in">int</span> fId = <span class="number">0</span>;    <span class="comment">//文件 编号</span></span><br><span class="line">        <span class="built_in">string</span> fName;   <span class="comment">//文件 用户名</span></span><br><span class="line">        <span class="built_in">string</span> fPwd;    <span class="comment">//文件 密码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (ifs &gt;&gt; fId &amp;&amp; ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//与用户输入的信息做对比</span></span><br><span class="line">            <span class="keyword">if</span> (fId == id &amp;&amp; fName == name &amp;&amp; fPwd == pwd)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;教师验证登录成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">                system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                person = <span class="keyword">new</span> Teacher(id, name, pwd);</span><br><span class="line">                <span class="comment">//进入老师身份的子菜单</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>添加代码效果图<br><img src="http://image.camcad.cn/2020/07/2020071005060249.jpg"></p><p>测试，效果如下：<br><img src="http://image.camcad.cn/2020/07/2020071005071572-1024x754.jpg"></p><h3 id="6-5-管理员登录实现"><a href="#6-5-管理员登录实现" class="headerlink" title="6.5 管理员登录实现"></a>6.5 管理员登录实现</h3><p>在admin.txt文件中添加一条管理员信息，用于测试 添加信息：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin <span class="number">951753</span></span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>第一列 代表 <strong>管理员姓名</strong></li><li>第二列 代表 <strong>密码</strong></li></ul><p>效果图：<br><img src="http://image.camcad.cn/2020/07/2020071005123926.jpg"></p><ul><li>在loginIn函数的管理员分支中加入如下代码，验证管理员身份</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//管理员登录验证</span></span><br><span class="line">        <span class="built_in">string</span> fName;   <span class="comment">//文件 用户名</span></span><br><span class="line">        <span class="built_in">string</span> fPwd;    <span class="comment">//文件 密码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//与用户输入的信息做对比</span></span><br><span class="line">            <span class="keyword">if</span> (fName == name &amp;&amp; fPwd == pwd)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;管理员验证登录成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">                system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                person = <span class="keyword">new</span> Manager(name, pwd);</span><br><span class="line">                <span class="comment">//进入管理员身份的子菜单</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>添加代码效果图<br><img src="http://image.camcad.cn/2020/07/202007100514255.jpg"></p><p>测试，效果如下：<br><img src="http://image.camcad.cn/2020/07/2020071005153179-1024x697.jpg"> </p><p>至此，所有身份的登录功能全部实现！</p><h2 id="7、管理员模块"><a href="#7、管理员模块" class="headerlink" title="7、管理员模块"></a>7、管理员模块</h2><h3 id="7-1-管理员登录和注销"><a href="#7-1-管理员登录和注销" class="headerlink" title="7.1 管理员登录和注销"></a>7.1 管理员登录和注销</h3><h4 id="7-1-1-构造函数"><a href="#7-1-1-构造函数" class="headerlink" title="7.1.1 构造函数"></a>7.1.1 构造函数</h4><ul><li>在Manager类的有参构造函数中，初始化管理员信息，代码如下：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有参构造 参数：用户名称，用户密码</span></span><br><span class="line">Manager::Manager(<span class="built_in">string</span> name, <span class="built_in">string</span> pwd)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-1-2-管理子菜单"><a href="#7-1-2-管理子菜单" class="headerlink" title="7.1.2 管理子菜单"></a>7.1.2 管理子菜单</h4><h4 id="在-机房预约系统-cpp-中，当用户登录的是管理员，添加管理员菜单接口"><a href="#在-机房预约系统-cpp-中，当用户登录的是管理员，添加管理员菜单接口" class="headerlink" title="在 机房预约系统.cpp 中，当用户登录的是管理员，添加管理员菜单接口"></a>在 机房预约系统.cpp 中，当用户登录的是管理员，添加管理员菜单接口</h4><h4 id="将不同的分支提供出来"><a href="#将不同的分支提供出来" class="headerlink" title="将不同的分支提供出来"></a>将不同的分支提供出来</h4><ul><li>1.添加账号</li><li>2.查看账号</li><li>3.查看机房</li><li>4.清空预约</li><li>0.注销登录</li><li>实现注销功能</li></ul><p>在 机房预约系统.cpp 中添加全局函数<code>void managerMenu(Identity * &amp;p);</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//管理员 子菜单</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">managerMenu</span>(<span class="params">Identity * &amp;p</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//调用 管理员 子菜单</span></span><br><span class="line">        p-&gt;openMenu();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将父类指针 转为子类指针，调用子类里其他接口</span></span><br><span class="line">        Manager *ma = (Manager*)p;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收用户选项</span></span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span>;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)        <span class="comment">//添加账号</span></span><br><span class="line">        &#123;</span><br><span class="line">            ma-&gt;addPerson();</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;添加账号&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">2</span>)   <span class="comment">//查看账号</span></span><br><span class="line">        &#123;</span><br><span class="line">            ma-&gt;showPerson();</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;查看账号&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">3</span>)   <span class="comment">//查看机房</span></span><br><span class="line">        &#123;</span><br><span class="line">            ma-&gt;showComputer();</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;查看机房&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">4</span>)   <span class="comment">//清空预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            ma-&gt;cleanFile();</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;清空预约&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">0</span>)   <span class="comment">//注销登录</span></span><br><span class="line">        &#123;</span><br><span class="line">            delete p;       <span class="comment">//释放堆区对象</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;注销登录成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-1-3-菜单功能实现"><a href="#7-1-3-菜单功能实现" class="headerlink" title="7.1.3 菜单功能实现"></a>7.1.3 菜单功能实现</h4><p>在manager.cpp中实现成员<code>void manager::openMenu()</code>代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//操作菜单</span></span><br><span class="line"><span class="keyword">void</span> Manager::openMenu()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎管理员：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot; 登录&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           1.添加账号           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           2.查看账号           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           3.查看机房           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           4.清空预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           0.注销登录           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-1-4-接口对接"><a href="#7-1-4-接口对接" class="headerlink" title="7.1.4 接口对接"></a>7.1.4 接口对接</h4><ul><li>管理员成功登录后，调用管理员子菜单界面</li><li>在管理员登录验证分支，添加代码：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入管理员身份的子菜单</span></span><br><span class="line">managerMenu(person);</span><br></pre></td></tr></table></figure><p>添加效果如下：<br><img src="http://image.camcad.cn/2020/07/2020071008460118.jpg"> </p><p>测试对接，效果如图：<br><img src="http://image.camcad.cn/2020/07/2020071005153179-1024x697.jpg"> </p><p>登录成功：<br><img src="http://image.camcad.cn/2020/07/2020071008484234-1024x522.jpg"> </p><p>注销登录：<br><img src="http://image.camcad.cn/2020/07/2020071008495484.jpg"> </p><p>至此，管理员身份可以成功登录以及注销。</p><h3 id="7-2-添加账号"><a href="#7-2-添加账号" class="headerlink" title="7.2 添加账号"></a>7.2 添加账号</h3><p><strong>功能描述：</strong></p><ul><li>给学生或教师添加新的账号</li></ul><p><strong>功能要求：</strong></p><ul><li>添加时学生学号不能重复、教师职工号不能重复</li></ul><h4 id="7-2-1-添加功能实现"><a href="#7-2-1-添加功能实现" class="headerlink" title="7.2.1 添加功能实现"></a>7.2.1 添加功能实现</h4><p>在manager.cpp的<code>addperson</code>成员函数中，实现添加新账号功能，代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加帐号</span></span><br><span class="line"><span class="keyword">void</span> Manager::addPerson()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;     <span class="comment">//接收用户的选择</span></span><br><span class="line">    <span class="built_in">string</span> fileName;    <span class="comment">//文件名称</span></span><br><span class="line">    <span class="built_in">string</span> tip;         <span class="comment">//提示需要输入的ip号</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入添加账号类型：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1.添加学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2.添加教师&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            fileName = STUDENT_FILE;</span><br><span class="line">            tip = <span class="string">&quot;请输入学号：&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            fileName = TEACHER_FILE;</span><br><span class="line">            tip = <span class="string">&quot;请输入职工编号：&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);  </span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);        <span class="comment">//清屏</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>-&gt;openMenu();    <span class="comment">//调用 管理员 子菜单</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开文件-写内容</span></span><br><span class="line">    ofs.open(fileName, ios::<span class="keyword">out</span>  ios::app);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取用户的输入</span></span><br><span class="line">    <span class="built_in">int</span> id;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="built_in">string</span> pwd;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; tip;  <span class="comment">//学号或职工编号</span></span><br><span class="line">    cin &gt;&gt; id;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入用户名：&quot;</span>;</span><br><span class="line">    cin &gt;&gt; name;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入密码：&quot;</span>;</span><br><span class="line">    cin &gt;&gt; pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//向文件添加数据</span></span><br><span class="line">    ofs &lt;&lt; id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; pwd &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;添加成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试添加学生：<br><img src="http://image.camcad.cn/2020/07/2020071010554530-1024x894.jpg"> </p><p>成功在学生文件中添加了一条信息<br><img src="http://image.camcad.cn/2020/07/2020071010570024.jpg"></p><p>测试添加教师：<br><img src="http://image.camcad.cn/2020/07/2020071011001271.jpg"></p><p>成功在教师文件中添加了一条信息<br><img src="http://image.camcad.cn/2020/07/2020071011004771.jpg"></p><h4 id="7-2-2-去重操作"><a href="#7-2-2-去重操作" class="headerlink" title="7.2.2 去重操作"></a>7.2.2 去重操作</h4><p><strong>功能描述：</strong>添加新账号时，如果是重复的学生编号，或是重复的教师职工编号，提示有误</p><h5 id="7-2-2-1-读取信息"><a href="#7-2-2-1-读取信息" class="headerlink" title="7.2.2.1 读取信息"></a>7.2.2.1 读取信息</h5><ul><li>要去除重复的账号，首先要先将学生和教师的账号信息获取到程序中，方可检测</li><li>在manager.h中，添加两个容器，用于存放学生和老师的信息</li><li>添加一个新的成员函数<code>void initVector();</code>初始化容器</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化容器</span></span><br><span class="line"><span class="keyword">void</span> Manager::initVector()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;vStu.clear();</span><br><span class="line">    <span class="keyword">this</span>-&gt;vTea.clear();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取学生文件中信息</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.open(STUDENT_FILE, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//char ch;</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>/判断文件是否存在</span></span><br><span class="line">    <span class="comment">//if (!ifs.is_open())</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; &quot;学生 文件读取失败！&quot; &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  ifs.close();</span></span><br><span class="line">    <span class="comment">//  return;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>/判断文件是否为空</span></span><br><span class="line">    <span class="comment">//ifs &gt;&gt; ch;</span></span><br><span class="line">    <span class="comment">//if (ifs.eof())</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; &quot;学生 文件为空！&quot; &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  ifs.close();</span></span><br><span class="line">    <span class="comment">//  return;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="comment">//ifs.putback(ch);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//读内容</span></span><br><span class="line">    Student s;</span><br><span class="line">    <span class="comment">//将数据放入到容器中</span></span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; s.m_Id &amp;&amp; ifs &gt;&gt; s.m_Name &amp;&amp; ifs &gt;&gt; s.m_Pwd)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;vStu.push_back(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; &quot;学生数量为：&quot; &lt;&lt; this-&gt;vStu.size() &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取教师文件中信息</span></span><br><span class="line">    ifs.open(TEACHER_FILE, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>/判断文件是否存在</span></span><br><span class="line">    <span class="comment">//if (!ifs.is_open())</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; &quot;教师 文件读取失败！&quot; &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  ifs.close();</span></span><br><span class="line">    <span class="comment">//  return;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>/判断文件是否为空</span></span><br><span class="line">    <span class="comment">//ifs &gt;&gt; ch;</span></span><br><span class="line">    <span class="comment">//if (ifs.eof())</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; &quot;教师 文件为空！&quot; &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  ifs.close();</span></span><br><span class="line">    <span class="comment">//  return;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="comment">//ifs.putback(ch);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//读内容</span></span><br><span class="line">    Teacher t;</span><br><span class="line">    <span class="comment">//将数据放入到容器中</span></span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; t.m_EmpId &amp;&amp; ifs &gt;&gt; t.m_Name &amp;&amp; ifs &gt;&gt; t.m_Pwd)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;vTea.push_back(t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; &quot;教师数量为：&quot; &lt;&lt; this-&gt;vTea.size() &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在有参构造函数中，调用初始化容器函数<code>void initVector();</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有参构造 参数：用户名称，用户密码</span></span><br><span class="line">Manager::Manager(<span class="built_in">string</span> name, <span class="built_in">string</span> pwd)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;initVector();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试，运行代码可以看到测试代码获取当前学生和教师数量<br><img src="http://image.camcad.cn/2020/07/2020071013203230-1024x617.jpg"></p><h5 id="7-2-2-2-去重函数封装"><a href="#7-2-2-2-去重函数封装" class="headerlink" title="7.2.2.2 去重函数封装"></a>7.2.2.2 去重函数封装</h5><p>在manager.h文件中添加成员函数<code>bool checkRepeat(int id,int type);</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检查重复 参数：（传入id,传入类型）返回值：（true代表有重复，false代表没有重复）</span></span><br><span class="line"><span class="function"><span class="built_in">bool</span> <span class="title">checkRepeat</span>(<span class="params"><span class="built_in">int</span> id, <span class="built_in">int</span> type</span>)</span>;</span><br></pre></td></tr></table></figure><p>在manager.cpp文件中实现成员函数<code>bool checkRepeat(int id,int type);</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检查重复 参数：（传入id,传入类型）返回值：（true代表有重复，false代表没有重复）</span></span><br><span class="line"><span class="built_in">bool</span> Manager::checkRepeat(<span class="built_in">int</span> id, <span class="built_in">int</span> type)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (type == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//学生检查</span></span><br><span class="line">        <span class="keyword">for</span> (vector&lt;Student&gt;::iterator it = vStu.begin(); it != vStu.end(); it++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (it-&gt;m_Id == id)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//老师检查</span></span><br><span class="line">        <span class="keyword">for</span> (vector&lt;Teacher&gt;::iterator it = vTea.begin(); it != vTea.end(); it++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (it-&gt;m_EmpId == id)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-2-2-3-添加去重操作"><a href="#7-2-2-3-添加去重操作" class="headerlink" title="7.2.2.3 添加去重操作"></a>7.2.2.3 添加去重操作</h5><p>在添加学生编号或者教师职工时，检测是否有重复，代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加帐号</span></span><br><span class="line"><span class="keyword">void</span> Manager::addPerson()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;     <span class="comment">//接收用户的选择</span></span><br><span class="line">    <span class="built_in">string</span> fileName;    <span class="comment">//文件名称</span></span><br><span class="line">    <span class="built_in">string</span> tip;         <span class="comment">//提示需要输入的ip号</span></span><br><span class="line">    <span class="built_in">string</span> errorTip;    <span class="comment">//重复错误提示</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入添加账号类型：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1.添加学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2.添加教师&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            fileName = STUDENT_FILE;</span><br><span class="line">            tip = <span class="string">&quot;请输入学号：&quot;</span>;</span><br><span class="line">            errorTip = <span class="string">&quot;学号重复，请重新输入！\n&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            fileName = TEACHER_FILE;</span><br><span class="line">            tip = <span class="string">&quot;请输入职工编号：&quot;</span>;</span><br><span class="line">            errorTip = <span class="string">&quot;职工编号重复，请重新输入！\n&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);  </span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);        <span class="comment">//清屏</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>-&gt;openMenu();    <span class="comment">//调用 管理员 子菜单</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开文件-写内容</span></span><br><span class="line">    ofs.open(fileName, ios::<span class="keyword">out</span>  ios::app);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取用户的输入</span></span><br><span class="line">    <span class="built_in">int</span> id;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="built_in">string</span> pwd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; tip;  <span class="comment">//学号或职工编号</span></span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line">        <span class="built_in">bool</span> ret = <span class="keyword">this</span>-&gt;checkRepeat(id, <span class="keyword">select</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ret)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; errorTip;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入用户名：&quot;</span>;</span><br><span class="line">    cin &gt;&gt; name;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入密码：&quot;</span>;</span><br><span class="line">    cin &gt;&gt; pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//向文件添加数据</span></span><br><span class="line">    ofs &lt;&lt; id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; pwd &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;添加成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码位置如图：<br><img src="http://image.camcad.cn/2020/07/2020071106495888-481x1024.jpg"> </p><p>检测效果，如下：<br><img src="http://image.camcad.cn/2020/07/202007110652085-1024x829.jpg"></p><h5 id="7-2-2-4-bug解决"><a href="#7-2-2-4-bug解决" class="headerlink" title="7.2.2.4 bug解决"></a>7.2.2.4 bug解决</h5><p>bug描述：</p><ul><li>虽然可以检测重复的账号，但是刚添加的账号由于没有更新到容器中，因此不会做检测</li><li>导致刚加入的账号的学生号或者职工编号，再次添加时依然可以重复</li></ul><p>解决方案：</p><ul><li>每次添加新账号时，重新初始化容器</li></ul><p>在添加完毕后，加入代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化容器</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initVector</span>()</span>;</span><br></pre></td></tr></table></figure><p>加入位置如图：<br><img src="http://image.camcad.cn/2020/07/2020071110375144.jpg"></p><p>再次测试，刚加入的新账号就不会有重复添加了！</p><h4 id="7-3-1-显示功能实现"><a href="#7-3-1-显示功能实现" class="headerlink" title="7.3.1 显示功能实现"></a>7.3.1 显示功能实现</h4><p>在manager.cpp的<code>showPerson</code>成员函数中，实现显示账号功能，代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印输出类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">myPrintClass</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//学生 仿函数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operator</span>()(<span class="params">Student &amp;s</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;学号：&quot;</span> &lt;&lt; s.m_Id &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; s.m_Name &lt;&lt; <span class="string">&quot;\t密码：&quot;</span> &lt;&lt; s.m_Pwd &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//教师 仿函数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operator</span>()(<span class="params">Teacher &amp;t</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; t.m_EmpId &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; t.m_Name &lt;&lt; <span class="string">&quot;\t密码：&quot;</span> &lt;&lt; t.m_Pwd &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看帐号</span></span><br><span class="line"><span class="keyword">void</span> Manager::showPerson()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//接收用户的输入</span></span><br><span class="line">    <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1、查看所有学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2、查看所有教师&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//遍历学生容器 所有元素</span></span><br><span class="line">            for_each(vStu.begin(), vStu.end(), myPrintClass());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//遍历教师容器 所有元素</span></span><br><span class="line">            for_each(vTea.begin(), vTea.end(), myPrintClass());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入错误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//调用 管理员 子菜单</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;openMenu();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-3-2-测试"><a href="#7-3-2-测试" class="headerlink" title="7.3.2 测试"></a>7.3.2 测试</h3><p>测试查看学生效果<br><img src="http://image.camcad.cn/2020/07/202007110800123.jpg"> </p><p>测试查看教师效果<br><img src="http://image.camcad.cn/2020/07/2020071108023215-1024x725.jpg"> </p><p>至此，显示账号功能实现完毕！</p><h3 id="7-4-查看机房"><a href="#7-4-查看机房" class="headerlink" title="7.4 查看机房"></a>7.4 查看机房</h3><h4 id="7-4-1-添加机房信息"><a href="#7-4-1-添加机房信息" class="headerlink" title="7.4.1 添加机房信息"></a>7.4.1 添加机房信息</h4><p>案例需求中，机房一共有三个，其中1号机房容量20台设备，2号50台，3号100台。 我们可以将信息录入computerRoom.txt中。<br><img src="http://image.camcad.cn/2020/07/2020071109282153-1024x443.jpg"></p><h4 id="7-4-2-机房类创建"><a href="#7-4-2-机房类创建" class="headerlink" title="7.4.2 机房类创建"></a>7.4.2 机房类创建</h4><p>在头文件，创建新的文件<code>computerRoom.h</code> 并添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//机房类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">computerRoom</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//机房编号</span></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//机房最大容量</span></span><br><span class="line">    <span class="built_in">int</span> m_Maximum;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="7-4-3-初始化机房信息"><a href="#7-4-3-初始化机房信息" class="headerlink" title="7.4.3 初始化机房信息"></a>7.4.3 初始化机房信息</h4><p>在Manager管理类下，添加机房的容器，用于保存机房信息</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//机房容器</span></span><br><span class="line">vector&lt;computerRoom&gt;vCom;</span><br></pre></td></tr></table></figure><p>在manager.cpp文件下，<code>void initVector();</code>函数中，追加如下代码，初始化机房信息：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化容器</span></span><br><span class="line"><span class="keyword">this</span>-&gt;vCom.clear();</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取机房文件中信息</span></span><br><span class="line">ifs.open(COMPUTER_FILE, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>/判断文件是否存在</span></span><br><span class="line"><span class="comment">//if (!ifs.is_open())</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//  cout &lt;&lt; &quot;机房 文件读取失败！&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//  ifs.close();</span></span><br><span class="line"><span class="comment">//  return;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>/判断文件是否为空</span></span><br><span class="line"><span class="comment">//ifs &gt;&gt; ch;</span></span><br><span class="line"><span class="comment">//if (ifs.eof())</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//  cout &lt;&lt; &quot;机房 文件为空！&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//  ifs.close();</span></span><br><span class="line"><span class="comment">//  return;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//ifs.putback(ch);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读内容</span></span><br><span class="line">computerRoom c;</span><br><span class="line"><span class="comment">//将数据放入到容器中</span></span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; c.m_Name &amp;&amp; ifs &gt;&gt; c.m_Maximum)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;vCom.push_back(c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;机房数量为：&quot; &lt;&lt; this-&gt;vCom.size() &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line">ifs.close();</span><br></pre></td></tr></table></figure><p>位置如图：<br><a href="http://image.camcad.cn/2020/07/2020071110402642.jpg"><img src="http://image.camcad.cn/2020/07/2020071110402642-353x1024.jpg"></a></p><h4 id="7-4-4-显示机房信息"><a href="#7-4-4-显示机房信息" class="headerlink" title="7.4.4 显示机房信息"></a>7.4.4 显示机房信息</h4><p>在Manager类的showComputer成员函数中添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看机房</span></span><br><span class="line"><span class="keyword">void</span> Manager::showComputer()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;机房信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历机房容器 所有元素</span></span><br><span class="line">    for_each(vCom.begin(), vCom.end(), myPrintClass());</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在manager.cpp文件下，<code>class myPrintClass</code>类中，追加如下代码，机房信息 仿函数：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//机房 仿函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">operator</span>()(<span class="params">computerRoom &amp;c</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;机房编号：&quot;</span> &lt;&lt; c.m_Name &lt;&lt; <span class="string">&quot;\t机房最大容量：&quot;</span> &lt;&lt; c.m_Maximum &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>位置如图：<br><img src="http://image.camcad.cn/2020/07/2020071109421382-1024x593.jpg"></p><p>测试显示机房信息功能：<br><img src="http://image.camcad.cn/2020/07/2020071109433054-1024x692.jpg"></p><h3 id="7-5-清空预约"><a href="#7-5-清空预约" class="headerlink" title="7.5 清空预约"></a>7.5 清空预约</h3><p>功能描述： 清空生成的<code>order.txt</code>预约文件</p><h4 id="7-5-1-清空功能实现"><a href="#7-5-1-清空功能实现" class="headerlink" title="7.5.1 清空功能实现"></a>7.5.1 清空功能实现</h4><p>在Manager.cpp的cleanFile成员函数中添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空预约</span></span><br><span class="line"><span class="keyword">void</span> Manager::cleanFile()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建流文件（如果文件存在先删除，再创建)</span></span><br><span class="line">    <span class="function">ofstream <span class="title">ofs</span>(<span class="params">ORDER_FILE, ios::trunc</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试清空，可以随意写入一些信息在order.txt中，然后调用cleanFile清空文件接口，查看是否清空干净。</p><h2 id="8、学生模块"><a href="#8、学生模块" class="headerlink" title="8、学生模块"></a>8、学生模块</h2><h3 id="8-1-学生登录和注销"><a href="#8-1-学生登录和注销" class="headerlink" title="8.1 学生登录和注销"></a>8.1 学生登录和注销</h3><h4 id="8-1-1-构造函数"><a href="#8-1-1-构造函数" class="headerlink" title="8.1.1 构造函数"></a>8.1.1 构造函数</h4><ul><li>在Student类的有参构造函数中，初始化学生信息，代码如下：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有参构造</span></span><br><span class="line">Student::Student(<span class="built_in">int</span> id, <span class="built_in">string</span> name, <span class="built_in">string</span> pwd)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化属性</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Id = id;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-1-2-管理员子菜单"><a href="#8-1-2-管理员子菜单" class="headerlink" title="8.1.2 管理员子菜单"></a>8.1.2 管理员子菜单</h4><h5 id="在-机房预约系统-cpp中，当用户登录的是学生，添加学生菜单接口"><a href="#在-机房预约系统-cpp中，当用户登录的是学生，添加学生菜单接口" class="headerlink" title="在 机房预约系统.cpp中，当用户登录的是学生，添加学生菜单接口"></a>在 机房预约系统.cpp中，当用户登录的是学生，添加学生菜单接口</h5><h5 id="将不同的分支提供出来-1"><a href="#将不同的分支提供出来-1" class="headerlink" title="将不同的分支提供出来"></a>将不同的分支提供出来</h5><ul><li>申请预约</li><li>我的预约</li><li>所有预约</li><li>取消预约</li></ul><h4 id="实现注销功能"><a href="#实现注销功能" class="headerlink" title="实现注销功能"></a>实现注销功能</h4><p>添加全局函数<code>void studentMenu(Identity * &amp;manager);</code>代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生代表 子菜单</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">studentMenu</span>(<span class="params">Identity * &amp;p</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//调用 学生代表 子菜单</span></span><br><span class="line">        p-&gt;openMenu();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将父类指针 转为子类指针，调用子类里其他接口</span></span><br><span class="line">        Student *stu = (Student*)p;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收用户选项</span></span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span>;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)        <span class="comment">//申请预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            stu-&gt;applyOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">2</span>)   <span class="comment">//查看我的预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            stu-&gt;showMyOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">3</span>)   <span class="comment">//查看所有预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            stu-&gt;showAllOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">4</span>)   <span class="comment">//取消预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            stu-&gt;cancelOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">0</span>)   <span class="comment">//注销登录</span></span><br><span class="line">        &#123;</span><br><span class="line">            delete p;       <span class="comment">//释放堆区对象</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;注销登录成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-1-3-菜单功能实现"><a href="#8-1-3-菜单功能实现" class="headerlink" title="8.1.3 菜单功能实现"></a>8.1.3 菜单功能实现</h4><ul><li>在实现成员函数<code>void student::operMenu();</code>代码如下：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//操作菜单</span></span><br><span class="line"><span class="keyword">void</span> Student::openMenu()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎学生代表：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot; 登录&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           1.申请预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           2.我的预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           3.所有预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           4.取消预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           0.注销登录           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-1-4-接口对接"><a href="#8-1-4-接口对接" class="headerlink" title="8.1.4 接口对接"></a>8.1.4 接口对接</h4><ul><li>学生登录成功后，调用学生子菜单界面</li><li>在学生登录分支中，添加如下代码：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入学生身份的子菜单</span></span><br><span class="line">studentMenu(person);</span><br></pre></td></tr></table></figure><p>添加效果如图：<br><img src="http://image.camcad.cn/2020/07/2020071205503280.jpg"> </p><p>测试对接，效果如图： 登录验证通过:<br><img src="http://image.camcad.cn/2020/07/2020071205525951-1024x775.jpg"> </p><p>学生代表子菜单：<br><img src="http://image.camcad.cn/2020/07/2020071205540786-1024x541.jpg"> </p><p>注销登录：<br><img src="http://image.camcad.cn/2020/07/2020071205550942-1024x604.jpg"></p><h3 id="8-2-申请预约"><a href="#8-2-申请预约" class="headerlink" title="8.2 申请预约"></a>8.2 申请预约</h3><h4 id="8-2-1-获取机房信息"><a href="#8-2-1-获取机房信息" class="headerlink" title="8.2.1 获取机房信息"></a>8.2.1 获取机房信息</h4><ul><li>在申请预约时，学生可以看到机房的信息，因此我们需要让学生获取机房的信息。</li></ul><p>在student.h中添加新的成员函数及容器 如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//容器初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initVector</span>()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//机房容器</span></span><br><span class="line">vector&lt;computerRoom&gt;vCom;</span><br></pre></td></tr></table></figure><p>在student.cpp文件中实现成员函数<code>void initVector();</code>代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//容器初始化</span></span><br><span class="line"><span class="keyword">void</span> Student::initVector()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;vCom.clear();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.open(COMPUTER_FILE, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建临时接收类</span></span><br><span class="line">    computerRoom com;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取数据</span></span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; com.m_Name &amp;&amp; ifs &gt;&gt; com.m_Maximum)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将读取的信息放入到 容器中</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;vCom.push_back(com);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在学生的有参构造函数中追加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//容器初始化</span></span><br><span class="line"><span class="keyword">this</span>-&gt;initVector();</span><br></pre></td></tr></table></figure><p>追加位置如图：<br><img src="http://image.camcad.cn/2020/07/2020071304283065.jpg"> </p><p>至此，vCom容器中保存了所有机房的信息</p><h4 id="8-2-2-预约功能实现"><a href="#8-2-2-预约功能实现" class="headerlink" title="8.2.2 预约功能实现"></a>8.2.2 预约功能实现</h4><p>在student.cpp中实现成员函数<code>void Student::applyOrder();</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//申请预约</span></span><br><span class="line"><span class="keyword">void</span> Student::applyOrder()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> date = <span class="number">0</span>;           <span class="comment">//周一~周五</span></span><br><span class="line">    <span class="built_in">int</span> interval = <span class="number">0</span>;       <span class="comment">//上午、下午</span></span><br><span class="line">    <span class="built_in">int</span> roomId = <span class="number">0</span>;         <span class="comment">//机房容量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;机房开放的时间为周一至周五！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入申请预约的时间：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1、周一&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2、周二&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;3、周三&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;4、周四&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;5、周五&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; date;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">1</span> &lt;= date &amp;&amp; date &lt;= <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//调用 学生 子菜单</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;openMenu();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入申请预约的时间段：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1、上午&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2、下午&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; interval;</span><br><span class="line">        <span class="keyword">if</span> (interval &gt;= <span class="number">1</span> &amp;&amp; interval &lt;= <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择机房：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; vCom.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="keyword">this</span>-&gt;vCom[i].m_Name &lt;&lt; <span class="string">&quot;机房 容量：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;vCom[i].m_Maximum &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; roomId;</span><br><span class="line">        <span class="keyword">if</span> (roomId &gt;= <span class="number">1</span> &amp;&amp; roomId &lt;= <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    <span class="function">ofstream <span class="title">ofs</span>(<span class="params">ORDER_FILE, ios::<span class="keyword">out</span>  ios::app</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插入数据</span></span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;date:&quot;</span> &lt;&lt; date &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;interval:&quot;</span> &lt;&lt; interval &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;stuId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Id &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;stuName:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;roomId:&quot;</span> &lt;&lt; roomId &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;status:&quot;</span> &lt;&lt; <span class="number">1</span> &lt;&lt; endl;      <span class="comment">//1：审核中</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;预约成功，审核中&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序，测试代码：<br><img src="http://image.camcad.cn/2020/07/2020071304331824-1024x969.jpg"> </p><p>在order.txt文件中生成如下内容：<br><img src="http://image.camcad.cn/2020/07/2020071304374378-1024x379.jpg"></p><h3 id="8-3-显示预约"><a href="#8-3-显示预约" class="headerlink" title="8.3 显示预约"></a>8.3 显示预约</h3><h4 id="8-3-1-创建预约类"><a href="#8-3-1-创建预约类" class="headerlink" title="8.3.1 创建预约类"></a>8.3.1 创建预约类</h4><p><strong>功能描述：</strong>显示预约记录时，需要从文件中获取到所有记录，用来显示，创建预约的类来管理记录以及更新 </p><p><strong>原理：</strong><br><img src="http://image.camcad.cn/2020/07/2020071308274933-1024x353.jpg"> </p><p>在头文件以及源文件下分别创建<code>orderFile.h</code>和<code>orderFile.cpp</code>文件 orderFile.h中添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&quot;globalFile.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;map&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&lt;fstream&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">orderFile</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    orderFile();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//更新预约记录</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateOrder</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">initMap</span>(<span class="params"><span class="built_in">string</span> str</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//临时容器</span></span><br><span class="line">    map&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;m_tempMap;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//记录的容器 key---记录的条数 value---具体要求记录的键值对信息</span></span><br><span class="line">    map&lt;<span class="built_in">int</span>, map&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;&gt; m_OrderData;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//预约记录条数</span></span><br><span class="line">    <span class="built_in">int</span> m_Size;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在orderFile.cpp文件中实现<code>void initMap(string str);</code>初始化容器函数，代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化容器</span></span><br><span class="line"><span class="keyword">void</span> orderFile::initMap(<span class="built_in">string</span> str)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> tempKey;     <span class="comment">//临时Key值</span></span><br><span class="line">    <span class="built_in">string</span> tempValue;   <span class="comment">//临时Value值</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> start = <span class="number">0</span>;              <span class="comment">//起始位置</span></span><br><span class="line">    <span class="built_in">int</span> pos = str.find(<span class="string">&quot;:&quot;</span>);  <span class="comment">//返回&quot;:&quot;的位置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//不等于 -1 执行</span></span><br><span class="line">    <span class="keyword">if</span> (pos != <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tempKey = str.substr(start, pos);</span><br><span class="line">        tempValue = str.substr(pos + <span class="number">1</span>, str.size() - pos - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将分割的数据 放入到容器中</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_tempMap.insert(make_pair(tempKey, tempValue));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>构造函数</strong>中获取所有信息，并存放在容器中，添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">orderFile::orderFile()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_OrderData.clear();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//预约记录个数</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取文件中的数据 </span></span><br><span class="line">    <span class="built_in">string</span> date;        <span class="comment">//时间</span></span><br><span class="line">    <span class="built_in">string</span> interval;    <span class="comment">//时间段</span></span><br><span class="line">    <span class="built_in">string</span> stuId;       <span class="comment">//学生学号</span></span><br><span class="line">    <span class="built_in">string</span> stuName;     <span class="comment">//学生姓名</span></span><br><span class="line">    <span class="built_in">string</span> roomId;      <span class="comment">//机房编号</span></span><br><span class="line">    <span class="built_in">string</span> status;      <span class="comment">//预约状态</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    <span class="function">ifstream <span class="title">ifs</span>(<span class="params">ORDER_FILE, ios::<span class="keyword">in</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取内容</span></span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; date &amp;&amp; ifs &gt;&gt; interval &amp;&amp; ifs &gt;&gt; stuId &amp;&amp; ifs &gt;&gt;</span><br><span class="line">        stuName &amp;&amp; ifs &gt;&gt; roomId &amp;&amp; ifs &gt;&gt; status)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//初始化临时容器</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_tempMap.clear();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将数据放入到临时容器中</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(date);     <span class="comment">//时间</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(interval); <span class="comment">//时间段</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(stuId);        <span class="comment">//学生学号</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(stuName);      <span class="comment">//学生姓名</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(roomId);       <span class="comment">//机房编号</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initMap(status);       <span class="comment">//预约状态</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//将数据放入到容器中</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_OrderData.insert(make_pair(<span class="keyword">this</span>-&gt;m_Size, <span class="keyword">this</span>-&gt;m_tempMap));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//预约记录个数</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Size++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新预约记录的成员函数updateOrder代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新预约记录</span></span><br><span class="line"><span class="keyword">void</span> orderFile::updateOrder()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;     <span class="comment">//预约记录0条，直接return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    <span class="function">ofstream <span class="title">ofs</span>(<span class="params">ORDER_FILE, ios::<span class="keyword">out</span>  ios::trunc</span>)</span>;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;date:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;date&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;interval:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;interval&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;stuId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;stuId&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;stuName:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;stuName&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;roomId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;roomId&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        ofs &lt;&lt; <span class="string">&quot;status:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;status&quot;</span>] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-3-2-显示自身预约"><a href="#8-3-2-显示自身预约" class="headerlink" title="8.3.2 显示自身预约"></a>8.3.2 显示自身预约</h4><p>首先我们先添加几条预约记录，可以用程序添加或者直接修改order.txt文件 order.txt文件内容如下：比如我们有三名同学分别产生 了3条预约记录<br><img src="http://image.camcad.cn/2020/07/2020071314253295-1024x386.jpg"></p><p>在Student类的<code>void Student::showMyOrder();</code>成员函数中，添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看自身的预约</span></span><br><span class="line"><span class="keyword">void</span> Student::showMyOrder()</span><br><span class="line">&#123;</span><br><span class="line">    orderFile ord;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ord.m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; ord.m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//string 转 int</span></span><br><span class="line">        <span class="comment">//string 利用 .c_str() 转 const char *</span></span><br><span class="line">        <span class="comment">//利用 atoi(const char *) 转 int</span></span><br><span class="line">        <span class="keyword">if</span> (atoi(ord.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>].c_str()) == <span class="keyword">this</span>-&gt;m_Id)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; ord.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;   时段：&quot;</span> &lt;&lt; (ord.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;   机房：&quot;</span> &lt;&lt; ord.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line"></span><br><span class="line">            <span class="comment">//1审核中 2已预约 0取消预约 -1预约失败</span></span><br><span class="line">            <span class="built_in">string</span> status = <span class="string">&quot;   状态：&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (ord.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (ord.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                status += <span class="string">&quot;已预约&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (ord.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                status += <span class="string">&quot;预约失败&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试效果如图：<br><img src="http://image.camcad.cn/2020/07/202007131427211-1024x676.jpg"></p><h4 id="8-3-3-显示所有预约"><a href="#8-3-3-显示所有预约" class="headerlink" title="8.3.3 显示所有预约"></a>8.3.3 显示所有预约</h4><p>在Student类<code>void Student::showAllOrder();</code>成员函数，添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="keyword">void</span> Student::showAllOrder()</span><br><span class="line">&#123;</span><br><span class="line">    orderFile of;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; of.m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;、&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t学号：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuName&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t机房编号：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> status = <span class="string">&quot;\t状态：&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;已预约&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;预约失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试效果如图：<br><img src="http://image.camcad.cn/2020/07/2020071315091221-1024x464.jpg"></p><h3 id="8-4-取消预约"><a href="#8-4-取消预约" class="headerlink" title="8.4 取消预约"></a>8.4 取消预约</h3><p>在Student类的<code>void Student::cancelOrder();</code>成员函数中，添加如下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取消预约</span></span><br><span class="line"><span class="keyword">void</span> Student::cancelOrder()</span><br><span class="line">&#123;</span><br><span class="line">    orderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v;     <span class="comment">//存放在最大容器中的下标编号</span></span><br><span class="line">    <span class="built_in">int</span> index = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//先判断自身学号</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Id == atoi(of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>].c_str()))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//再筛选状态 审核中或预约成功</span></span><br><span class="line">            <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>  of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//放入到容器中</span></span><br><span class="line">                v.push_back(i);</span><br><span class="line"></span><br><span class="line">                cout &lt;&lt; index &lt;&lt; <span class="string">&quot;、&quot;</span>;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\t时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\t机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line"></span><br><span class="line">                <span class="built_in">string</span> status = <span class="string">&quot; \t状态：&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    status += <span class="string">&quot;已预约&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//记录下标加1</span></span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (v.size() == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有审核中或已预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;审核中或预约成功的记录可以取消，请输入取消的记录：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入取消预约状态的序号，0 表示返回&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> &gt;= <span class="number">0</span> &amp;&amp; <span class="keyword">select</span> &lt;= v.size())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                of.m_OrderData[v[<span class="keyword">select</span> - <span class="number">1</span>]][<span class="string">&quot;status&quot;</span>] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                of.updateOrder();</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;已取消预约！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9、教师模块"><a href="#9、教师模块" class="headerlink" title="9、教师模块"></a>9、教师模块</h2><h3 id="9-1-教师登录和注销"><a href="#9-1-教师登录和注销" class="headerlink" title="9.1 教师登录和注销"></a>9.1 教师登录和注销</h3><h4 id="9-1-1-构造函数"><a href="#9-1-1-构造函数" class="headerlink" title="9.1.1 构造函数"></a>9.1.1 构造函数</h4><ul><li>在Teacher类的构造函数中，初始化教师信息，代码如下：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有参构造 参数：职工编号、姓名、密码</span></span><br><span class="line">Teacher::Teacher(<span class="built_in">int</span> empid, <span class="built_in">string</span> name, <span class="built_in">string</span> pwd)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_EmpId = empid;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-1-2-教师子菜单"><a href="#9-1-2-教师子菜单" class="headerlink" title="9.1.2 教师子菜单"></a>9.1.2 教师子菜单</h4><h5 id="在机房预约系统-cpp中，当用户登录的是教师，添加教师菜单接口"><a href="#在机房预约系统-cpp中，当用户登录的是教师，添加教师菜单接口" class="headerlink" title="在机房预约系统.cpp中，当用户登录的是教师，添加教师菜单接口"></a>在机房预约系统.cpp中，当用户登录的是教师，添加教师菜单接口</h5><h5 id="将不同的分支提供出来-2"><a href="#将不同的分支提供出来-2" class="headerlink" title="将不同的分支提供出来"></a>将不同的分支提供出来</h5><ul><li>所有预约</li><li>审核预约</li><li>注销登录</li></ul><h5 id="实现注销功能-1"><a href="#实现注销功能-1" class="headerlink" title="实现注销功能"></a>实现注销功能</h5><p>添加全局函数<code>void TeacherMenu(Person * &amp;p);</code>代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//老师 子菜单</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">teacherMenu</span>(<span class="params">Identity * &amp;p</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//调用 老师 子菜单</span></span><br><span class="line">        p-&gt;openMenu();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将父类指针 转为子类指针，调用子类里其他接口</span></span><br><span class="line">        Teacher *tea = (Teacher*)p;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收用户选项</span></span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span>;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)        <span class="comment">//查看所有预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            tea-&gt;showAllOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">2</span>)   <span class="comment">//审核预约</span></span><br><span class="line">        &#123;</span><br><span class="line">            tea-&gt;validOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">0</span>)   <span class="comment">//注销登录</span></span><br><span class="line">        &#123;</span><br><span class="line">            delete p;       <span class="comment">//释放堆区对象</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;注销登录成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-1-3-菜单功能实现"><a href="#9-1-3-菜单功能实现" class="headerlink" title="9.1.3 菜单功能实现"></a>9.1.3 菜单功能实现</h4><ul><li>在实现成员函数<code>void Teacher::operMenu();</code>代码如下：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="keyword">void</span> Teacher::openMenu()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎教师：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot; 登录&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           1.所有预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           2.审核预约           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t                                \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t           0.注销登录           \n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t----------------------------------\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-1-4-接口对接"><a href="#9-1-4-接口对接" class="headerlink" title="9.1.4 接口对接"></a>9.1.4 接口对接</h4><ul><li>教师成功登录后，调用教师的子菜单界面</li><li>在教师登录分支中，添加代码：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入老师身份的子菜单</span></span><br><span class="line">teacherMenu(person);</span><br></pre></td></tr></table></figure><p>添加效果如图：<br><img src="http://image.camcad.cn/2020/07/2020071407331765.jpg"> </p><p>测试对接，效果如图： 登录验证通过：<br><img src="http://image.camcad.cn/2020/07/2020071407351663-1024x742.jpg"> </p><p>教师子菜单：<br><img src="http://image.camcad.cn/2020/07/2020071407362592-1024x442.jpg"> </p><p>注销登录：<br><img src="http://image.camcad.cn/2020/07/2020071407373472-1024x477.jpg"></p><h3 id="9-2-查看所有预约"><a href="#9-2-查看所有预约" class="headerlink" title="9.2 查看所有预约"></a>9.2 查看所有预约</h3><h4 id="9-2-1-所有预约功能实现"><a href="#9-2-1-所有预约功能实现" class="headerlink" title="9.2.1 所有预约功能实现"></a>9.2.1 所有预约功能实现</h4><p>该功能与学生身份的查看所有预约功能相似，用于显示所有预约记录 在Teacher.cpp中实现成员函数<code>void Teacher::showAllOrder();</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="keyword">void</span> Teacher::showAllOrder()</span><br><span class="line">&#123;</span><br><span class="line">    orderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; of.m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;、&quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t学号&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t姓名&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuName&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t机房&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> status = <span class="string">&quot; \t状态：&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;已预约&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;取消预约&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            status += <span class="string">&quot;预约失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-2-2-测试功能"><a href="#9-2-2-测试功能" class="headerlink" title="9.2.2 测试功能"></a>9.2.2 测试功能</h4><p>运行测试教师身份的查看所有预约功能 测试效果如图：<br><img src="http://image.camcad.cn/2020/07/2020071408063976-1024x431.jpg"></p><h3 id="9-3-审核预约"><a href="#9-3-审核预约" class="headerlink" title="9.3 审核预约"></a>9.3 审核预约</h3><h4 id="9-3-1-审核功能实现"><a href="#9-3-1-审核功能实现" class="headerlink" title="9.3.1 审核功能实现"></a>9.3.1 审核功能实现</h4><p>功能描述：教师审核学生的预约，依据实现情况审核预约 在Teacher.cpp中实现成员函数<code>void Teacher::validOrder();</code> 代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//审核预约</span></span><br><span class="line"><span class="keyword">void</span> Teacher::validOrder()</span><br><span class="line">&#123;</span><br><span class="line">    orderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有预约记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v;</span><br><span class="line">    v.clear();</span><br><span class="line">    <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; of.m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            v.push_back(i);</span><br><span class="line">            cout &lt;&lt; ++index &lt;&lt; <span class="string">&quot;、&quot;</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;\t时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;\t学号：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuName&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;\t机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> status = <span class="string">&quot; \t状态：&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (v.size() == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;暂时没有审核中的记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;审核中或预约成功的记录可以取消，请输入取消的记录：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入取消预约状态的序号，0 表示返回&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>; <span class="comment">//接收用户选择的预约记录</span></span><br><span class="line">    <span class="built_in">int</span> ret = <span class="number">0</span>;    <span class="comment">//接收预约结果记录</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span> &gt;= <span class="number">0</span> &amp;&amp; <span class="keyword">select</span> &lt;= v.size())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入审核结果：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;1、通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;-1、不通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">                cin &gt;&gt; ret;</span><br><span class="line">                <span class="keyword">if</span> (ret == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    of.m_OrderData[v[<span class="keyword">select</span> - <span class="number">1</span>]][<span class="string">&quot;status&quot;</span>] = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    of.m_OrderData[v[<span class="keyword">select</span> - <span class="number">1</span>]][<span class="string">&quot;status&quot;</span>] = <span class="string">&quot;-1&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                &#125;</span><br><span class="line">                of.updateOrder();</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;审核完毕！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-3-2-测试审核预约"><a href="#9-3-2-测试审核预约" class="headerlink" title="9.3.2 测试审核预约"></a>9.3.2 测试审核预约</h4><p>测试-审核通过<br><img src="http://image.camcad.cn/2020/07/2020071415561137-1024x549.jpg"></p><p>审核通过情况<br> <img src="http://image.camcad.cn/2020/07/2020071415580573-1024x400.jpg"></p><p>测试-审核不通过<br><img src="http://image.camcad.cn/2020/07/2020071415593928-1024x523.jpg"> </p><p>审核未通达情况<br><img src="http://image.camcad.cn/2020/07/2020071416013393-1024x397.jpg"> </p><p>学生身份下查看记录<br><img src="http://image.camcad.cn/2020/07/202007141603083-1024x639.jpg"> </p><p>审核预约成功！</p><p>至此本案例制作完毕！<code>ˆ-ˆ ˆ-ˆ</code></p>]]></content>
    
    
    <summary type="html">机房预约系统</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程82：演讲比赛流程管理系统-头文件/源文件</title>
    <link href="https://notes.camcad.cn/post/17c061d0.html"/>
    <id>https://notes.camcad.cn/post/17c061d0.html</id>
    <published>2020-08-05T13:03:20.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="基于STL-演讲比赛流程管理系统"><a href="#基于STL-演讲比赛流程管理系统" class="headerlink" title="基于STL-演讲比赛流程管理系统"></a>基于STL-演讲比赛流程管理系统</h1><h2 id="头文件（speaker-h）"><a href="#头文件（speaker-h）" class="headerlink" title="头文件（speaker.h）"></a>头文件（speaker.h）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="头文件（speechManager-h）"><a href="#头文件（speechManager-h）" class="headerlink" title="头文件（speechManager.h）"></a>头文件（speechManager.h）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">#pragma once</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;map&gt;</span><br><span class="line">#include&quot;speaker.h&quot;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;deque&gt;</span><br><span class="line">#include&lt;functional&gt;</span><br><span class="line">#include&lt;numeric&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">#include&lt;fstream&gt;</span><br><span class="line"></span><br><span class="line">#define FILENAME &quot;speech.csv&quot; //文件名称</span><br><span class="line"></span><br><span class="line">//演讲管理类</span><br><span class="line">class speechManager</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    //构造函数</span><br><span class="line">    speechManager();</span><br><span class="line"></span><br><span class="line">    //展示菜单</span><br><span class="line">    void show_Menu();</span><br><span class="line"></span><br><span class="line">    //退出功能</span><br><span class="line">    void exitSystem();</span><br><span class="line"></span><br><span class="line">    //析构函数</span><br><span class="line">    ~speechManager();</span><br><span class="line"></span><br><span class="line">    //比赛选手 容器 12人</span><br><span class="line">    vector&lt;int&gt;v1;</span><br><span class="line"></span><br><span class="line">    //第一轮晋级容器 6人</span><br><span class="line">    vector&lt;int&gt;v2;</span><br><span class="line"></span><br><span class="line">    //胜利前三名容器 3人</span><br><span class="line">    vector&lt;int&gt;vVictory;</span><br><span class="line"></span><br><span class="line">    //存放编号 以及对应的具体选手 容器</span><br><span class="line">    map&lt;int, Speaker&gt;m_Speaker;</span><br><span class="line"></span><br><span class="line">    //记录比赛轮数</span><br><span class="line">    int m_Index;</span><br><span class="line"></span><br><span class="line">    //初始化属性</span><br><span class="line">    void initSpeech();</span><br><span class="line"></span><br><span class="line">    //初始化创建12名选手</span><br><span class="line">    void createSpeaker();</span><br><span class="line"></span><br><span class="line">    //开始比赛-比赛流程控制</span><br><span class="line">    void startSpeech();</span><br><span class="line"></span><br><span class="line">    //抽签</span><br><span class="line">    void speechDraw();</span><br><span class="line"></span><br><span class="line">    //开始比赛</span><br><span class="line">    void speechContest();</span><br><span class="line"></span><br><span class="line">    //显示得分</span><br><span class="line">    void showScore();</span><br><span class="line"></span><br><span class="line">    //保存分数</span><br><span class="line">    void saveRecord();</span><br><span class="line"></span><br><span class="line">    //读取记录</span><br><span class="line">    void loadRecord();</span><br><span class="line"></span><br><span class="line">    //文件为空的标志</span><br><span class="line">    bool fileIsEmpty;</span><br><span class="line"></span><br><span class="line">    //往届记录</span><br><span class="line">    map&lt;int, vector&lt;string&gt;&gt;m_Record;</span><br><span class="line"></span><br><span class="line">    //显示往届得分</span><br><span class="line">    void showRecord();</span><br><span class="line"></span><br><span class="line">    //清空记录</span><br><span class="line">    void clearRecord();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="源文件（speechManager-cpp）"><a href="#源文件（speechManager-cpp）" class="headerlink" title="源文件（speechManager.cpp）"></a>源文件（speechManager.cpp）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&quot;speechManager.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">speechManager::speechManager()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化容器和属性</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;initSpeech();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化创建12名选手</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;createSpeaker();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取记录</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;loadRecord();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//展示菜单</span></span><br><span class="line"><span class="keyword">void</span> speechManager::show_Menu()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;************************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*************** 欢迎参加演讲比赛 ***************&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*************** 1、开始演讲比赛  ***************&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*************** 2、查看往届记录  ***************&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*************** 3、清空比赛记录  ***************&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*************** 0、退出比赛程序  ***************&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;************************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//退出功能</span></span><br><span class="line"><span class="keyword">void</span> speechManager::exitSystem()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎下次使用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">void</span> speechManager::initSpeech()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//容器都置空</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;v1.clear();</span><br><span class="line">    <span class="keyword">this</span>-&gt;v2.clear();</span><br><span class="line">    <span class="keyword">this</span>-&gt;vVictory.clear();</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Speaker.clear();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化比赛轮数</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Index = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化记录容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Record.clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化创建12名选手</span></span><br><span class="line"><span class="keyword">void</span> speechManager::createSpeaker()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> nameSeed = <span class="string">&quot;ABCDEFJHIJKL&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; nameSeed.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//姓名</span></span><br><span class="line">        <span class="built_in">string</span> name = <span class="string">&quot;选手&quot;</span>;</span><br><span class="line">        name += nameSeed[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//选手属性</span></span><br><span class="line">        Speaker sp;</span><br><span class="line">        sp.m_Name = name;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//分数</span></span><br><span class="line">        <span class="keyword">for</span> (size_t j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sp.m_Score[j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//12名选手编号</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;v1.push_back(i + <span class="number">10001</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//选手编号 以及对应的选手 存放到map容器中</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Speaker.insert(make_pair(i + <span class="number">10001</span>, sp));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始比赛</span></span><br><span class="line"><span class="keyword">void</span> speechManager::startSpeech()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//第一轮开始比赛</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1、抽签</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;speechDraw();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、比赛</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;speechContest();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、显示晋级结果</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;showScore();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二轮开始比赛</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Index++;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1、抽签</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;speechDraw();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、比赛</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;speechContest();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、显示晋级结果</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;showScore();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4、保存分数</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;saveRecord();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重置比赛，获取记录</span></span><br><span class="line">        <span class="comment">//初始化容器和属性</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;initSpeech();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化创建12名选手</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;createSpeaker();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取记录</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;loadRecord();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;本届比赛已结束!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽签</span></span><br><span class="line"><span class="keyword">void</span> speechManager::speechDraw()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;第&lt;&lt; &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot; &gt;&gt;轮比赛选手正在抽签&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;-----------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;抽签后演讲顺序如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        random_shuffle(v1.begin(), v1.end());</span><br><span class="line">        <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::iterator it = v1.begin(); it != v1.end(); it++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        random_shuffle(v2.begin(), v2.end());</span><br><span class="line">        <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::iterator it = v2.begin(); it != v2.end(); it++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;-----------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始比赛</span></span><br><span class="line"><span class="keyword">void</span> speechManager::speechContest()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;-----------第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮比赛开始-----------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//准备临时容器，存放小组成绩</span></span><br><span class="line">    multimap&lt;<span class="built_in">double</span>, <span class="built_in">int</span>, greater&lt;<span class="built_in">double</span>&gt;&gt;gourpScore;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//记录人员个数 6人一组</span></span><br><span class="line">    <span class="built_in">int</span> num = <span class="number">0</span>;    </span><br><span class="line"></span><br><span class="line">    <span class="comment">//比赛选手容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v_Src;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v_Src = v1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        v_Src = v2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::iterator it = v_Src.begin(); it != v_Src.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//循环一次+1</span></span><br><span class="line">        num++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//评委打分</span></span><br><span class="line">        deque&lt;<span class="built_in">double</span>&gt;d;</span><br><span class="line">        <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//随机数</span></span><br><span class="line">            <span class="built_in">double</span> score = (rand() % <span class="number">401</span> + <span class="number">600</span>) / <span class="number">10.0f</span>;    <span class="comment">//起始值600，终止1000</span></span><br><span class="line"></span><br><span class="line">            d.push_back(score);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//排序 降序</span></span><br><span class="line">        sort(d.begin(), d.end(), greater&lt;<span class="built_in">double</span>&gt;());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//去除最高分</span></span><br><span class="line">        d.pop_front();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//去除最底分</span></span><br><span class="line">        d.pop_back();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求出总和</span></span><br><span class="line">        <span class="built_in">double</span> sum = accumulate(d.begin(), d.end(), <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求出平均分</span></span><br><span class="line">        <span class="built_in">double</span> average = sum / (<span class="built_in">double</span>)d.size();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//cout &lt;&lt; &quot;编号：&quot; &lt;&lt; *it &lt;&lt; &quot; 姓名&quot; &lt;&lt; this-&gt;m_Speaker[*it].m_Name &lt;&lt; &quot; 平均分：&quot; &lt;&lt; average &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//将平均分放入到map容器里</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] = average;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将平均分数据 存放到临时小组容器中</span></span><br><span class="line">        gourpScore.insert(make_pair(average, *it));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//每6人取出前3名</span></span><br><span class="line">        <span class="keyword">if</span> (num % <span class="number">6</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; num / <span class="number">6</span> &lt;&lt; <span class="string">&quot;小组比赛名次：&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">for</span> (multimap&lt;<span class="built_in">double</span>, <span class="built_in">int</span>, greater&lt;<span class="built_in">double</span>&gt;&gt;::iterator it = gourpScore.begin(); it != gourpScore.end(); it++)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;编号：&quot;</span> &lt;&lt; it-&gt;second &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[it-&gt;second].m_Name </span><br><span class="line">                    &lt;&lt; <span class="string">&quot;\t成绩：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[it-&gt;second].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//取出前3名</span></span><br><span class="line">            <span class="built_in">int</span> count = <span class="number">0</span>;  <span class="comment">//计数</span></span><br><span class="line">            <span class="keyword">for</span> (multimap&lt;<span class="built_in">double</span>, <span class="built_in">int</span>, greater&lt;<span class="built_in">double</span>&gt;&gt;::iterator it = gourpScore.begin(); it != gourpScore.end() &amp;&amp; count &lt; <span class="number">3</span>; it++, count++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">this</span>-&gt;v2.push_back(((*it).second));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">this</span>-&gt;vVictory.push_back((*it).second);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//清空临时容器</span></span><br><span class="line">            gourpScore.clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;-----------第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮比赛完毕-----------&quot;</span> &lt;&lt; endl;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示得分</span></span><br><span class="line"><span class="keyword">void</span> speechManager::showScore()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;-----------第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮晋级选手-----------&quot;</span> &lt;&lt; endl;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = <span class="keyword">this</span>-&gt;v2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        v = <span class="keyword">this</span>-&gt;vVictory;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::iterator it = v.begin(); it != v.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;编号：&quot;</span> &lt;&lt; *it &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Name </span><br><span class="line">            &lt;&lt; <span class="string">&quot;\t成绩：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  </span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);    <span class="comment">//清屏</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>-&gt;show_Menu();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存分数</span></span><br><span class="line"><span class="keyword">void</span> speechManager::saveRecord()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建文本--写文件</span></span><br><span class="line">    ofs.open(FILENAME, ios::<span class="keyword">out</span>  ios::app);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输入内容</span></span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::iterator it = vVictory.begin(); it != vVictory.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        ofs &lt;&lt; *it &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="number">1</span>] &lt;&lt; <span class="string">&quot;,&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ofs &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;数据已经保存&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//更改文件不为空的状态</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取记录</span></span><br><span class="line"><span class="keyword">void</span> speechManager::loadRecord()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取文本-读文件</span></span><br><span class="line">    ifs.open(FILENAME, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件是否存在</span></span><br><span class="line">    <span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">        ifs.clear();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件是否为空</span></span><br><span class="line">    <span class="built_in">char</span> ch;</span><br><span class="line">    ifs &gt;&gt; ch;</span><br><span class="line">    <span class="keyword">if</span> (ifs.eof())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">        ifs.clear();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//文件存在并且有数据</span></span><br><span class="line">    ifs.putback(ch);    <span class="comment">//将上面读取的单个字符再放回</span></span><br><span class="line">    <span class="built_in">string</span> data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下标</span></span><br><span class="line">    <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; data)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//临时存储</span></span><br><span class="line">        vector&lt;<span class="built_in">string</span>&gt;v;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> pos = <span class="number">-1</span>;   <span class="comment">//查到“,”位置的变量</span></span><br><span class="line">        <span class="built_in">int</span> start = <span class="number">0</span>;  <span class="comment">//起始位置</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            pos = data.find(<span class="string">&quot;,&quot;</span>, start);  <span class="comment">//从0开始查找 &#x27;，&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> (pos == <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;      <span class="comment">//找不到 break返回</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> temp = data.substr(start, pos - start);  <span class="comment">//找到了，进行分割 参数1 起始位置，参数2 截取长度</span></span><br><span class="line">            v.push_back(temp);</span><br><span class="line">            start = pos + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将数据放入到容器</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Record.insert(make_pair(index, v));</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">false</span>;</span><br><span class="line">    ifs.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示往届得分</span></span><br><span class="line"><span class="keyword">void</span> speechManager::showRecord()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;fileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在或为空&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Record.size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;届&quot;</span> &lt;&lt;</span><br><span class="line">                <span class="string">&quot; 冠军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">0</span>] &lt;&lt; <span class="string">&quot;  得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">1</span>] &lt;&lt;</span><br><span class="line">                <span class="string">&quot; \t亚军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">2</span>] &lt;&lt; <span class="string">&quot;  得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">3</span>] &lt;&lt;</span><br><span class="line">                <span class="string">&quot; \t季军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">4</span>] &lt;&lt; <span class="string">&quot;  得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">5</span>] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空容器</span></span><br><span class="line"><span class="keyword">void</span> speechManager::clearRecord()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;清空记录，请选择以下选项：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.确实&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.取消&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//创建流文件</span></span><br><span class="line">        ofstream ofs;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打开文件--写文件</span></span><br><span class="line">        ofs.open(FILENAME, ios::trunc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭文件</span></span><br><span class="line">        ofs.clear();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化容器和属性</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;initSpeech();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化创建12名选手</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;createSpeaker();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//读取记录</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;loadRecord();</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;清空完成&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">speechManager::~speechManager()</span><br><span class="line">&#123;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="源文件（演讲比赛流程管理系统-cpp）"><a href="#源文件（演讲比赛流程管理系统-cpp）" class="headerlink" title="源文件（演讲比赛流程管理系统.cpp）"></a>源文件（演讲比赛流程管理系统.cpp）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &quot;speechManager.h&quot;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&lt;ctime&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//随机数种子</span></span><br><span class="line">    srand((unsigned <span class="built_in">int</span>)time(NULL));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建对象</span></span><br><span class="line">    speechManager sm;</span><br><span class="line">    <span class="built_in">int</span> choice = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sm.show_Menu();</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; choice;        <span class="comment">//接受用户的选择</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (choice)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:     <span class="comment">//开始演讲</span></span><br><span class="line">            sm.startSpeech();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:     <span class="comment">//往届记录</span></span><br><span class="line">            sm.showRecord();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:     <span class="comment">//清空记录</span></span><br><span class="line">            sm.clearRecord();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:     <span class="comment">//退出功能</span></span><br><span class="line">            sm.exitSystem();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="literal">default</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);        <span class="comment">//清屏</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">演讲比赛流程管理系统-头文件/源文件</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程81：演讲比赛流程管理系统</title>
    <link href="https://notes.camcad.cn/post/adbe7ef1.html"/>
    <id>https://notes.camcad.cn/post/adbe7ef1.html</id>
    <published>2020-08-05T09:23:46.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="演讲比赛流程管理系统"><a href="#演讲比赛流程管理系统" class="headerlink" title="演讲比赛流程管理系统"></a>演讲比赛流程管理系统</h1><h2 id="1、演讲比赛程序需求"><a href="#1、演讲比赛程序需求" class="headerlink" title="1、演讲比赛程序需求"></a>1、演讲比赛程序需求</h2><p><img src="http://image.camcad.cn/2020/07/202007070119598-1024x631.jpg"></p><h3 id="1-1-比赛规则"><a href="#1-1-比赛规则" class="headerlink" title="1.1 比赛规则"></a>1.1 比赛规则</h3><ul><li>学校举行一场演讲比赛，共有<strong>12个人</strong>参加。<strong>比赛共两轮</strong>，第一轮为淘汰赛，第二轮为决赛。</li><li>每名选手都有对应的<strong>编号</strong>，如10001~10012。</li><li>比赛方式：<strong>分组比赛，每组6个人</strong>。</li><li>第一轮分为两个小组，整体按照选手编号进行<strong>抽签</strong>后顺序演讲。</li><li><strong>十个评委</strong>分别给每名选手打分，去除最高分和最低分，求的平均分为本轮选手的成绩。</li><li>当小组演讲完后，淘汰组内排名最前的三个选手，<strong>前三名晋级</strong>，进入下一轮的比赛。</li><li>第二轮为决赛，<strong>前三名胜出</strong>。</li><li>每轮比赛过后需要<strong>显示晋级选手的信息</strong>。</li></ul><h2 id="2、项目创建"><a href="#2、项目创建" class="headerlink" title="2、项目创建"></a>2、项目创建</h2><p><strong>创建项目步骤如下：</strong></p><ul><li>创建新项目</li><li>添加文件</li></ul><h3 id="2-1-创建项目"><a href="#2-1-创建项目" class="headerlink" title="2.1 创建项目"></a>2.1 创建项目</h3><ul><li>打开VS 后，点击创建新项目，创建新的C++项目。</li></ul><p><strong>如图：</strong><br><img src="http://image.camcad.cn/2020/07/2020070701361844-1024x525.jpg"></p><ul><li>填写项目名称以及选取项目路径，点击确定生成项目。<br><img src="http://image.camcad.cn/2020/07/2020070701405064-1024x786.jpg"></li></ul><h3 id="2-2-添加文件"><a href="#2-2-添加文件" class="headerlink" title="2.2 添加文件"></a>2.2 添加文件</h3><ul><li><p>右键源文件，进行添加文件操作<br><img src="http://image.camcad.cn/2020/07/2020070701444981-1024x510.jpg"></p></li><li><p>填写文件名称，点击添加<br><img src="http://image.camcad.cn/2020/07/2020070701465965-1024x786.jpg"></p></li><li><p>生成文件成功，效果如下图<br><img src="http://image.camcad.cn/2020/07/2020070701494454-1024x512.jpg"></p></li><li><p>至此，项目已创建完毕。</p></li></ul><h2 id="3、创建管理类"><a href="#3、创建管理类" class="headerlink" title="3、创建管理类"></a>3、创建管理类</h2><p><strong>功能描述：</strong></p><ul><li>提供菜单界面与用户交互</li><li>对演讲赛流程进行控制</li><li>与文件的读写交互</li></ul><h3 id="3-1-创建文件"><a href="#3-1-创建文件" class="headerlink" title="3.1 创建文件"></a>3.1 创建文件</h3><ul><li>在头文件和源文件的文件夹下分别 创建speechManager.h和speechManager.cpp文件。<br><img src="http://image.camcad.cn/2020/07/2020070701591658-1024x414.jpg"></li></ul><h3 id="3-2-头文件实现"><a href="#3-2-头文件实现" class="headerlink" title="3.2 头文件实现"></a>3.2 头文件实现</h3><p>在speechManager.h中设计管理类 代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//演讲管理类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">speechManager</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    speechManager();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~speechManager();</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3-3-源文件实现"><a href="#3-3-源文件实现" class="headerlink" title="3.3 源文件实现"></a>3.3 源文件实现</h3><p>在speechManager.cpp中将构造和析构函数实现补全 代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&quot;speechManager.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">speechManager::speechManager()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">speechManager::~speechManager()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、菜单功能"><a href="#4、菜单功能" class="headerlink" title="4、菜单功能"></a>4、菜单功能</h2><p>功能描述：与用户的沟通界面</p><h3 id="4-1-添加成员函数"><a href="#4-1-添加成员函数" class="headerlink" title="4.1 添加成员函数"></a>4.1 添加成员函数</h3><p>在管理类speechManager.h中添加成员函数<code>void show_Menu();</code><br><img src="http://image.camcad.cn/2020/07/2020070702413076.jpg"></p><h3 id="4-2-菜单功能实现"><a href="#4-2-菜单功能实现" class="headerlink" title="4.2 菜单功能实现"></a>4.2 菜单功能实现</h3><ul><li><p>在管理类speechManager.cpp中实现<code>show_Menu()</code>函数。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//展示菜单</span></span><br><span class="line"><span class="keyword">void</span> speechManager::show_Menu()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;************************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************** 欢迎参加演讲比赛 ***************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************** 1、开始演讲比赛  ***************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************** 2、查看往届记录  ***************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************** 3、清空比赛记录  ***************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************** 4、退出比赛程序  ***************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;************************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-3-测试菜单功能"><a href="#4-3-测试菜单功能" class="headerlink" title="4.3 测试菜单功能"></a>4.3 测试菜单功能</h3><ul><li>在演讲比赛流程管理系统.cpp中测试菜单功能 代码：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &quot;speechManager.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    speechManager sm;</span><br><span class="line">    sm.show_Menu();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>运行效果如下：<br><img src="http://image.camcad.cn/2020/07/2020070702463329.jpg"></li><li>菜单界面搭建完毕</li></ul><h2 id="5、退出功能"><a href="#5、退出功能" class="headerlink" title="5、退出功能"></a>5、退出功能</h2><p>功能描述：实现退出程序</p><h3 id="5-1-提供功能接口"><a href="#5-1-提供功能接口" class="headerlink" title="5.1 提供功能接口"></a>5.1 提供功能接口</h3><ul><li>在main函数中提供分支选择，提供每个功能接口 代码：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &quot;speechManager.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    speechManager sm;</span><br><span class="line">    <span class="built_in">int</span> choice = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sm.show_Menu();</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; choice;        <span class="comment">//接受用户的选择</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (choice)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:     <span class="comment">//开始演讲</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:     <span class="comment">//往届记录</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:     <span class="comment">//清空记录</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:     <span class="comment">//退出功能</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="literal">default</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);        <span class="comment">//清屏</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现退出功能"><a href="#实现退出功能" class="headerlink" title="实现退出功能"></a>实现退出功能</h3><p>在speechManager.h中提供退出系统的成员函数<code>void exitSystem();</code><br><img src="http://image.camcad.cn/2020/07/2020070703300962.jpg"></p><p>在speechManager.cpp中提供具体的功能实现。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//退出功能</span></span><br><span class="line"><span class="keyword">void</span> speechManager::exitSystem()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎下次使用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-测试功能"><a href="#5-3-测试功能" class="headerlink" title="5.3 测试功能"></a>5.3 测试功能</h3><p>在main函数分支0选项中，调用退出程序的接口<br><img src="http://image.camcad.cn/2020/07/2020070703312549.jpg"></p><ul><li>运行测试效果如图：<br><img src="http://image.camcad.cn/2020/07/2020070703325357.jpg"></li></ul><h2 id="6、演讲比赛功能"><a href="#6、演讲比赛功能" class="headerlink" title="6、演讲比赛功能"></a>6、演讲比赛功能</h2><h3 id="6-1-功能分析"><a href="#6-1-功能分析" class="headerlink" title="6.1 功能分析"></a>6.1 功能分析</h3><p><strong>比赛流程分析：</strong> 抽签–&gt;开始演讲比赛–&gt;显示第一轮比赛结果–&gt; 抽签开始演讲比赛–&gt;显示前三名结果–&gt;保存分数</p><h3 id="6-2-创建选手类"><a href="#6-2-创建选手类" class="headerlink" title="6.2 创建选手类"></a>6.2 创建选手类</h3><ul><li>选手类中的属性包含：选手姓名、分数</li><li>头文件中创建speaker.h文件，并添加代码：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Speaker</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> m_Name;      <span class="comment">//姓名</span></span><br><span class="line">    <span class="built_in">double</span> m_Score[<span class="number">2</span>];  <span class="comment">//分数 最多有两轮得分</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="6-3-比赛"><a href="#6-3-比赛" class="headerlink" title="6.3 比赛"></a>6.3 比赛</h3><h4 id="6-3-1-成员属性添加"><a href="#6-3-1-成员属性添加" class="headerlink" title="6.3.1 成员属性添加"></a>6.3.1 成员属性添加</h4><ul><li>在speechManager.h中添加属性</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//比赛选手 容器 12人</span></span><br><span class="line">vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一轮晋级容器 6人</span></span><br><span class="line">vector&lt;<span class="built_in">int</span>&gt;v2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//胜利前三名容器 3人</span></span><br><span class="line">vector&lt;<span class="built_in">int</span>&gt;vVictory;</span><br><span class="line"></span><br><span class="line"><span class="comment">//存放编号 以及对应的具体选手 容器</span></span><br><span class="line">map&lt;<span class="built_in">int</span>, Speaker&gt;m_Speaker;</span><br><span class="line"></span><br><span class="line"><span class="comment">//记录比赛轮数</span></span><br><span class="line"><span class="built_in">int</span> m_Index;</span><br></pre></td></tr></table></figure><h4 id="6-3-2-初始化属性"><a href="#6-3-2-初始化属性" class="headerlink" title="6.3.2 初始化属性"></a>6.3.2 初始化属性</h4><ul><li>在speechManager.h中提供开始比赛的成员函数<code>void initSpeech();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initSpeech</span>()</span>;</span><br></pre></td></tr></table></figure><ul><li>在speechManager.cpp中实现<code>void initSpeech();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">void</span> speechManager::initSpeech()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//容器都置空</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;v1.clear();</span><br><span class="line">    <span class="keyword">this</span>-&gt;v2.clear();</span><br><span class="line">    <span class="keyword">this</span>-&gt;vVictory.clear();</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Speaker.clear();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化比赛轮数</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Index = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>speechManager构造函数中调用<code>void initSpeech();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">speechManager::speechManager()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化容器和属性</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;initSpeech();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-3-3-创建选手"><a href="#6-3-3-创建选手" class="headerlink" title="6.3.3 创建选手"></a>6.3.3 创建选手</h4><ul><li>在speechManager.h中提供开始比赛的成员函数<code>void createSpeaker();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化创建12名选手</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createSpeaker</span>()</span>;</span><br></pre></td></tr></table></figure><ul><li>在speechManager.cpp中实现<code>void createSpeaker();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化创建12名选手</span></span><br><span class="line"><span class="keyword">void</span> speechManager::createSpeaker()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> nameSeed = <span class="string">&quot;ABCDEFJHIJKL&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; nameSeed.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//姓名</span></span><br><span class="line">        <span class="built_in">string</span> name = <span class="string">&quot;选手&quot;</span>;</span><br><span class="line">        name += nameSeed[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//选手属性</span></span><br><span class="line">        Speaker sp;</span><br><span class="line">        sp.m_Name = name;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//分数</span></span><br><span class="line">        <span class="keyword">for</span> (size_t j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sp.m_Score[j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//12名选手编号</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;v1.push_back(i + <span class="number">10001</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//选手编号 以及对应的选手 存放到map容器中</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Speaker.insert(make_pair(i + <span class="number">10001</span>, sp));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>speechManager类的构造函数中调用<code>void createSpeaker();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">speechManager::speechManager()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化容器和属性</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;initSpeech();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化创建12名选手</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;createSpeaker();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试在main函数中，可以在创建完管理对象后，使用下列代码测试12名选手初始状态</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="keyword">for</span> (map&lt;<span class="built_in">int</span>, Speaker&gt;::iterator it = sm.m_Speaker.begin(); it != sm.m_Speaker.end(); it++)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;选手编号：&quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; it-&gt;second.m_Name &lt;&lt; <span class="string">&quot;\t成绩1：&quot;</span> </span><br><span class="line">        &lt;&lt; it-&gt;second.m_Score[<span class="number">0</span>] &lt;&lt; <span class="string">&quot;\t成绩2：&quot;</span> &lt;&lt; it-&gt;second.m_Score[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2020/07/2020070709511852-1024x994.jpg"></p><ul><li><p>测试效果如图：<br><img src="http://image.camcad.cn/2020/07/2020070709530874.jpg"></p></li><li><p>测试完毕后，可以将测试代码删除或者注释。</p></li></ul><h4 id="6-3-4-开始比赛成员函数添加"><a href="#6-3-4-开始比赛成员函数添加" class="headerlink" title="6.3.4 开始比赛成员函数添加"></a>6.3.4 开始比赛成员函数添加</h4><ul><li>在speechManager.h中提供开始比赛的成员函数<code>void startSpeech();</code></li><li>该函数功能是主要控制比赛的流程。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开始比赛-比赛流程控制</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">startSpeech</span>()</span>;</span><br></pre></td></tr></table></figure><ul><li>在speechManager.cpp中将startSpeech的空实现先写入。</li><li>我们可以先将整个比赛的流程写到函数中。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开始比赛</span></span><br><span class="line"><span class="keyword">void</span> speechManager::startSpeech()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//第一轮开始比赛</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1、抽签</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、比赛</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、显示晋级结果</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二轮开始比赛</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1、抽签</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、比赛</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、显示晋级结果</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//4、保存分数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-3-5-抽签"><a href="#6-3-5-抽签" class="headerlink" title="6.3.5 抽签"></a>6.3.5 抽签</h4><p><strong>功能描述：</strong></p><ul><li>正式比赛前，所有选手的比赛顺序需要打乱，我们只需要将存放选手编号的容器打乱次序即可。</li><li>在speechManager.h中提供抽签的成员函数<code>void speechDraw();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽签</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">speechDraw</span>()</span>;</span><br></pre></td></tr></table></figure><ul><li><p>在speechManager.cpp中实现成员函数<code>void speechDraw();</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽签</span></span><br><span class="line"><span class="keyword">void</span> speechManager::speechDraw()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&lt;&lt; &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot; &gt;&gt;轮比赛选手正在抽签&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;抽签后演讲顺序如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    random_shuffle(v1.begin(), v1.end());</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::iterator it = v1.begin(); it != v1.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    random_shuffle(v2.begin(), v2.end());</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::iterator it = v2.begin(); it != v2.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在startSpeech比赛流程控制的函数中，调用抽签函数。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开始比赛</span></span><br><span class="line"><span class="keyword">void</span> speechManager::startSpeech()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//第一轮开始比赛</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1、抽签</span></span><br><span class="line"><span class="keyword">this</span>-&gt;speechDraw();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、比赛</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//3、显示晋级结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二轮开始比赛</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1、抽签</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、比赛</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//3、显示晋级结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4、保存分数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在main函数中，分支1选项中，调用开始比赛的接口。<br><img src="http://image.camcad.cn/2020/07/2020070804260187.jpg"></p></li><li><p>测试结果如下：<br><img src="http://image.camcad.cn/2020/07/2020070804273853-1024x477.jpg"></p></li></ul><h4 id="6-3-6-开始比赛"><a href="#6-3-6-开始比赛" class="headerlink" title="6.3.6 开始比赛"></a>6.3.6 开始比赛</h4><ul><li><p>在speechManager.h中提供比赛的成员函数<code>void speechContest();</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开始比赛</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">speechContest</span>()</span>;</span><br></pre></td></tr></table></figure></li><li><p>在speechManager.cpp中实现成员函数<code>void speechContest();</code></p></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开始比赛</span></span><br><span class="line"><span class="keyword">void</span> speechManager::speechContest()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;---------第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮比赛正式开始--------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//准备临时容器，存放小组成绩</span></span><br><span class="line">    multimap&lt;<span class="built_in">double</span>, <span class="built_in">int</span>, greater&lt;<span class="built_in">double</span>&gt;&gt;gourpScore;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//记录人员个数 6人一组</span></span><br><span class="line">    <span class="built_in">int</span> num = <span class="number">0</span>;    </span><br><span class="line"></span><br><span class="line">    <span class="comment">//比赛选手容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v_Src;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v_Src = v1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        v_Src = v2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::iterator it = v_Src.begin(); it != v_Src.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//循环一次+1</span></span><br><span class="line">        num++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//评委打分</span></span><br><span class="line">        deque&lt;<span class="built_in">double</span>&gt;d;</span><br><span class="line">        <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//随机数</span></span><br><span class="line">            <span class="built_in">double</span> score = (rand() % <span class="number">401</span> + <span class="number">600</span>) / <span class="number">10.0f</span>;    <span class="comment">//起始值600，终止1000</span></span><br><span class="line"></span><br><span class="line">            d.push_back(score);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//排序 降序</span></span><br><span class="line">        sort(d.begin(), d.end(), greater&lt;<span class="built_in">double</span>&gt;());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//去除最高分</span></span><br><span class="line">        d.pop_front();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//去除最底分</span></span><br><span class="line">        d.pop_back();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求出总和</span></span><br><span class="line">        <span class="built_in">double</span> sum = accumulate(d.begin(), d.end(), <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求出平均分</span></span><br><span class="line">        <span class="built_in">double</span> average = sum / (<span class="built_in">double</span>)d.size();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//cout &lt;&lt; &quot;编号：&quot; &lt;&lt; *it &lt;&lt; &quot; 姓名&quot; &lt;&lt; this-&gt;m_Speaker[*it].m_Name &lt;&lt; &quot; 平均分：&quot; &lt;&lt; average &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//将平均分放入到map容器里</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] = average;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将平均分数据 存放到临时小组容器中</span></span><br><span class="line">        gourpScore.insert(make_pair(average, *it));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//每6人取出前3名</span></span><br><span class="line">        <span class="keyword">if</span> (num % <span class="number">6</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;-----------第&quot;</span> &lt;&lt; num / <span class="number">6</span> &lt;&lt; <span class="string">&quot;小组比赛名次：---------&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">for</span> (multimap&lt;<span class="built_in">double</span>, <span class="built_in">int</span>, greater&lt;<span class="built_in">double</span>&gt;&gt;::iterator it = gourpScore.begin(); it != gourpScore.end(); it++)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;编号：&quot;</span> &lt;&lt; it-&gt;second &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[it-&gt;second].m_Name </span><br><span class="line">                    &lt;&lt; <span class="string">&quot; 成绩：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[it-&gt;second].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//取出前3名</span></span><br><span class="line">            <span class="built_in">int</span> count = <span class="number">0</span>;  <span class="comment">//计数</span></span><br><span class="line">            <span class="keyword">for</span> (multimap&lt;<span class="built_in">double</span>, <span class="built_in">int</span>, greater&lt;<span class="built_in">double</span>&gt;&gt;::iterator it = gourpScore.begin(); it != gourpScore.end(), count &gt; <span class="number">3</span>; it++, count++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">this</span>-&gt;v2.push_back((it-&gt;second));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">this</span>-&gt;vVictory.push_back(it-&gt;second);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//清空临时容器</span></span><br><span class="line">            gourpScore.clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;-----------第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮比赛完毕---------&quot;</span> &lt;&lt; endl;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>在startSpeech比赛流程控制的函数中，调用比赛函数。<br><img src="http://image.camcad.cn/2020/07/2020070804441475.jpg"></p></li><li><p>再次运行代码，测试比赛<br><img src="http://image.camcad.cn/2020/07/2020070804475046-1024x811.jpg"></p></li></ul><h4 id="6-3-7-显示比赛分数"><a href="#6-3-7-显示比赛分数" class="headerlink" title="6.3.7 显示比赛分数"></a>6.3.7 显示比赛分数</h4><ul><li>在speechManager.h中提供显示分数的成员函数<code>void showScore();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示得分</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showScore</span>()</span>;</span><br></pre></td></tr></table></figure><ul><li>在speechManager.cpp中实现成员函数<code>void showScore();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示得分</span></span><br><span class="line"><span class="keyword">void</span> speechManager::showScore()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;----------第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮晋级选手---------&quot;</span> &lt;&lt; endl;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = <span class="keyword">this</span>-&gt;v2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        v = <span class="keyword">this</span>-&gt;vVictory;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::iterator it = v.begin(); it != v.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;编号：&quot;</span> &lt;&lt; *it &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Name </span><br><span class="line">            &lt;&lt; <span class="string">&quot;\t成绩：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  </span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);    <span class="comment">//清屏</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>-&gt;show_Menu();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>在startSpeech比赛流程控制的函数中，调用显示比赛分数函数。<br><img src="http://image.camcad.cn/2020/07/2020070807591676.jpg"></p></li><li><p>运行代码，测试效果<br><img src="http://image.camcad.cn/2020/07/2020070808005438-1024x933.jpg"></p></li></ul><h4 id="6-3-8-第二轮比赛"><a href="#6-3-8-第二轮比赛" class="headerlink" title="6.3.8 第二轮比赛"></a>6.3.8 第二轮比赛</h4><p>第二轮比赛流程同第一轮，只是比赛的轮数+1，其余流程不变。</p><ul><li>在startSpeech比赛流程控制的函数中，加入第二轮的流程。<br><img src="http://image.camcad.cn/2020/07/202007080823126.jpg"></li></ul><p>测试，将整个比赛流程都跑通<br><img src="http://image.camcad.cn/2020/07/2020070808245431-1003x1024.jpg"></p><h3 id="6-4-保存分数"><a href="#6-4-保存分数" class="headerlink" title="6.4 保存分数"></a>6.4 保存分数</h3><p><strong>功能描述：</strong><br>将每次演讲比赛的得分记录到文件中。 </p><p><strong>功能实现：</strong></p><ul><li>在speechManager.h中添加保存记录的成员函数：<code>void saveRecord();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> FILENAME &quot;speech.csv&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//保存分数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">saveRecord</span>()</span>;</span><br></pre></td></tr></table></figure><ul><li>在speechManager.cpp中实现成员函数<code>void saveRecord();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存分数</span></span><br><span class="line"><span class="keyword">void</span> speechManager::saveRecord()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建文本--写文件</span></span><br><span class="line">    ofs.open(FILENAME, ios::<span class="keyword">out</span>  ios::app);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输入内容</span></span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::iterator it = vVictory.begin(); it != vVictory.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        ofs &lt;&lt; *it &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="number">1</span>] &lt;&lt; <span class="string">&quot;,&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ofs &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;数据已经保存&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>在startSpeech比赛流程控制的函数中，最后调用保存记录分数函数<br><img src="http://image.camcad.cn/2020/07/2020070809034747-817x1024.jpg"></p></li><li><p>测试，整个比赛完毕后记录保存情况<br><img src="http://image.camcad.cn/2020/07/2020070809060085.jpg"></p></li></ul><h2 id="7、查看记录"><a href="#7、查看记录" class="headerlink" title="7、查看记录"></a>7、查看记录</h2><h3 id="7-1-读取记录分数"><a href="#7-1-读取记录分数" class="headerlink" title="7.1 读取记录分数"></a>7.1 读取记录分数</h3><ul><li>在speechManager.h中添加保存记录的成员函数<code>void loadRecord();</code></li><li>添加判断文件是否为空的标志<code>bool fileIsEmpty;</code></li><li>添加往届记录的容器<code>map&lt;int,vector&lt;string&gt;&gt;m_Record;</code></li></ul><p>其中m_Record中的key代表第几届，value记录具体的信息。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读取记录</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadRecord</span>()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//文件为空的标志</span></span><br><span class="line"><span class="built_in">bool</span> fileIsEmpty;</span><br><span class="line"></span><br><span class="line"><span class="comment">//往届记录</span></span><br><span class="line">map&lt;<span class="built_in">int</span>, vector&lt;<span class="built_in">string</span>&gt;&gt;m_Record;</span><br></pre></td></tr></table></figure><ul><li>在speechManager.cpp中实现成员函数<code>void loadRecord();</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读取记录</span></span><br><span class="line"><span class="keyword">void</span> speechManager::loadRecord()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取文本-读文件</span></span><br><span class="line">    ifs.open(FILENAME, ios::<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件是否存在</span></span><br><span class="line">    <span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">        ifs.clear();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件是否为空</span></span><br><span class="line">    <span class="built_in">char</span> ch;</span><br><span class="line">    ifs &gt;&gt; ch;</span><br><span class="line">    <span class="keyword">if</span> (ifs.eof())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">        ifs.clear();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//文件存在并且有数据</span></span><br><span class="line">    ifs.putback(ch);    <span class="comment">//将上面读取的单个字符再放回</span></span><br><span class="line">    <span class="built_in">string</span> data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下标</span></span><br><span class="line">    <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (ifs&gt;&gt;data)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//临时存储</span></span><br><span class="line">        vector&lt;<span class="built_in">string</span>&gt;v;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> pos = <span class="number">-1</span>;   <span class="comment">//查到“,”位置的变量</span></span><br><span class="line">        <span class="built_in">int</span> start = <span class="number">0</span>;  <span class="comment">//起始位置</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            pos = data.find(<span class="string">&quot;,&quot;</span>, start);  <span class="comment">//从0开始查找 &#x27;，&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> (pos == <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;      <span class="comment">//找不到 break返回</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> temp = data.substr(start, pos - start);  <span class="comment">//找到了，进行分割 参数1 起始位置，参数2 截取长度</span></span><br><span class="line">            v.push_back(temp);</span><br><span class="line">            start = pos + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将数据放入到容器</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Record.insert(make_pair(index, v));</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">false</span>;</span><br><span class="line">    ifs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在speechManager构造函数中调用获取往届记录函数<br><img src="http://image.camcad.cn/2020/07/2020070811161617.jpg"></li></ul><h3 id="7-2-查看记录功能"><a href="#7-2-查看记录功能" class="headerlink" title="7.2 查看记录功能"></a>7.2 查看记录功能</h3><ul><li><p>在speechManager.h中添加保存的成员函数<code>void showRecord();</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示往届得分</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showRecord</span>()</span>;</span><br></pre></td></tr></table></figure></li><li><p>在speechManager.cpp中实现成员函数<code>void showRecord();</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看得分</span></span><br><span class="line"><span class="keyword">void</span> speechManager::showRecord()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Record.size(); i++)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;届&quot;</span> &lt;&lt;</span><br><span class="line">        <span class="string">&quot; 冠军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">0</span>] &lt;&lt; <span class="string">&quot;  得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">1</span>] &lt;&lt;</span><br><span class="line">        <span class="string">&quot; \t亚军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">2</span>] &lt;&lt; <span class="string">&quot;  得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">3</span>] &lt;&lt;</span><br><span class="line">        <span class="string">&quot; \t季军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">4</span>] &lt;&lt; <span class="string">&quot;  得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">5</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="7-3-测试功能"><a href="#7-3-测试功能" class="headerlink" title="7.3 测试功能"></a>7.3 测试功能</h3><p>在main函数分支2 选项是，调用查看记录的接口<br><img src="http://image.camcad.cn/2020/07/2020070811232332.jpg"></p><ul><li>测试，调用查看记录的接口如下<br><img src="http://image.camcad.cn/2020/07/2020070811261571-1024x305.jpg"></li></ul><h3 id="7-4-bug解决"><a href="#7-4-bug解决" class="headerlink" title="7.4 bug解决"></a>7.4 bug解决</h3><p>目前程序中有几处bug未解决： 1.查看往届记录，若文件不存在或者为空，并未提示。 解决方式：在showRecord函数中，开始判断文件状态并加判断。<br><img src="http://image.camcad.cn/2020/07/2020070811322962-1024x546.jpg"></p><p>2.若记录为空或不存在，比完赛后依然提示记录为空 解决方式：saveRecord中更新文件为空的标志<br><img src="http://image.camcad.cn/2020/07/2020070811412234-1024x721.jpg"></p><p>3.比完赛后查不到本届比赛的记录，没有实时更新 解决方式：比赛完毕后，所有数据重置<br><img src="http://image.camcad.cn/2020/07/2020070811443750-613x1024.jpg"> </p><p>4.在初始化时，没有初始化记录容器 解决方式：initSpeech中添加初始化记录容器<br><img src="http://image.camcad.cn/2020/07/2020070811470773.jpg"></p><p>5.每次记录都是一样的 解决方式：在main函数一开始添加随机种子</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//随机数种子</span></span><br><span class="line">srand((unsigned <span class="built_in">int</span>)time(NULL));</span><br></pre></td></tr></table></figure><p>所有bug解决后 测试结果如下：<br><img src="http://image.camcad.cn/2020/07/2020070812025232-1024x319.jpg"></p><h2 id="8、清空记录"><a href="#8、清空记录" class="headerlink" title="8、清空记录"></a>8、清空记录</h2><h3 id="8-1-清空记录功能实现"><a href="#8-1-清空记录功能实现" class="headerlink" title="8.1 清空记录功能实现"></a>8.1 清空记录功能实现</h3><ul><li><p>在speechManager.h中添加保存记录的成员函数<code>void clearRecord();</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空记录</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clearRecord</span>()</span>;</span><br></pre></td></tr></table></figure></li><li><p>在speechManager.cpp实现成员函数<code>void clearRecord();</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空容器</span></span><br><span class="line"><span class="keyword">void</span> speechManager::clearRecord()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;清空记录，请选择以下选项：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1.确实&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2.取消&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">select</span> == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建流文件</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开文件--写文件</span></span><br><span class="line">    ofs.open(FILENAME, ios::trunc);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.clear();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化容器和属性</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;initSpeech();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化创建12名选手</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;createSpeaker();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取记录</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;loadRecord();</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;清空完成&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试清空"><a href="#测试清空" class="headerlink" title="测试清空"></a>测试清空</h3><p>在main函数分支3选项中，调用清空比赛记录的接口<br><img src="http://image.camcad.cn/2020/07/2020070812365613.jpg"> </p><p>speech.csv中记录也为空<br><img src="http://image.camcad.cn/2020/07/2020070812394435-1024x575.jpg"></p></li><li><p>至此本案例结束。</p></li></ul>]]></content>
    
    
    <summary type="html">演讲比赛流程管理系统</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程80：STL常用算法（常用集合算法）</title>
    <link href="https://notes.camcad.cn/post/dfef9d8b.html"/>
    <id>https://notes.camcad.cn/post/dfef9d8b.html</id>
    <published>2020-08-04T17:05:19.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="5-6-常用集合算法"><a href="#5-6-常用集合算法" class="headerlink" title="5.6 常用集合算法"></a>5.6 常用集合算法</h1><p><strong>学习目标：</strong><br>掌握常用的集合算法 </p><p><strong>算法简介：</strong></p><ul><li><code>set_intersection</code> &#x2F;&#x2F;求两个容器的交集</li><li><code>set_union</code> &#x2F;&#x2F;求两个容器的并集</li><li><code>set_difference</code> &#x2F;&#x2F;求两个容器的差集<br><img src="http://image.camcad.cn/2020/07/2020070609134663-1024x686.jpg"></li></ul><h2 id="5-6-1-set-intersection"><a href="#5-6-1-set-intersection" class="headerlink" title="5.6.1 set_intersection"></a>5.6.1 set_intersection</h2><p><strong>功能描述：</strong><br>求两个容器的交集 </p><p><strong>函数原型：</strong></p><ul><li><p><code>set_intersection(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);</code> &#x2F;&#x2F;求两个集合的交集 &#x2F;&#x2F;<strong>注意：两个集合必须是有序序列</strong> &#x2F;&#x2F;beg1 容器1开始迭代器 &#x2F;&#x2F;end1 容器1结束迭代器 &#x2F;&#x2F;beg2 容器2开始迭代器 &#x2F;&#x2F;end2 容器2结束迭代器 &#x2F;&#x2F;dest 目标容器开始迭代器</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myPrint</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v2;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(i);</span><br><span class="line">        v2.push_back(<span class="number">5</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;初始化&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    for_each(v2.begin(), v2.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建目标容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;dest;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//开辟空间</span></span><br><span class="line">    <span class="comment">//最特殊情况 大容器包含小容器 开辟空间 取小容器的size即可</span></span><br><span class="line">    dest.resize(min(v1.size(), v2.size()));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//求两个容器的交集</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;::iterator it = set_intersection(v1.begin(), v1.end(), v2.begin(), v2.end(), dest.begin());</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;求差后&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(dest.begin(), it, myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070607425795-1024x397.jpg"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul><li>求交集的两个集合必须是有序序列。</li><li>目标容器开辟空间需要从<strong>两个容器中取小值</strong>。</li><li>set_intersection 返回值是交集最后一个元素的迭代器位置。</li></ul><h2 id="5-6-2-set-union"><a href="#5-6-2-set-union" class="headerlink" title="5.6.2 set_union"></a>5.6.2 set_union</h2><p><strong>功能描述：</strong><br>求两个集合的并集 </p><p><strong>函数原型：</strong></p><ul><li><code>set_union(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);</code> &#x2F;&#x2F;求两个集合的并集 &#x2F;&#x2F;<strong>注意：两个集合必须是有序序列</strong> &#x2F;&#x2F;beg1 容器1开始迭代器 &#x2F;&#x2F;end1 容器1结束迭代器 &#x2F;&#x2F;beg2 容器2开始迭代器 &#x2F;&#x2F;end2 容器2结束迭代器 &#x2F;&#x2F;dest 目标容器开始迭代器</li></ul><h3 id="示例代码：-1"><a href="#示例代码：-1" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myPrint</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v2;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(i);</span><br><span class="line">        v2.push_back(<span class="number">5</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;初始化&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    for_each(v2.begin(), v2.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建目标容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;dest;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//开辟空间</span></span><br><span class="line">    <span class="comment">//最特殊情况 两个容器没有交集 并集就是两个容器size相加</span></span><br><span class="line">    dest.resize(v1.size() + v2.size());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//求两个容器的并集</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;::iterator it = set_union(v1.begin(), v1.end(), v2.begin(), v2.end(), dest.begin());</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;并集后&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(dest.begin(), it, myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070609021018-1024x337.jpg"></p><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><ul><li>求并集的两个集合必须是有序序列。</li><li>目标容器开辟空间需要<strong>两个容器相加</strong>。</li><li>set_union返回值是并集最后一个元素迭代器位置。</li></ul><h2 id="5-6-3-set-difference"><a href="#5-6-3-set-difference" class="headerlink" title="5.6.3 set_difference"></a>5.6.3 set_difference</h2><p><strong>功能描述：</strong></p><ul><li><p>求两个集合的差集 <strong>函数原型：</strong></p></li><li><p><code>set_difference(iterator beg1, iterator end1,iterator beg2, iterator end2, iterator dest);</code> &#x2F;&#x2F;求两个集合的差集 &#x2F;&#x2F;<strong>注意：两个集合必须是有序序列</strong> &#x2F;&#x2F;beg1 容器1开始迭代器 &#x2F;&#x2F;end1 容器1结束迭代器 &#x2F;&#x2F;beg2 容器2开始迭代器 &#x2F;&#x2F;end2 容器2结束迭代器 &#x2F;&#x2F;drst 目标容器开始迭代器</p><h3 id="示例代码：-2"><a href="#示例代码：-2" class="headerlink" title="示例代码："></a>示例代码：</h3></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myPrint</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v2;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(i);</span><br><span class="line">        v2.push_back(<span class="number">5</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;初始化&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    for_each(v2.begin(), v2.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建目标容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;dest;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//开辟空间</span></span><br><span class="line">    <span class="comment">//最特殊情况 两个容器没有差集 取两个容器中大的size作为目标容器开辟的空间</span></span><br><span class="line">    dest.resize(max(v1.size(), v2.size()));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//求v1和v2的差集</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;::iterator it = set_difference(v1.begin(), v1.end(), v2.begin(), v2.end(), dest.begin());</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;v1和v2的差集为：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(dest.begin(), it, myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//求v2和v1的差集</span></span><br><span class="line">    it = set_difference(v2.begin(), v2.end(), v1.begin(), v1.end(), dest.begin());</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;v2和v1的差集为：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(dest.begin(), it, myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-2"><a href="#以上代码编译执行结果如下：-2" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070609301655-1024x447.jpg"></p><h3 id="总结：-2"><a href="#总结：-2" class="headerlink" title="总结："></a>总结：</h3><ul><li>求差集的两个集合必须是有序序列。</li><li>目标容器开辟空间需要从<strong>两个容器取较大值</strong>。</li><li>set_difference返回值是差集中最后一个元素迭代器位置。</li></ul>]]></content>
    
    
    <summary type="html">STL常用算法（常用集合算法）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程79：STL常用算法（常用算术生成算法）</title>
    <link href="https://notes.camcad.cn/post/56601927.html"/>
    <id>https://notes.camcad.cn/post/56601927.html</id>
    <published>2020-08-04T14:43:56.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="5-5-常用算术生成算法"><a href="#5-5-常用算术生成算法" class="headerlink" title="5.5 常用算术生成算法"></a>5.5 常用算术生成算法</h1><p><strong>学习目标：</strong><br>掌握常用的算术生成算法 </p><p><strong>注意：</strong></p><ul><li>算术生成算法属于小型算法，使用时包含的头文件为<code>#include &lt;numeric&gt;</code></li></ul><p><strong>算法简介：</strong></p><ul><li><code>accumulate</code> &#x2F;&#x2F;计算容器元素累计总和</li><li><code>fill</code> &#x2F;&#x2F;向容器中添加元素</li></ul><h2 id="5-5-1-accumulate"><a href="#5-5-1-accumulate" class="headerlink" title="5.5.1 accumulate"></a>5.5.1 accumulate</h2><p><strong>功能描述：</strong><br>计算区间内 容器元素累计总和 </p><p><strong>函数原型：</strong></p><ul><li><code>accumulate(iterator beg, iterator end, value);</code> &#x2F;&#x2F;计算容器元素累计总和 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;value 起始值</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;numeric&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> length 100</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myPrint</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt;= length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算容器元素累计总和</span></span><br><span class="line">    <span class="built_in">int</span> sum = accumulate(v1.begin(), v1.end(), <span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;容器元素累计总和：&quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070606335282-1024x290.jpg"></p><h3 id="总结：accumulate使用时头文件注意是numeric，这个算法很实用。"><a href="#总结：accumulate使用时头文件注意是numeric，这个算法很实用。" class="headerlink" title="总结：accumulate使用时头文件注意是numeric，这个算法很实用。"></a>总结：accumulate使用时头文件注意是numeric，这个算法很实用。</h3><h2 id="5-5-2-fill"><a href="#5-5-2-fill" class="headerlink" title="5.5.2 fill"></a>5.5.2 fill</h2><p><strong>功能描述：</strong><br>向容器中填充指定的元素 </p><p><strong>函数原型：</strong></p><ul><li><code>fill(iterator beg, iterator end, value);</code> &#x2F;&#x2F;向容器中填充元素 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;value 填充的值</li></ul><h3 id="示例代码：-1"><a href="#示例代码：-1" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;numeric&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myPrint</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//开辟空间</span></span><br><span class="line">    v1.resize(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//向容器中填充指定的元素</span></span><br><span class="line">    fill(v1.begin(), v1.end(), <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070606460034-1024x267.jpg"></p><h3 id="总结：利用fill可以将容器区间内元素填充为指定的值。"><a href="#总结：利用fill可以将容器区间内元素填充为指定的值。" class="headerlink" title="总结：利用fill可以将容器区间内元素填充为指定的值。"></a>总结：利用fill可以将容器区间内元素填充为指定的值。</h3>]]></content>
    
    
    <summary type="html">STL常用算法（常用算术生成算法）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程78：STL常用算法（常用拷贝和替换算法）</title>
    <link href="https://notes.camcad.cn/post/b764b3e7.html"/>
    <id>https://notes.camcad.cn/post/b764b3e7.html</id>
    <published>2020-08-04T12:32:40.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="5-4-常用拷贝和替换算法"><a href="#5-4-常用拷贝和替换算法" class="headerlink" title="5.4 常用拷贝和替换算法"></a>5.4 常用拷贝和替换算法</h1><p><strong>学习目标：</strong><br>掌握常用的拷贝和替换算法 </p><p><strong>算法简介：</strong></p><ul><li><code>copy</code> &#x2F;&#x2F;容器内指定范围的元素拷贝到另一容器中</li><li><code>replace</code> &#x2F;&#x2F;将容器内指定范围的旧元素修改为新元素</li><li><code>replace_if</code> &#x2F;&#x2F;容器内指定范围满足条件的元素替换为新元素</li><li><code>swap</code> &#x2F;&#x2F;互换两个容器的元素</li></ul><h2 id="5-4-1-copy"><a href="#5-4-1-copy" class="headerlink" title="5.4.1 copy"></a>5.4.1 copy</h2><p><strong>功能描述：</strong><br>容器内指定范围的元素拷贝到另一容器中。 </p><p><strong>函数原型：</strong></p><ul><li><code>copy(iterator beg, iterator end, iterator dest);</code> &#x2F;&#x2F;按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置。 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;dest 目标起始迭代器</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myPrint</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(<span class="number">10</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建目标容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;dest;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//开辟空间</span></span><br><span class="line">    dest.resize(v1.size());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//拷贝容器</span></span><br><span class="line">    copy(v1.begin(), v1.end(), dest.begin());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    for_each(dest.begin(), dest.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070604182922-1024x256.jpg"></p><h3 id="总结：利用copy算法在拷贝时，目标容器记得提前开辟空间。"><a href="#总结：利用copy算法在拷贝时，目标容器记得提前开辟空间。" class="headerlink" title="总结：利用copy算法在拷贝时，目标容器记得提前开辟空间。"></a>总结：利用copy算法在拷贝时，目标容器记得提前开辟空间。</h3><h2 id="5-4-2-replace"><a href="#5-4-2-replace" class="headerlink" title="5.4.2 replace"></a>5.4.2 replace</h2><p><strong>功能描述：</strong></p><ul><li>将容器内指定范围的旧元素修改为新元素。</li></ul><p><strong>函数原型：</strong></p><ul><li><code>replace(iterator beg, iterator end, oldvalue, newvalue);</code> &#x2F;&#x2F;将区间内旧元素 替换成新元素 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;oldvalue 旧元素 &#x2F;&#x2F;newvalue 新元素</li></ul><h3 id="示例代码：-1"><a href="#示例代码：-1" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myPrint</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    v1.push_back(<span class="number">10</span>);</span><br><span class="line">    v1.push_back(<span class="number">30</span>);</span><br><span class="line">    v1.push_back(<span class="number">20</span>);</span><br><span class="line">    v1.push_back(<span class="number">60</span>);</span><br><span class="line">    v1.push_back(<span class="number">20</span>);</span><br><span class="line">    v1.push_back(<span class="number">40</span>);</span><br><span class="line">    v1.push_back(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;修改前&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//旧元素修改成新元素</span></span><br><span class="line">    replace(v1.begin(), v1.end(), <span class="number">20</span>, <span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;修改后&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070605164844-1024x362.jpg"></p><h3 id="总结：replace会替换区间内满足条件的元素。"><a href="#总结：replace会替换区间内满足条件的元素。" class="headerlink" title="总结：replace会替换区间内满足条件的元素。"></a>总结：replace会替换区间内满足条件的元素。</h3><h2 id="5-4-3-replace-if"><a href="#5-4-3-replace-if" class="headerlink" title="5.4.3 replace_if"></a>5.4.3 replace_if</h2><p><strong>功能描述：</strong><br>将区间内满足条件的元素，替换成指定元素。 </p><p><strong>函数原型：</strong></p><ul><li><code>replace_if(iterator beg, iterator end, _pred, newvalue);</code> &#x2F;&#x2F;按条件替换元素，满足条件的替换成指定元素 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;_pred 谓词 &#x2F;&#x2F;newvalue 替换的新元素</li></ul><h3 id="示例代码：-2"><a href="#示例代码：-2" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印显示</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myPrint</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//谓词</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">value30</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">operator</span>()(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> val &gt; <span class="number">30</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    v1.push_back(<span class="number">11</span>);</span><br><span class="line">    v1.push_back(<span class="number">21</span>);</span><br><span class="line">    v1.push_back(<span class="number">12</span>);</span><br><span class="line">    v1.push_back(<span class="number">34</span>);</span><br><span class="line">    v1.push_back(<span class="number">14</span>);</span><br><span class="line">    v1.push_back(<span class="number">32</span>);</span><br><span class="line">    v1.push_back(<span class="number">65</span>);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;替换前&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将区间内满足条件的元素，替换成指定元素</span></span><br><span class="line">    replace_if(v1.begin(), v1.end(), value30(), <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;替换后&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-2"><a href="#以上代码编译执行结果如下：-2" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070605340995-1024x341.jpg"></p><h3 id="总结：replace-if按条件查找，可以利用仿函数灵活筛选满足的条件。"><a href="#总结：replace-if按条件查找，可以利用仿函数灵活筛选满足的条件。" class="headerlink" title="总结：replace_if按条件查找，可以利用仿函数灵活筛选满足的条件。"></a>总结：replace_if按条件查找，可以利用仿函数灵活筛选满足的条件。</h3><h2 id="5-4-4-swap"><a href="#5-4-4-swap" class="headerlink" title="5.4.4 swap"></a>5.4.4 swap</h2><p><strong>功能描述：</strong><br>互换两个容器的元素 </p><p><strong>函数原型：</strong></p><ul><li><code>swap(container c1, container c2);</code> &#x2F;&#x2F;互换两个容器的元素 &#x2F;&#x2F;c1 容器一 &#x2F;&#x2F;c2 容器二</li></ul><h3 id="示例代码：-3"><a href="#示例代码：-3" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印显示</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myPrint</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//v1 容器插入元素</span></span><br><span class="line">    v1.push_back(<span class="number">11</span>);</span><br><span class="line">    v1.push_back(<span class="number">21</span>);</span><br><span class="line">    v1.push_back(<span class="number">12</span>);</span><br><span class="line">    v1.push_back(<span class="number">34</span>);</span><br><span class="line">    v1.push_back(<span class="number">14</span>);</span><br><span class="line">    v1.push_back(<span class="number">32</span>);</span><br><span class="line">    v1.push_back(<span class="number">65</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//v2 容器插入元素</span></span><br><span class="line">    v2.push_back(<span class="number">100</span>);</span><br><span class="line">    v2.push_back(<span class="number">110</span>);</span><br><span class="line">    v2.push_back(<span class="number">230</span>);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;互换之前&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    for_each(v2.begin(), v2.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//互换两个容器的元素</span></span><br><span class="line">    swap(v1, v2);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;互换之后&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(v1.begin(), v1.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    for_each(v2.begin(), v2.end(), myPrint);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-3"><a href="#以上代码编译执行结果如下：-3" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070605554043.jpg"></p><h3 id="总结：swap交换容器时，注意交换的容器要同种类型。"><a href="#总结：swap交换容器时，注意交换的容器要同种类型。" class="headerlink" title="总结：swap交换容器时，注意交换的容器要同种类型。"></a>总结：swap交换容器时，注意交换的容器要同种类型。</h3>]]></content>
    
    
    <summary type="html">STL常用算法（常用拷贝和替换算法）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程77：STL常用算法（常用排序算法）</title>
    <link href="https://notes.camcad.cn/post/c9c5a6ae.html"/>
    <id>https://notes.camcad.cn/post/c9c5a6ae.html</id>
    <published>2020-08-04T09:35:43.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="5-3-常用排序算法"><a href="#5-3-常用排序算法" class="headerlink" title="5.3 常用排序算法"></a>5.3 常用排序算法</h1><p><strong>学习目标：</strong><br>掌握常用的排序算法 </p><p><strong>算法简介：</strong></p><ul><li><code>sort</code> &#x2F;&#x2F;对容器内元素进行排序</li><li><code>random_shuffle</code> &#x2F;&#x2F;洗牌 指定范围内的元素随机调整次序</li><li><code>merge</code> &#x2F;&#x2F;容器元素合并，并存储到另一个容器中</li><li><code>reverse</code> &#x2F;&#x2F;反转指定范围的元素</li></ul><h2 id="5-3-1-sort"><a href="#5-3-1-sort" class="headerlink" title="5.3.1 sort"></a>5.3.1 sort</h2><p><strong>功能描述：</strong><br>对容器内元素进行排序。 </p><p><strong>函数原型：</strong></p><ul><li><code>sort(iterator beg, iterator end, _pred);</code> &#x2F;&#x2F;按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置。 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;_pred 谓词</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;functional&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印显示</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printVector</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    v1.push_back(<span class="number">11</span>);</span><br><span class="line">    v1.push_back(<span class="number">21</span>);</span><br><span class="line">    v1.push_back(<span class="number">12</span>);</span><br><span class="line">    v1.push_back(<span class="number">24</span>);</span><br><span class="line">    v1.push_back(<span class="number">43</span>);</span><br><span class="line">    v1.push_back(<span class="number">54</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    for_each(v1.begin(), v1.end(), printVector);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//排序 升序</span></span><br><span class="line">    sort(v1.begin(), v1.end());</span><br><span class="line">    for_each(v1.begin(), v1.end(), printVector);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//排序 降序</span></span><br><span class="line">    sort(v1.begin(), v1.end(), greater&lt;<span class="built_in">int</span>&gt;());</span><br><span class="line">    for_each(v1.begin(), v1.end(), printVector);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070509471948-1024x315.jpg"></p><h3 id="总结：sort属于开发中最常用的算法之一，需熟练掌握。"><a href="#总结：sort属于开发中最常用的算法之一，需熟练掌握。" class="headerlink" title="总结：sort属于开发中最常用的算法之一，需熟练掌握。"></a>总结：sort属于开发中最常用的算法之一，需熟练掌握。</h3><h2 id="5-3-2-random-shuffle"><a href="#5-3-2-random-shuffle" class="headerlink" title="5.3.2 random_shuffle"></a>5.3.2 random_shuffle</h2><p><strong>功能描述：</strong><br>洗牌 指定范围内的元素随机调整次序 </p><p><strong>函数原型：</strong></p><ul><li><code>random_shuffle(iterator beg, iterator end);</code></li></ul><h3 id="示例代码：-1"><a href="#示例代码：-1" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;functional&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&lt;ctime&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printVector</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    v1.push_back(<span class="number">10</span>);</span><br><span class="line">    v1.push_back(<span class="number">11</span>);</span><br><span class="line">    v1.push_back(<span class="number">12</span>);</span><br><span class="line">    v1.push_back(<span class="number">13</span>);</span><br><span class="line">    v1.push_back(<span class="number">14</span>);</span><br><span class="line">    v1.push_back(<span class="number">15</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    for_each(v1.begin(), v1.end(), printVector);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//洗牌 指定范围内的元素随机调整次序</span></span><br><span class="line">    random_shuffle(v1.begin(), v1.end());</span><br><span class="line">    for_each(v1.begin(), v1.end(), printVector);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//随机数 种子</span></span><br><span class="line">    srand((unsigned <span class="built_in">int</span>)time(NULL));</span><br><span class="line"></span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070510125219-1024x314.jpg"></p><h3 id="总结：random-shuffle洗牌算法比较实用，使用时记得加随机数种子。"><a href="#总结：random-shuffle洗牌算法比较实用，使用时记得加随机数种子。" class="headerlink" title="总结：random_shuffle洗牌算法比较实用，使用时记得加随机数种子。"></a>总结：random_shuffle洗牌算法比较实用，使用时记得加随机数种子。</h3><h2 id="5-3-3-merge"><a href="#5-3-3-merge" class="headerlink" title="5.3.3 merge"></a>5.3.3 merge</h2><p><strong>功能描述：</strong><br>两个容器元素合并，并存储到另一个容器中。 </p><p><strong>函数原型：</strong></p><ul><li><code>merge(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);</code> &#x2F;&#x2F;容器元素合并，并存储到另一容器中 &#x2F;&#x2F;注意：两个容器必须是<strong>有序的</strong> &#x2F;&#x2F;beg1 容器1开始迭代器 &#x2F;&#x2F;end1 容器1结束迭代器 &#x2F;&#x2F;beg2 容器2开始迭代器 &#x2F;&#x2F;end2 容器2结束迭代器 &#x2F;&#x2F;dest 目标容器开始迭代器</li></ul><h3 id="示例代码：-2"><a href="#示例代码：-2" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;functional&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printVector</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v2;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(i);</span><br><span class="line">        v2.push_back(i+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建目标容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;dest;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//开辟内存</span></span><br><span class="line">    dest.resize(v1.size() + v2.size());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//两个容器元素 合并</span></span><br><span class="line">    merge(v1.begin(), v1.end(), v2.begin(), v2.end(), dest.begin());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    for_each(dest.begin(), dest.end(), printVector);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-2"><a href="#以上代码编译执行结果如下：-2" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070510435986-1024x266.jpg"></p><h3 id="总结：merge合并的两个容器必须是有序序列。"><a href="#总结：merge合并的两个容器必须是有序序列。" class="headerlink" title="总结：merge合并的两个容器必须是有序序列。"></a>总结：merge合并的两个容器必须是有序序列。</h3><h2 id="5-3-4-reverse"><a href="#5-3-4-reverse" class="headerlink" title="5.3.4 reverse"></a>5.3.4 reverse</h2><p><strong>功能描述：</strong><br>将容器内元素进行反转 </p><p><strong>函数原型：</strong></p><ul><li><code>reverse(iterator beg, iterator end);</code> &#x2F;&#x2F;反转指定范围的元素 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器</li></ul><h3 id="示例代码：-3"><a href="#示例代码：-3" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printVector</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    v1.push_back(<span class="number">10</span>);</span><br><span class="line">    v1.push_back(<span class="number">30</span>);</span><br><span class="line">    v1.push_back(<span class="number">40</span>);</span><br><span class="line">    v1.push_back(<span class="number">50</span>);</span><br><span class="line">    v1.push_back(<span class="number">70</span>);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;反转前&quot;</span> &lt;&lt; endl;</span><br><span class="line">    for_each(v1.begin(), v1.end(), printVector);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;反转后&quot;</span> &lt;&lt; endl;</span><br><span class="line">    reverse(v1.begin(), v1.end());</span><br><span class="line">    for_each(v1.begin(), v1.end(), printVector);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-3"><a href="#以上代码编译执行结果如下：-3" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070510582623.jpg"></p><h3 id="总结：reverse反转区间内元素，面试题可以涉及到。"><a href="#总结：reverse反转区间内元素，面试题可以涉及到。" class="headerlink" title="总结：reverse反转区间内元素，面试题可以涉及到。"></a>总结：reverse反转区间内元素，面试题可以涉及到。</h3>]]></content>
    
    
    <summary type="html">STL常用算法（常用排序算法）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程76：STL常用算法（常用查找算法）</title>
    <link href="https://notes.camcad.cn/post/4e4670d3.html"/>
    <id>https://notes.camcad.cn/post/4e4670d3.html</id>
    <published>2020-08-03T19:06:12.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="5-2-常用查找算法"><a href="#5-2-常用查找算法" class="headerlink" title="5.2 常用查找算法"></a>5.2 常用查找算法</h1><p><strong>学习目标：</strong><br>掌握常用的查找算法 </p><p><strong>算法简介：</strong></p><ul><li><code>find</code> &#x2F;&#x2F;查找元素</li><li><code>find_if</code> &#x2F;&#x2F;按条件查找元素</li><li><code>adjacent_find</code> &#x2F;&#x2F;查找相邻重复元素</li><li><code>binary_search</code> &#x2F;&#x2F;二分查找法</li><li><code>count</code> &#x2F;&#x2F;统计元素个数</li><li><code>count_if</code> &#x2F;&#x2F;按条件统计元素个数</li></ul><h2 id="5-2-1-find"><a href="#5-2-1-find" class="headerlink" title="5.2.1 find"></a>5.2.1 find</h2><p><strong>功能描述：</strong><br>查找指定元素，找到返回指定元素的迭代器，找不到返回结束迭代器end()。 </p><p><strong>函数原型：</strong></p><ul><li><code>find(iterator beg, iterator end, value);</code> &#x2F;&#x2F;按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代位置。 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;value 查找的元素</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//内置数据类型 查找</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(<span class="number">10</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;::iterator it = find(v1.begin(), v1.end(), <span class="number">16</span>);</span><br><span class="line">    <span class="keyword">if</span> (it!=v1.end())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt;<span class="string">&quot;查找 find(v1.begin(), v1.end(), 16) 元素为：&quot;</span>&lt;&lt; *it &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;未找到！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义数据类型</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重载==</span></span><br><span class="line">    <span class="built_in">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Person &amp;p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Name == p.m_Name&amp;&amp;<span class="keyword">this</span>-&gt;m_Age == p.m_Age)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Person(<span class="built_in">string</span> name, <span class="built_in">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line">    <span class="built_in">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//赋值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setValue</span>(<span class="params">vector&lt;Person&gt; &amp;v</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> number = <span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//姓名</span></span><br><span class="line">        <span class="built_in">string</span> m_Name = <span class="string">&quot;员工&quot;</span>;</span><br><span class="line">        m_Name += number[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//年龄</span></span><br><span class="line">        <span class="built_in">int</span> m_Age = rand() % <span class="number">10</span> + <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function">Person <span class="title">p</span>(<span class="params">m_Name, m_Age</span>)</span>;</span><br><span class="line">        v.push_back(p);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历打印</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">printPerson</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operator</span>()(<span class="params"><span class="keyword">const</span> Person &amp;p</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p.m_Name &lt;&lt; <span class="string">&quot; \t年龄：&quot;</span> &lt;&lt; p.m_Age &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义数据类型 查找</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;Person&gt; v;</span><br><span class="line">    setValue(v);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    <span class="comment">//for_each(v.begin(), v.end(), printPerson());</span></span><br><span class="line"></span><br><span class="line">    <span class="function">Person <span class="title">pp</span>(<span class="params"><span class="string">&quot;员工D&quot;</span>, <span class="number">16</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">    vector&lt;Person&gt;::iterator it = find(v.begin(), v.end(), pp);</span><br><span class="line">    <span class="keyword">if</span> (it!=v.end())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;查到 姓名：&quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class="string">&quot; \t查到 年龄：&quot;</span> &lt;&lt; it-&gt;m_Age &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;未找到！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;内置数据类型 查找 &quot;</span> &lt;&lt; endl;</span><br><span class="line">    test01();</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;自定义数据类型 查找&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    test02();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070412101338-1024x297.jpg"></p><h3 id="总结：利用find可以在容器中找指定的元素，返回值是迭代器。"><a href="#总结：利用find可以在容器中找指定的元素，返回值是迭代器。" class="headerlink" title="总结：利用find可以在容器中找指定的元素，返回值是迭代器。"></a>总结：利用find可以在容器中找指定的元素，返回值是迭代器。</h3><h2 id="5-2-2-find-if"><a href="#5-2-2-find-if" class="headerlink" title="5.2.2 find_if"></a>5.2.2 find_if</h2><p><strong>功能描述：</strong><br>按条件查找元素。 </p><p><strong>函数原型：</strong></p><ul><li><code>find_if(iterator beg, iterator end,_pred);</code> &#x2F;&#x2F;按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置。 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;_pred 函数或者谓词（返回bool类型的仿函数）</li></ul><p><strong>示例代码：</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">internal01</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">operator</span>()(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> val &gt; <span class="number">7</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//内置数据类型 按条件查找元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//按条件查找元素</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;::iterator it = find_if(v1.begin(), v1.end(), internal01());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (it!=v1.end())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;大于7的第一个元素：&quot;</span> &lt;&lt; *it &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;未找到元素！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义数据类型</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Person(<span class="built_in">string</span> name, <span class="built_in">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line">    <span class="built_in">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">external01</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">operator</span>()(<span class="params">Person p</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> p.m_Age == <span class="number">20</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义数据类型 按条件查找元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建元素</span></span><br><span class="line">    <span class="function">Person <span class="title">p1</span>(<span class="params"><span class="string">&quot;张三&quot;</span>, <span class="number">26</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span>(<span class="params"><span class="string">&quot;小二&quot;</span>, <span class="number">18</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p3</span>(<span class="params"><span class="string">&quot;赵六&quot;</span>, <span class="number">23</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p4</span>(<span class="params"><span class="string">&quot;李四&quot;</span>, <span class="number">20</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p5</span>(<span class="params"><span class="string">&quot;王五&quot;</span>, <span class="number">15</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;Person&gt;v2;</span><br><span class="line">    v2.push_back(p1);</span><br><span class="line">    v2.push_back(p2);</span><br><span class="line">    v2.push_back(p3);</span><br><span class="line">    v2.push_back(p4);</span><br><span class="line">    v2.push_back(p5);</span><br><span class="line"></span><br><span class="line">    vector&lt;Person&gt;::iterator it = find_if(v2.begin(), v2.end(), external01());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (it!=v2.end())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;年龄等于20的 姓名为：&quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class="string">&quot; \t年龄为：&quot;</span> &lt;&lt; it-&gt;m_Age &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;未找到！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;内置数据类型 查找 &quot;</span> &lt;&lt; endl;</span><br><span class="line">    test01();</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;自定义数据类型 查找&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    test02();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070502053513-1024x304.jpg"></p><h2 id="5-2-3-adjacent-find"><a href="#5-2-3-adjacent-find" class="headerlink" title="5.2.3 adjacent_find"></a>5.2.3 adjacent_find</h2><p><strong>功能描述：</strong></p><ul><li>查找相邻重复元素。</li></ul><p><strong>函数原型：</strong></p><ul><li><code>adjacent_find(iterator beg, iterator end):</code> &#x2F;&#x2F;查找相邻重复元素，返回相邻元素的第一个位置的迭代器。 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器</li></ul><h3 id="示例代码：-1"><a href="#示例代码：-1" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//内置数据类型 按条件查找元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    v1.push_back(<span class="number">3</span>);</span><br><span class="line">    v1.push_back(<span class="number">4</span>);</span><br><span class="line">    v1.push_back(<span class="number">2</span>);</span><br><span class="line">    v1.push_back(<span class="number">4</span>);</span><br><span class="line">    v1.push_back(<span class="number">3</span>);</span><br><span class="line">    v1.push_back(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找相邻重复元素</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;::iterator it = adjacent_find(v1.begin(), v1.end());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (it!=v1.end())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;相邻重复元素为：&quot;</span> &lt;&lt; *it &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;未找到！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-2"><a href="#以上代码编译执行结果如下：-2" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070502270475-1024x236.jpg"></p><h3 id="总结：面试题中如果出现查找相邻重复元素，记得用STL中的adjacent-find算法。"><a href="#总结：面试题中如果出现查找相邻重复元素，记得用STL中的adjacent-find算法。" class="headerlink" title="总结：面试题中如果出现查找相邻重复元素，记得用STL中的adjacent_find算法。"></a>总结：面试题中如果出现查找相邻重复元素，记得用STL中的adjacent_find算法。</h3><h2 id="5-2-4-binary-search"><a href="#5-2-4-binary-search" class="headerlink" title="5.2.4 binary_search"></a>5.2.4 binary_search</h2><p><strong>功能描述：</strong><br>查找指定元素是否存在 </p><p><strong>函数原型：</strong></p><ul><li><p><code>bool binary_search(iterator beg,iterator end,value);</code> &#x2F;&#x2F;查找指定的元素，查到返回true 否则false &#x2F;&#x2F;注意：在<strong>无序序列中不可用</strong> &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;value 查找的元素</p><h3 id="示例代码：-2"><a href="#示例代码：-2" class="headerlink" title="示例代码："></a>示例代码：</h3></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//v1.push_back(3);      //如果是无序序列，结果未知！</span></span><br><span class="line">    <span class="comment">//注意：容器必须是有序的序列。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找指定元素是否存在</span></span><br><span class="line">    <span class="built_in">bool</span> ret = binary_search(v1.begin(), v1.end(), <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;元素存在！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;元素不存在！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-3"><a href="#以上代码编译执行结果如下：-3" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070502504122-1024x340.jpg"></p><h3 id="总结：二分查找法查找效率很高，值得注意的是查找的容器中元素必须是有序序列。"><a href="#总结：二分查找法查找效率很高，值得注意的是查找的容器中元素必须是有序序列。" class="headerlink" title="总结：二分查找法查找效率很高，值得注意的是查找的容器中元素必须是有序序列。"></a>总结：二分查找法查找效率很高，值得注意的是查找的容器中元素必须是有序序列。</h3><h2 id="5-2-5-count"><a href="#5-2-5-count" class="headerlink" title="5.2.5 count"></a>5.2.5 count</h2><p><strong>功能描述：</strong><br>统计元素个数 </p><p><strong>函数原型：</strong></p><ul><li><code>count(iterator beg, iterator end, value);</code> &#x2F;&#x2F;统计元素出现次数 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;value 统计的元素</li></ul><h3 id="示例代码：-3"><a href="#示例代码：-3" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.内置数据类型</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    v1.push_back(<span class="number">10</span>);</span><br><span class="line">    v1.push_back(<span class="number">12</span>);</span><br><span class="line">    v1.push_back(<span class="number">21</span>);</span><br><span class="line">    v1.push_back(<span class="number">23</span>);</span><br><span class="line">    v1.push_back(<span class="number">12</span>);</span><br><span class="line">    v1.push_back(<span class="number">21</span>);</span><br><span class="line">    v1.push_back(<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//统计元素个数</span></span><br><span class="line">    <span class="built_in">int</span> num = count(v1.begin(), v1.end(), <span class="number">12</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;12 相同元素个数为：&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.自定义数据类型</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Person(<span class="built_in">string</span> name, <span class="built_in">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重载==</span></span><br><span class="line">    <span class="built_in">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Person &amp;p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Age == p.m_Age)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line">    <span class="built_in">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建元素</span></span><br><span class="line">    <span class="function">Person <span class="title">p1</span>(<span class="params"><span class="string">&quot;刘备&quot;</span>, <span class="number">35</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span>(<span class="params"><span class="string">&quot;关羽&quot;</span>, <span class="number">37</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p3</span>(<span class="params"><span class="string">&quot;张飞&quot;</span>, <span class="number">35</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p4</span>(<span class="params"><span class="string">&quot;赵云&quot;</span>, <span class="number">35</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p5</span>(<span class="params"><span class="string">&quot;曹操&quot;</span>, <span class="number">36</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p6</span>(<span class="params"><span class="string">&quot;黄盖&quot;</span>, <span class="number">65</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;Person&gt;v2;</span><br><span class="line">    v2.push_back(p1);</span><br><span class="line">    v2.push_back(p2);</span><br><span class="line">    v2.push_back(p3);</span><br><span class="line">    v2.push_back(p4);</span><br><span class="line">    v2.push_back(p5);</span><br><span class="line">    v2.push_back(p6);</span><br><span class="line"></span><br><span class="line">    <span class="function">Person <span class="title">pp</span>(<span class="params"><span class="string">&quot;小三&quot;</span>, <span class="number">35</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> num = count(v2.begin(), v2.end(), pp);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;pp 相同元素个数为：&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;内置数据类型&quot;</span> &lt;&lt; endl;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;自定义数据类型&quot;</span> &lt;&lt; endl;</span><br><span class="line">    test02();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-4"><a href="#以上代码编译执行结果如下：-4" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070504194364-1024x383.jpg"></p><h3 id="总结：统计自定义数据类型的时候，需要配合重载operator-。"><a href="#总结：统计自定义数据类型的时候，需要配合重载operator-。" class="headerlink" title="总结：统计自定义数据类型的时候，需要配合重载operator==。"></a>总结：统计自定义数据类型的时候，需要配合重载<code>operator==</code>。</h3><h2 id="5-2-6-count-if"><a href="#5-2-6-count-if" class="headerlink" title="5.2.6 count_if"></a>5.2.6 count_if</h2><p><strong>功能描述：</strong><br>按条件统计元素个数 </p><p><strong>函数原型：</strong></p><ul><li><code>count_if(iterator beg, iterator end, _pred);</code> &#x2F;&#x2F;按条件统计元素出现次数 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;_pred 谓词</li></ul><h3 id="示例代码：-4"><a href="#示例代码：-4" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Greater12</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">operator</span>()(<span class="params"><span class="keyword">const</span> <span class="built_in">int</span> val</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> val &gt; <span class="number">12</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.内置数据类型</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    v1.push_back(<span class="number">10</span>);</span><br><span class="line">    v1.push_back(<span class="number">12</span>);</span><br><span class="line">    v1.push_back(<span class="number">21</span>);</span><br><span class="line">    v1.push_back(<span class="number">23</span>);</span><br><span class="line">    v1.push_back(<span class="number">12</span>);</span><br><span class="line">    v1.push_back(<span class="number">21</span>);</span><br><span class="line">    v1.push_back(<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//统计元素个数</span></span><br><span class="line">    <span class="built_in">int</span> num = count_if(v1.begin(), v1.end(),Greater12());</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;大于12的元素个数为：&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.自定义数据类型</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Person(<span class="built_in">string</span> name, <span class="built_in">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line">    <span class="built_in">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Greater35</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">operator</span>()(<span class="params"><span class="keyword">const</span> Person &amp;p</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (p.m_Age&gt;<span class="number">35</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建元素</span></span><br><span class="line">    <span class="function">Person <span class="title">p1</span>(<span class="params"><span class="string">&quot;刘备&quot;</span>, <span class="number">70</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span>(<span class="params"><span class="string">&quot;关羽&quot;</span>, <span class="number">37</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p3</span>(<span class="params"><span class="string">&quot;张飞&quot;</span>, <span class="number">35</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p4</span>(<span class="params"><span class="string">&quot;赵云&quot;</span>, <span class="number">35</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p5</span>(<span class="params"><span class="string">&quot;曹操&quot;</span>, <span class="number">36</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p6</span>(<span class="params"><span class="string">&quot;黄盖&quot;</span>, <span class="number">65</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;Person&gt;v2;</span><br><span class="line">    v2.push_back(p1);</span><br><span class="line">    v2.push_back(p2);</span><br><span class="line">    v2.push_back(p3);</span><br><span class="line">    v2.push_back(p4);</span><br><span class="line">    v2.push_back(p5);</span><br><span class="line">    v2.push_back(p6);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> num = count_if(v2.begin(), v2.end(), Greater35());</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;年龄大于35的元素个数为：&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;内置数据类型&quot;</span> &lt;&lt; endl;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;自定义数据类型&quot;</span> &lt;&lt; endl;</span><br><span class="line">    test02();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-5"><a href="#以上代码编译执行结果如下：-5" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070504450022-1024x354.jpg"></p>]]></content>
    
    
    <summary type="html">STL常用算法（常用查找算法）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程75：STL常用算法（常用遍历算法-transform）</title>
    <link href="https://notes.camcad.cn/post/39184424.html"/>
    <id>https://notes.camcad.cn/post/39184424.html</id>
    <published>2020-08-03T15:22:24.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h2 id="5-1-2-transform"><a href="#5-1-2-transform" class="headerlink" title="5.1.2 transform"></a>5.1.2 transform</h2><p><strong>功能描述：</strong><br>搬运容器到另一个容器中 </p><p><strong>函数原型：</strong></p><ul><li><code>transform(iterator beg1,iterator end1, iterator beg2 ,_func);</code> &#x2F;&#x2F;beg1源容器开始迭代器 &#x2F;&#x2F;end1源容器结束迭代器 &#x2F;&#x2F;beg2 目标容器开始迭代器 &#x2F;&#x2F;_func 函数或者函数对象</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="meta">#include&lt;functional&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印显示</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printVector</span>(<span class="params"><span class="keyword">const</span> <span class="built_in">string</span> str, <span class="keyword">const</span> vector&lt;<span class="built_in">int</span>&gt; v</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; str &lt;&lt; <span class="string">&quot;：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::const_iterator it = v.begin(); it != v.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//仿函数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">transForm01</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">int</span> <span class="title">operator</span>()(<span class="params"><span class="built_in">int</span> v1</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> v1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数</span></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">transForm02</span>(<span class="params"><span class="built_in">int</span> v2</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> v2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(<span class="number">10</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">    printVector(<span class="string">&quot;v1 初始化&quot;</span>, v1);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//搬运容器到另一个容器中</span></span><br><span class="line">    <span class="comment">//方法一</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v2;        <span class="comment">//目标容器</span></span><br><span class="line">    v2.resize(v1.size());   <span class="comment">//目标容器 需要提前开辟空间</span></span><br><span class="line">    transform(v1.begin(), v1.end(), v2.begin(), transForm01());</span><br><span class="line">    printVector(<span class="string">&quot;v2 初始化&quot;</span>, v2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法二</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v3;        <span class="comment">//目标容器</span></span><br><span class="line">    v3.resize(v1.size());   <span class="comment">//目标容器 需要提前开辟空间</span></span><br><span class="line">    transform(v1.begin(), v1.end(), v3.begin(), transForm02);</span><br><span class="line">    printVector(<span class="string">&quot;v3 初始化&quot;</span>, v3);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/202007041013116-1024x262.jpg"></p><h3 id="总结：搬运的目标容器必须要提前开辟空间，否则无法正常搬运。"><a href="#总结：搬运的目标容器必须要提前开辟空间，否则无法正常搬运。" class="headerlink" title="总结：搬运的目标容器必须要提前开辟空间，否则无法正常搬运。"></a>总结：搬运的目标容器必须要提前开辟空间，否则无法正常搬运。</h3>]]></content>
    
    
    <summary type="html">STL常用算法（常用遍历算法-transform）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程74：STL常用算法（常用遍历算法-for_each）</title>
    <link href="https://notes.camcad.cn/post/437af6a8.html"/>
    <id>https://notes.camcad.cn/post/437af6a8.html</id>
    <published>2020-08-03T11:52:37.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="STL-常用算法"><a href="#STL-常用算法" class="headerlink" title="STL-常用算法"></a>STL-常用算法</h1><p><strong>概述：</strong></p><ul><li>算法主要是由头文件<code>&lt;algorithm&gt;</code> <code>&lt;functional&gt;</code> <code>&lt;numeric&gt;</code>组成。</li><li><code>&lt;algorithm&gt;</code>是所有STL算法头文件中最大的一个，范围涉及到比较、交换、查找、遍历操作、复制、修改等等。 <code>&lt;numeric&gt;</code>体积很小，只包括几个在序列上面进行简单数学运算的模板函数。 <code>&lt;functional&gt;</code>定义了一些模板类，用以声明函数对象。</li></ul><h2 id="5-1-常用遍历算法"><a href="#5-1-常用遍历算法" class="headerlink" title="5.1 常用遍历算法"></a>5.1 常用遍历算法</h2><p><strong>学习目标：</strong><br>掌握常用的遍历算法 </p><p><strong>算法简介：</strong></p><ul><li><code>for_each</code> &#x2F;&#x2F;遍历容器</li><li><code>transform</code> &#x2F;&#x2F;搬运容器里的元素到另一个容器中</li></ul><h3 id="5-1-1-for-each"><a href="#5-1-1-for-each" class="headerlink" title="5.1.1 for_each"></a>5.1.1 for_each</h3><p><strong>功能描述：</strong><br>实现遍历容器 </p><p><strong>函数原型：</strong></p><ul><li><code>for_each(iterator beg, iterator end, _func);</code> &#x2F;&#x2F;遍历算法 遍历容器元素 &#x2F;&#x2F;beg 开始迭代器 &#x2F;&#x2F;end 结束迭代器 &#x2F;&#x2F;_func函数或者函数对象</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include &lt;algorithm&gt;  //内置算法头文件</span></span><br><span class="line"><span class="meta">#include &lt;string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print01</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//仿函数-函数对象</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Pring02</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operator</span>()(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(i + <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//函数</span></span><br><span class="line">    for_each(v1.begin(), v1.end(), print01);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//仿函数-函数对象</span></span><br><span class="line">    for_each(v1.begin(), v1.end(), Pring02());</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070409413940-1024x338.jpg"></p><h3 id="总结：for-each在实际开发中是最常用遍历算法，需要熟练掌握。"><a href="#总结：for-each在实际开发中是最常用遍历算法，需要熟练掌握。" class="headerlink" title="总结：for_each在实际开发中是最常用遍历算法，需要熟练掌握。"></a>总结：for_each在实际开发中是最常用遍历算法，需要熟练掌握。</h3>]]></content>
    
    
    <summary type="html">STL常用算法（常用遍历算法-for_each）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程73：STL函数对象（内建函数对象-逻辑仿函数）</title>
    <link href="https://notes.camcad.cn/post/bb18a6d3.html"/>
    <id>https://notes.camcad.cn/post/bb18a6d3.html</id>
    <published>2020-08-02T18:10:57.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h2 id="4-3-4-逻辑仿函数"><a href="#4-3-4-逻辑仿函数" class="headerlink" title="4.3.4 逻辑仿函数"></a>4.3.4 逻辑仿函数</h2><p><strong>功能描述：</strong><br>实现逻辑运算 </p><p><strong>函数原型：</strong></p><ul><li><code>template&lt;class T&gt; bool logical_and&lt;T&gt;</code> &#x2F;&#x2F;逻辑与</li><li><code>template&lt;class T&gt; bool logical_or&lt;T&gt;</code> &#x2F;&#x2F;逻辑或</li><li><code>template&lt;class T&gt; bool logical_not&lt;T&gt;</code> &#x2F;&#x2F;逻辑非</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &lt;functional&gt; //内置仿函数头文件</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include &lt;algorithm&gt;  //内置算法头文件</span></span><br><span class="line"><span class="meta">#include &lt;string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印显示</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printVector</span>(<span class="params"><span class="keyword">const</span> <span class="built_in">string</span> str, <span class="keyword">const</span> vector&lt;<span class="built_in">bool</span>&gt; v</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; str &lt;&lt; <span class="string">&quot;：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">bool</span>&gt;::const_iterator it = v.begin(); it != v.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">bool</span>&gt;v1;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//尾插数据</span></span><br><span class="line">    v1.push_back(<span class="literal">true</span>);</span><br><span class="line">    v1.push_back(<span class="literal">false</span>);</span><br><span class="line">    v1.push_back(<span class="literal">true</span>);</span><br><span class="line">    v1.push_back(<span class="literal">false</span>);</span><br><span class="line">    v1.push_back(<span class="literal">true</span>);</span><br><span class="line">    printVector(<span class="string">&quot;v1 初始化&quot;</span>, v1);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//利用逻辑非 将容器V1 搬运到 容器v2中，并执行取反操作</span></span><br><span class="line">    vector&lt;<span class="built_in">bool</span>&gt;v2;</span><br><span class="line">    v2.resize(v1.size());</span><br><span class="line">    transform(v1.begin(), v1.end(), v2.begin(), logical_not&lt;<span class="built_in">bool</span>&gt;());</span><br><span class="line">    printVector(<span class="string">&quot;v2 初始化&quot;</span>, v2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070408545175-1024x264.jpg"></p><h3 id="总结：逻辑仿函数实际应用较少，了解即可。"><a href="#总结：逻辑仿函数实际应用较少，了解即可。" class="headerlink" title="总结：逻辑仿函数实际应用较少，了解即可。"></a>总结：逻辑仿函数实际应用较少，了解即可。</h3>]]></content>
    
    
    <summary type="html">STL函数对象（内建函数对象-逻辑仿函数）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程72：STL函数对象（内建函数对象-关系仿函数）</title>
    <link href="https://notes.camcad.cn/post/234337fe.html"/>
    <id>https://notes.camcad.cn/post/234337fe.html</id>
    <published>2020-08-02T15:49:10.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h2 id="4-3-3-关系仿函数"><a href="#4-3-3-关系仿函数" class="headerlink" title="4.3.3 关系仿函数"></a>4.3.3 关系仿函数</h2><p><strong>功能描述：</strong><br>实现关系对比 </p><p><strong>仿函数原型：</strong></p><ul><li><code>template&lt;class T&gt; bool equal_to&lt;T&gt;</code> &#x2F;&#x2F;等于</li><li><code>template&lt;class T&gt; bool not_equal_to&lt;T&gt;</code> &#x2F;&#x2F;不等于</li><li><code>template&lt;class T&gt; bool greater&lt;T&gt;</code> &#x2F;&#x2F;大于</li><li><code>template&lt;class T&gt; bool greater_equal&lt;T&gt;</code> &#x2F;&#x2F;大于等于</li><li><code>template&lt;class T&gt; bool less&lt;T&gt;</code> &#x2F;&#x2F;小于</li><li><code>template&lt;class T&gt; bool less_equal&lt;T&gt;</code> &#x2F;&#x2F;小于等于</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &lt;functional&gt; //内置仿函数头文件</span></span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include &lt;algorithm&gt;  //内置算法头文件</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//尾插数据</span></span><br><span class="line">    v.push_back(<span class="number">15</span>);</span><br><span class="line">    v.push_back(<span class="number">21</span>);</span><br><span class="line">    v.push_back(<span class="number">33</span>);</span><br><span class="line">    v.push_back(<span class="number">45</span>);</span><br><span class="line">    v.push_back(<span class="number">13</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//降序排序</span></span><br><span class="line">    sort(v.begin(), v.end(), greater&lt;<span class="built_in">int</span>&gt;());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::iterator it = v.begin(); it != v.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：关系仿函数中最常用的就是template-lt-class-T-gt-bool-greater-lt-T-gt-大于"><a href="#总结：关系仿函数中最常用的就是template-lt-class-T-gt-bool-greater-lt-T-gt-大于" class="headerlink" title="总结：关系仿函数中最常用的就是template&lt;class T&gt; bool greater&lt;T&gt;大于"></a>总结：关系仿函数中最常用的就是<code>template&lt;class T&gt; bool greater&lt;T&gt;</code>大于</h3>]]></content>
    
    
    <summary type="html">STL函数对象（内建函数对象-关系仿函数）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程71：STL函数对象（内建函数对象-内建函数对象意义/算术仿函数）</title>
    <link href="https://notes.camcad.cn/post/d7fa12cb.html"/>
    <id>https://notes.camcad.cn/post/d7fa12cb.html</id>
    <published>2020-08-02T10:59:19.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="4-3-内建函数对象"><a href="#4-3-内建函数对象" class="headerlink" title="4.3 内建函数对象"></a>4.3 内建函数对象</h1><h2 id="4-3-1-内建函数对象意义"><a href="#4-3-1-内建函数对象意义" class="headerlink" title="4.3.1 内建函数对象意义"></a>4.3.1 内建函数对象意义</h2><p><strong>概念：</strong><br>STL内建了一些函数对象 </p><p><strong>分类：</strong></p><ul><li>算术仿函数</li><li>关系仿函数</li><li>逻辑仿函数</li></ul><p><strong>用法：</strong></p><ul><li>这些仿函数所产生的对象，用法和一般函数完全相同</li><li>使用内建函数对象，需要引入头文件<code>#include&lt;functional&gt;</code></li></ul><h2 id="4-3-2-算术仿函数"><a href="#4-3-2-算术仿函数" class="headerlink" title="4.3.2 算术仿函数"></a>4.3.2 算术仿函数</h2><p><strong>功能描述：</strong><br>实现四则运算<br>其中negate是一元运算，其他老师二元运算。 </p><p><strong>仿函数原型：</strong></p><ul><li><p><code>template&lt;class T&gt; T plus&lt;T&gt;</code> &#x2F;&#x2F;加法防函数</p></li><li><p><code>template&lt;class T&gt; T minus&lt;T&gt;</code> &#x2F;&#x2F;减法防函数</p></li><li><p><code>template&lt;class T&gt; T multiplies&lt;T&gt;</code> &#x2F;&#x2F;乘法防函数</p></li><li><p><code>template&lt;class T&gt; T divides&lt;T&gt;</code> &#x2F;&#x2F;除法防函数</p></li><li><p><code>template&lt;class T&gt; T modulus&lt;T&gt;</code> &#x2F;&#x2F;取模防函数</p></li><li><p><code>template&lt;class T&gt; T negate&lt;T&gt;</code> &#x2F;&#x2F;取反防函数</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &lt;functional&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//template&lt;class T&gt; T plus&lt;T&gt; //加法防函数</span></span><br><span class="line">    plus&lt;<span class="built_in">int</span>&gt;p;</span><br><span class="line">    cout &lt;&lt;<span class="string">&quot;加法仿函数：&quot;</span>&lt;&lt; p(<span class="number">10</span>, <span class="number">20</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//template&lt;class T&gt; T minus&lt;T&gt; //减法防函数</span></span><br><span class="line">    minus&lt;<span class="built_in">int</span>&gt;m;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;减法仿函数：&quot;</span> &lt;&lt; m(<span class="number">60</span>, <span class="number">20</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//template&lt;class T&gt; T multiplies&lt;T&gt; //乘法防函数</span></span><br><span class="line">    multiplies&lt;<span class="built_in">int</span>&gt;mul;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;乘法防函数：&quot;</span> &lt;&lt; mul(<span class="number">10</span>, <span class="number">10</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//template&lt;class T&gt; T divides&lt;T&gt; //除法防函数</span></span><br><span class="line">    divides&lt;<span class="built_in">int</span>&gt;d;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;除法防函数：&quot;</span> &lt;&lt; d(<span class="number">10</span>, <span class="number">2</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//template&lt;class T&gt; T modulus&lt;T&gt; //取模防函数</span></span><br><span class="line">    modulus&lt;<span class="built_in">int</span>&gt;mod;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;取模防函数：&quot;</span> &lt;&lt; mod(<span class="number">10</span>,<span class="number">6</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//template&lt;class T&gt; T negate&lt;T&gt; //取反防函数</span></span><br><span class="line">    negate&lt;<span class="built_in">int</span>&gt;n;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;取反防函数：&quot;</span> &lt;&lt; n(<span class="number">10</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070408021927-1024x411.jpg"></p><h3 id="总结：使用内建函数对象时，需要引入头文件-include-lt-functional-gt"><a href="#总结：使用内建函数对象时，需要引入头文件-include-lt-functional-gt" class="headerlink" title="总结：使用内建函数对象时，需要引入头文件 #include&lt;functional&gt;"></a>总结：使用内建函数对象时，需要引入头文件 <code>#include&lt;functional&gt;</code></h3>]]></content>
    
    
    <summary type="html">STL函数对象（内建函数对象-内建函数对象意义/算术仿函数）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程70：STL函数对象（谓词）</title>
    <link href="https://notes.camcad.cn/post/f42f72e5.html"/>
    <id>https://notes.camcad.cn/post/f42f72e5.html</id>
    <published>2020-08-02T09:09:36.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="4-2-谓词"><a href="#4-2-谓词" class="headerlink" title="4.2 谓词"></a>4.2 谓词</h1><h2 id="4-2-1-谓词概念"><a href="#4-2-1-谓词概念" class="headerlink" title="4.2.1 谓词概念"></a>4.2.1 谓词概念</h2><p><strong>概念：</strong></p><ul><li>返回bool类型的仿函数称为<strong>谓词</strong>。</li><li>如果operator() 接受一个参数，那么叫做一元谓词。</li><li>如果operator() 接受二个参数，那么叫做二元谓词。</li></ul><h2 id="4-2-2-一元谓词"><a href="#4-2-2-一元谓词" class="headerlink" title="4.2.2 一元谓词"></a>4.2.2 一元谓词</h2><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="meta">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include&lt;vector&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//仿函数 返回值类型为bool数据类型，称为谓词。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">GreaterFive</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一元谓词</span></span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">operator</span>()(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> val &gt; <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;::iterator it = find_if(v1.begin(), v1.end(), GreaterFive());</span><br><span class="line">    <span class="keyword">if</span> (it ==v1.end())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;未找到&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;找到大于5的数字为：&quot;</span> &lt;&lt; *it &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070203314088-1024x234.jpg"></p><h3 id="总结：参数只有一个的谓词，称为一元谓词。"><a href="#总结：参数只有一个的谓词，称为一元谓词。" class="headerlink" title="总结：参数只有一个的谓词，称为一元谓词。"></a>总结：参数只有一个的谓词，称为一元谓词。</h3><h2 id="4-2-3-二元谓词"><a href="#4-2-3-二元谓词" class="headerlink" title="4.2.3 二元谓词"></a>4.2.3 二元谓词</h2><h3 id="示例代码：-1"><a href="#示例代码：-1" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &lt;string&gt;</span></span><br><span class="line"><span class="meta">#include &lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include &lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//二元谓词</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">MyCompare</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">bool</span>  <span class="title">operator</span>()(<span class="params"><span class="built_in">int</span> v1, <span class="built_in">int</span> v2</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> v1 &gt; v2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印显示</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printVector</span>(<span class="params"><span class="keyword">const</span> <span class="built_in">string</span> str, <span class="keyword">const</span> vector&lt;<span class="built_in">int</span>&gt; &amp;v1</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; str &lt;&lt; <span class="string">&quot;：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;<span class="built_in">int</span>&gt;::const_iterator it = v1.begin(); it != v1.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;<span class="built_in">int</span>&gt;v1;</span><br><span class="line">    v1.push_back(<span class="number">21</span>);</span><br><span class="line">    v1.push_back(<span class="number">12</span>);</span><br><span class="line">    v1.push_back(<span class="number">45</span>);</span><br><span class="line">    v1.push_back(<span class="number">42</span>);</span><br><span class="line">    v1.push_back(<span class="number">11</span>);</span><br><span class="line">    printVector(<span class="string">&quot;v1 初始化&quot;</span>, v1);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//升序</span></span><br><span class="line">    sort(v1.begin(), v1.end());</span><br><span class="line">    printVector(<span class="string">&quot;v1 升序后&quot;</span>, v1);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//降序</span></span><br><span class="line">    sort(v1.begin(), v1.end(),MyCompare());</span><br><span class="line">    printVector(<span class="string">&quot;v1 降序后&quot;</span>, v1);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070407325976-1024x365.jpg"></p><h3 id="总结：参数有两个的谓词，称为二元谓词。"><a href="#总结：参数有两个的谓词，称为二元谓词。" class="headerlink" title="总结：参数有两个的谓词，称为二元谓词。"></a>总结：参数有两个的谓词，称为二元谓词。</h3>]]></content>
    
    
    <summary type="html">STL函数对象（谓词）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程69：STL函数对象（函数对象）</title>
    <link href="https://notes.camcad.cn/post/b9db3b6b.html"/>
    <id>https://notes.camcad.cn/post/b9db3b6b.html</id>
    <published>2020-08-01T20:19:25.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="第四章：STL函数对象"><a href="#第四章：STL函数对象" class="headerlink" title="第四章：STL函数对象"></a>第四章：STL函数对象</h1><h2 id="4-1-函数对象"><a href="#4-1-函数对象" class="headerlink" title="4.1 函数对象"></a>4.1 函数对象</h2><h3 id="4-1-1-函数对象概念"><a href="#4-1-1-函数对象概念" class="headerlink" title="4.1.1 函数对象概念"></a>4.1.1 函数对象概念</h3><p><strong>概念：</strong></p><ul><li>重载<strong>函数调用操作符</strong>的类，其对象常称为<strong>函数对象</strong>。</li><li><strong>函数对象</strong>使用重载 ( ) 时，行为类似函数调用，也叫<strong>仿函数</strong>。</li></ul><p><strong>本质：</strong></p><ul><li><p>函数对象（仿函数）是一个<strong>类</strong>，不是一个函数。</p><h3 id="4-1-2-函数对象使用"><a href="#4-1-2-函数对象使用" class="headerlink" title="4.1.2 函数对象使用"></a>4.1.2 函数对象使用</h3><p><strong>特点：</strong></p></li><li><p>函数对象在使用时，可以像普通函数那样调用，可以有参数，可以有返回值。</p></li><li><p>函数对象超出普通函数的概念，函数对象可以有自己的状态。</p></li><li><p>函数对象可以作为参数传递。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//仿函数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">MyFunc</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    MyFunc()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;count = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//仿函数（加法）</span></span><br><span class="line">    <span class="function"><span class="built_in">int</span> <span class="title">operator</span>()(<span class="params"><span class="built_in">int</span> v1, <span class="built_in">int</span> v2</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> v1 + v2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//仿函数（打印显示）</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operator</span>()(<span class="params"><span class="built_in">string</span> str</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> count;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//参数传递（打印显示）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doPrint</span>(<span class="params">MyFunc &amp;p, <span class="built_in">string</span> str</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    p(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//函数对象在使用时，可以像普通函数那样调用，可以有参数，可以有返回值。</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;函数对象在使用时，可以像普通函数那样调用，可以有参数，可以有返回值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    MyFunc <span class="keyword">add</span>;</span><br><span class="line">    cout &lt;&lt;<span class="string">&quot;add(12, 29)：&quot;</span>&lt;&lt; <span class="keyword">add</span>(<span class="number">12</span>, <span class="number">29</span>) &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;    <span class="comment">//41</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//函数对象超出普通函数的概念，函数对象可以有自己的状态。</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;函数对象超出普通函数的概念，函数对象可以有自己的状态：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    MyFunc p;</span><br><span class="line">    p(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    p(<span class="string">&quot;Hello C++&quot;</span>);</span><br><span class="line">    p(<span class="string">&quot;Hello C&quot;</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;仿函数（打印显示）调用次数为：&quot;</span> &lt;&lt; p.count &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//函数对象可以作为参数传递。</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;函数对象可以作为参数传递：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    MyFunc myPrint;</span><br><span class="line">    doPrint(myPrint, <span class="string">&quot;Heoll C/C++&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070202554644-1024x417.jpg"></p><h3 id="总结：仿函数写法非常灵活，可以作为参数进行传递。"><a href="#总结：仿函数写法非常灵活，可以作为参数进行传递。" class="headerlink" title="总结：仿函数写法非常灵活，可以作为参数进行传递。"></a>总结：仿函数写法非常灵活，可以作为参数进行传递。</h3>]]></content>
    
    
    <summary type="html">STL函数对象（函数对象）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程68：STL常用容器（案例-员工分组）</title>
    <link href="https://notes.camcad.cn/post/b4f414d.html"/>
    <id>https://notes.camcad.cn/post/b4f414d.html</id>
    <published>2020-08-01T17:57:16.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h1 id="3-10-案例-员工分组"><a href="#3-10-案例-员工分组" class="headerlink" title="3.10 案例-员工分组"></a>3.10 案例-员工分组</h1><h2 id="3-10-1-案例描述"><a href="#3-10-1-案例描述" class="headerlink" title="3.10.1 案例描述"></a>3.10.1 案例描述</h2><ul><li>公司今天招聘了10个员工（ABCDEFGHIJ）,10名员工进入公司之后，需要指派员工在那个部门工作。</li><li>员工信息有：姓名、工资组成；部门分为 ：策划、美术、研发。</li><li>随机给10名员工分配部门和工资。</li><li>通过multimap进行信息的插入key（部门编号）value（员工）。</li><li>分部门显示员工信息。</li></ul><h2 id="10-2-实现步骤"><a href="#10-2-实现步骤" class="headerlink" title="10.2 实现步骤"></a>10.2 实现步骤</h2><ul><li><p>1.创建10名员工，放到vecror容器中。</p></li><li><p>2.遍历vector容器，取出每个员工，进行随机分组。</p></li><li><p>3.分组后，将员工部门编号作为key，具体员工作为value，放入到multimap容器中。</p></li><li><p>4.分部门显示员工信息</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &lt;vector&gt;</span></span><br><span class="line"><span class="meta">#include &lt;string&gt;</span></span><br><span class="line"><span class="meta">#include &lt;map&gt;</span></span><br><span class="line"><span class="meta">#include &lt;ctime&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> plan 0      //策划</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fineArts 1  //美术</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> exploit 2   //研发</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//员工类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Worker</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line">    <span class="built_in">int</span> m_Salary;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建员工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createWorker</span>(<span class="params">vector&lt;Worker&gt; &amp;v</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> nameNo = <span class="string">&quot;ABCDEFGHIJ&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//创建员工</span></span><br><span class="line">        Worker worker;</span><br><span class="line">        worker.m_Name = <span class="string">&quot;员工&quot;</span>;</span><br><span class="line">        worker.m_Name += nameNo[i]; </span><br><span class="line"></span><br><span class="line">        <span class="comment">//随机工资</span></span><br><span class="line">        worker.m_Salary = rand() % <span class="number">5001</span> + <span class="number">6999</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将元素放入到容器中</span></span><br><span class="line">        v.push_back(worker);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setGroup</span>(<span class="params">vector&lt;Worker&gt; &amp;v, multimap&lt;<span class="built_in">int</span>, Worker&gt; &amp;m</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;Worker&gt;::iterator it = v.begin(); it != v.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//产生随机部门编号</span></span><br><span class="line">        <span class="built_in">int</span> deptId = rand() % <span class="number">3</span>;    <span class="comment">//0 1 2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//将员工插入到分组中</span></span><br><span class="line">        m.insert(make_pair(deptId, *it));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//分组显示员工信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showWorkerByGourp</span>(<span class="params"> multimap&lt;<span class="built_in">int</span>, Worker&gt; &amp;m</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;策划部门：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    multimap&lt;<span class="built_in">int</span>, Worker&gt;::iterator pos = m.find(plan);</span><br><span class="line">    <span class="built_in">int</span> cosnt = m.count(plan);  <span class="comment">//统计具体人数</span></span><br><span class="line">    <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; pos != m.end() &amp;&amp; index &lt; cosnt; pos++, index++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; pos-&gt;second.m_Name &lt;&lt; <span class="string">&quot;\t工资：&quot;</span> &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;美术部门：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    pos = m.find(fineArts);</span><br><span class="line">    cosnt = m.count(fineArts);  <span class="comment">//统计具体人数</span></span><br><span class="line">    index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; pos != m.end() &amp;&amp; index &lt; cosnt; pos++, index++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; pos-&gt;second.m_Name &lt;&lt; <span class="string">&quot;\t工资：&quot;</span> &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;研发部门：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    pos = m.find(exploit);</span><br><span class="line">    cosnt = m.count(exploit);   <span class="comment">//统计具体人数</span></span><br><span class="line">    index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; pos != m.end() &amp;&amp; index &lt; cosnt; pos++, index++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; pos-&gt;second.m_Name &lt;&lt; <span class="string">&quot;\t工资：&quot;</span> &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//随机数种子</span></span><br><span class="line">    srand((unsigned <span class="built_in">int</span>)time(NULL));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    vector&lt;Worker&gt; vWorker;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建员工</span></span><br><span class="line">    createWorker(vWorker);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置组</span></span><br><span class="line">    multimap&lt;<span class="built_in">int</span>,Worker&gt; mWorker;</span><br><span class="line">    setGroup(vWorker, mWorker);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分组显示员工信息</span></span><br><span class="line">    showWorkerByGourp(mWorker);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">STL常用容器（案例-员工分组）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程67：STL常用容器（map/multimap容器-map容器排序）</title>
    <link href="https://notes.camcad.cn/post/4fea10f2.html"/>
    <id>https://notes.camcad.cn/post/4fea10f2.html</id>
    <published>2020-08-01T14:49:21.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h2 id="3-9-6-map容器排序"><a href="#3-9-6-map容器排序" class="headerlink" title="3.9.6 map容器排序"></a>3.9.6 map容器排序</h2><p><strong>学习目标：</strong><br>map容器默认排序规则为按照key值进行 从小到大排序，掌握如何改变排序规则。 </p><p><strong>主要技术点：</strong></p><ul><li>利用仿函数，可以改变排序规则。</li></ul><h2 id="1、示例代码（内置数据类型）"><a href="#1、示例代码（内置数据类型）" class="headerlink" title="1、示例代码（内置数据类型）"></a>1、示例代码（内置数据类型）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &lt;string&gt;</span></span><br><span class="line"><span class="meta">#include &lt;map&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//访函数（降序）</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">myCompare</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">operator</span>()(<span class="params"><span class="built_in">int</span> v1, <span class="built_in">int</span> v2</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> v1 &gt; v2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printMap</span>(<span class="params"><span class="keyword">const</span> <span class="built_in">string</span> str, <span class="keyword">const</span> map&lt;<span class="built_in">int</span>, <span class="built_in">int</span>, myCompare&gt; &amp;m</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; str &lt;&lt; <span class="string">&quot;：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (map&lt;<span class="built_in">int</span>, <span class="built_in">int</span>, myCompare&gt;::const_iterator it = m.begin(); it != m.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;键值(key)：&quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class="string">&quot;\t实值(value)：&quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    map&lt;<span class="built_in">int</span>, <span class="built_in">int</span>, myCompare&gt;m1;</span><br><span class="line">    m1.insert(make_pair(<span class="number">1</span>, <span class="number">22</span>));</span><br><span class="line">    m1.insert(make_pair(<span class="number">4</span>, <span class="number">32</span>));</span><br><span class="line">    m1.insert(make_pair(<span class="number">3</span>, <span class="number">25</span>));</span><br><span class="line">    m1.insert(make_pair(<span class="number">5</span>, <span class="number">11</span>));</span><br><span class="line">    m1.insert(make_pair(<span class="number">2</span>, <span class="number">31</span>));</span><br><span class="line">    printMap(<span class="string">&quot;m1 初始化&quot;</span>, m1);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;   </span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070106171534-1024x419.jpg"></p><h2 id="2、示例代码（自定义数据类型）"><a href="#2、示例代码（自定义数据类型）" class="headerlink" title="2、示例代码（自定义数据类型）"></a>2、示例代码（自定义数据类型）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &lt;string&gt;</span></span><br><span class="line"><span class="meta">#include &lt;map&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Person(<span class="built_in">string</span> name, <span class="built_in">int</span> age, <span class="built_in">int</span> higjt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Hight = higjt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line">    <span class="built_in">int</span> m_Age;</span><br><span class="line">    <span class="built_in">int</span> m_Hight;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访函数（年龄降序--身高升序）</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">myCompare01</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">operator</span>()(<span class="params"><span class="keyword">const</span> <span class="built_in">int</span> &amp;v1, <span class="keyword">const</span> <span class="built_in">int</span> &amp;v2</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> v1 &gt; v2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">myCompare02</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">operator</span>()(<span class="params"><span class="keyword">const</span> Person &amp;v1,<span class="keyword">const</span> Person &amp;v2</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (v1.m_Age==v2.m_Age)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> v1.m_Hight &lt; v2.m_Hight;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v1.m_Age &gt; v2.m_Age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printMap01</span>(<span class="params"><span class="keyword">const</span> <span class="built_in">string</span> str, <span class="keyword">const</span> map&lt;<span class="built_in">int</span>, Person, myCompare01&gt; &amp;m</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; str &lt;&lt; <span class="string">&quot;：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (map&lt;<span class="built_in">int</span>, Person, myCompare01&gt;::const_iterator it = m.begin(); it != m.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;键值(key)：&quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; it-&gt;second.m_Name </span><br><span class="line">            &lt;&lt; <span class="string">&quot;\t年龄：&quot;</span> &lt;&lt; it-&gt;second.m_Age &lt;&lt; <span class="string">&quot;\t身高：&quot;</span> &lt;&lt; it-&gt;second.m_Hight &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printMap02</span>(<span class="params"><span class="keyword">const</span> <span class="built_in">string</span> str, <span class="keyword">const</span> map&lt;Person,<span class="built_in">int</span>, myCompare02&gt; &amp;m</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; str &lt;&lt; <span class="string">&quot;：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (map&lt;Person, <span class="built_in">int</span>, myCompare02&gt;::const_iterator it = m.begin(); it != m.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; it-&gt;first.m_Name &lt;&lt; <span class="string">&quot;\t年龄：&quot;</span> &lt;&lt; it-&gt;first.m_Age</span><br><span class="line">            &lt;&lt; <span class="string">&quot;\t身高：&quot;</span> &lt;&lt; it-&gt;first.m_Hight &lt;&lt; <span class="string">&quot;\t键值(key)：&quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建元素</span></span><br><span class="line">    <span class="function">Person <span class="title">p1</span>(<span class="params"><span class="string">&quot;李四&quot;</span>, <span class="number">20</span>, <span class="number">165</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span>(<span class="params"><span class="string">&quot;张三&quot;</span>, <span class="number">18</span>, <span class="number">182</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p4</span>(<span class="params"><span class="string">&quot;赵六&quot;</span>, <span class="number">26</span>, <span class="number">177</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p3</span>(<span class="params"><span class="string">&quot;小二&quot;</span>, <span class="number">23</span>, <span class="number">165</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p5</span>(<span class="params"><span class="string">&quot;小三&quot;</span>, <span class="number">20</span>, <span class="number">171</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p6</span>(<span class="params"><span class="string">&quot;赵云&quot;</span>, <span class="number">20</span>, <span class="number">155</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    map&lt;<span class="built_in">int</span>, Person, myCompare01&gt;m1;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插入元素</span></span><br><span class="line">    m1.insert(make_pair(<span class="number">1</span>, p1));</span><br><span class="line">    m1.insert(make_pair(<span class="number">5</span>, p2));</span><br><span class="line">    m1.insert(make_pair(<span class="number">6</span>, p6));</span><br><span class="line">    m1.insert(make_pair(<span class="number">4</span>, p4));</span><br><span class="line">    m1.insert(make_pair(<span class="number">2</span>, p3));</span><br><span class="line">    m1.insert(make_pair(<span class="number">3</span>, p5));</span><br><span class="line"></span><br><span class="line">    printMap01(<span class="string">&quot;m1 初始化&quot;</span>, m1);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建元素</span></span><br><span class="line">    <span class="function">Person <span class="title">p1</span>(<span class="params"><span class="string">&quot;李四&quot;</span>, <span class="number">20</span>, <span class="number">165</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span>(<span class="params"><span class="string">&quot;张三&quot;</span>, <span class="number">18</span>, <span class="number">182</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p4</span>(<span class="params"><span class="string">&quot;赵六&quot;</span>, <span class="number">26</span>, <span class="number">177</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p3</span>(<span class="params"><span class="string">&quot;小二&quot;</span>, <span class="number">23</span>, <span class="number">165</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p5</span>(<span class="params"><span class="string">&quot;小三&quot;</span>, <span class="number">20</span>, <span class="number">171</span></span>)</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p6</span>(<span class="params"><span class="string">&quot;赵云&quot;</span>, <span class="number">20</span>, <span class="number">155</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建容器</span></span><br><span class="line">    map&lt;Person,<span class="built_in">int</span>, myCompare02&gt;m2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插入元素</span></span><br><span class="line">    m2.insert(make_pair(p1,<span class="number">1</span>));</span><br><span class="line">    m2.insert(make_pair(p2,<span class="number">5</span>));</span><br><span class="line">    m2.insert(make_pair(p6,<span class="number">6</span>));</span><br><span class="line">    m2.insert(make_pair(p4,<span class="number">4</span>));</span><br><span class="line">    m2.insert(make_pair(p3,<span class="number">2</span>));</span><br><span class="line">    m2.insert(make_pair(p5,<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">    printMap02(<span class="string">&quot;m2 初始化&quot;</span>, m2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;   </span><br><span class="line">    test01();</span><br><span class="line">    test02();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070106585655-1024x510.jpg"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul><li>利用访函数可以指定map容器的排序规则</li><li>对于自定义数据类型，map必须要指定排序规则，同set容器。</li></ul>]]></content>
    
    
    <summary type="html">STL常用容器（map/multimap容器-map容器排序）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C++提高编程66：STL常用容器（map/multimap容器-map查找和统计）</title>
    <link href="https://notes.camcad.cn/post/f0634711.html"/>
    <id>https://notes.camcad.cn/post/f0634711.html</id>
    <published>2020-08-01T09:43:55.000Z</published>
    <updated>2023-04-06T05:38:14.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="教程目录《C-提高编程》"><a href="#教程目录《C-提高编程》" class="headerlink" title="教程目录《C++提高编程》"></a>教程目录《<a href="https://notes.camcad.cn/post/13756432.html">C++提高编程</a>》</h3><h2 id="3-9-5-map查找和统计"><a href="#3-9-5-map查找和统计" class="headerlink" title="3.9.5 map查找和统计"></a>3.9.5 map查找和统计</h2><p><strong>功能描述：</strong><br>对map容器进行查找数据以及统计数据 </p><p><strong>函数原型：</strong></p><ul><li><code>find(key);</code> &#x2F;&#x2F;查找key是否存在，若存在，返回该键的元素的迭代器；若不存在，返回map.end();。</li><li><code>count(key);</code> &#x2F;&#x2F;统计key的元素个数</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#include &lt;string&gt;</span></span><br><span class="line"><span class="meta">#include &lt;map&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printMap</span>(<span class="params"><span class="keyword">const</span> <span class="built_in">string</span> str, <span class="keyword">const</span> map&lt;<span class="built_in">int</span>, <span class="built_in">int</span>&gt; &amp;m</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; str &lt;&lt; <span class="string">&quot;：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (map&lt;<span class="built_in">int</span>, <span class="built_in">int</span>&gt;::const_iterator it = m.begin(); it != m.end(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;键值(key)：&quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class="string">&quot;实值(value)：&quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//map容器</span></span><br><span class="line">    map&lt;<span class="built_in">int</span>, <span class="built_in">int</span>&gt;m1;</span><br><span class="line">    m1.insert(make_pair(<span class="number">1</span>, <span class="number">120</span>));</span><br><span class="line">    m1.insert(make_pair(<span class="number">3</span>, <span class="number">110</span>));</span><br><span class="line">    m1.insert(make_pair(<span class="number">2</span>, <span class="number">110</span>));</span><br><span class="line">    m1.insert(make_pair(<span class="number">4</span>, <span class="number">119</span>));</span><br><span class="line">    m1.insert(make_pair(<span class="number">5</span>, <span class="number">103</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//find(key); //查找key是否存在，若存在，返回该键的元素的迭代器；若不存在，返回map.end();。</span></span><br><span class="line">    map&lt;<span class="built_in">int</span>, <span class="built_in">int</span>&gt;::iterator mit = m1.find(<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">if</span> (mit!=m1.end())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;m1 m1.find(5) 键值(key)：&quot;</span> &lt;&lt; mit-&gt;first &lt;&lt; <span class="string">&quot;\t实值(value)：&quot;</span> &lt;&lt; mit-&gt;second &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;m1 m1.find(5)不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//count(key); //统计key的元素个数</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;m1 统计key的元素个数为：&quot;</span> &lt;&lt; m1.count(<span class="number">2</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//multimap容器</span></span><br><span class="line">    multimap&lt;<span class="built_in">int</span>, <span class="built_in">int</span>&gt;m2;</span><br><span class="line">    m2.insert(make_pair(<span class="number">1</span>, <span class="number">120</span>));</span><br><span class="line">    m2.insert(make_pair(<span class="number">3</span>, <span class="number">110</span>));</span><br><span class="line">    m2.insert(make_pair(<span class="number">2</span>, <span class="number">110</span>));</span><br><span class="line">    m2.insert(make_pair(<span class="number">4</span>, <span class="number">119</span>));</span><br><span class="line">    m2.insert(make_pair(<span class="number">2</span>, <span class="number">103</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//find(key); //查找key是否存在，若存在，返回该键的元素的迭代器；若不存在，返回map.end();。</span></span><br><span class="line">    map&lt;<span class="built_in">int</span>, <span class="built_in">int</span>&gt;::iterator mit = m2.find(<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">if</span> (mit != m2.end())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;m2 m1.find(5) 键值(key)：&quot;</span> &lt;&lt; mit-&gt;first &lt;&lt; <span class="string">&quot;\t实值(value)：&quot;</span> &lt;&lt; mit-&gt;second &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;m2 m2.find(5) 不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//count(key); //统计key的元素个数</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;m2 统计key的元素个数为：&quot;</span> &lt;&lt; m2.count(<span class="number">2</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;map容器：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;multimap容器：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    test02();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/07/2020070105443961-1024x435.jpg"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul><li>查找—find（返回的是迭代器）</li><li>统计—count（对于map，结果为0或者1）</li></ul>]]></content>
    
    
    <summary type="html">STL常用容器（map/multimap容器-map查找和统计）</summary>
    
    
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/categories/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C/C++" scheme="https://notes.camcad.cn/tags/C-C/"/>
    
    <category term="蚂蚁Emmet" scheme="https://notes.camcad.cn/tags/%E8%9A%82%E8%9A%81Emmet/"/>
    
    <category term="C++ STL" scheme="https://notes.camcad.cn/tags/C-STL/"/>
    
    <category term="C++提高编程" scheme="https://notes.camcad.cn/tags/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
</feed>
