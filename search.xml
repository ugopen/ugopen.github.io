<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++核心知识</title>
      <link href="/post/7fd4f72a.html"/>
      <url>/post/7fd4f72a.html</url>
      
        <content type="html"><![CDATA[<h3 id="第一章：内存分区模型"><a href="#第一章：内存分区模型" class="headerlink" title="第一章：内存分区模型"></a>第一章：内存分区模型</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">001</td><td align="left"><a href="https://notes.camcad.cn/post/1f273a4e.html">C++核心知识01：内存分区模型（程序运行前）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=84">08:55</a></td></tr><tr><td align="center">002</td><td align="left"><a href="https://notes.camcad.cn/post/a9567b5e.html">C++核心知识02：内存分区模型（程序运行后）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=85">17:08</a></td></tr><tr><td align="center">003</td><td align="left"><a href="https://notes.camcad.cn/post/f5a87345.html">C++核心知识03：内存分区模型（new操作符）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=88">10:40</a></td></tr></tbody></table><h3 id="第二章：引用"><a href="#第二章：引用" class="headerlink" title="第二章：引用"></a>第二章：引用</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">004</td><td align="left"><a href="https://notes.camcad.cn/post/d3d53efc.html">C++核心知识04：引用（引用的基本使用）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=89">06:12</a></td></tr><tr><td align="center">005</td><td align="left"><a href="https://notes.camcad.cn/post/2c4aca87.html">C++核心知识05：引用（引用的注意事项）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=90">07:39</a></td></tr><tr><td align="center">006</td><td align="left"><a href="https://notes.camcad.cn/post/7c1f4207.html">C++核心知识06：引用（引用做函数参数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=91">10:25</a></td></tr><tr><td align="center">007</td><td align="left"><a href="https://notes.camcad.cn/post/49e8996a.html">C++核心知识07：引用（引用做函数返回值）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=92">10:47</a></td></tr><tr><td align="center">008</td><td align="left"><a href="https://notes.camcad.cn/post/54d34880.html">C++核心知识08：引用（引用的本质）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=93">07:42</a></td></tr><tr><td align="center">009</td><td align="left"><a href="https://notes.camcad.cn/post/22ef0d6a.html">C++核心知识09：引用（常量引用）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=94">09:18</a></td></tr></tbody></table><h3 id="第三章：函数提高"><a href="#第三章：函数提高" class="headerlink" title="第三章：函数提高"></a>第三章：函数提高</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">010</td><td align="left"><a href="https://notes.camcad.cn/post/742f45c2.html">C++核心知识10：函数提高（函数默认参数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=95">13:16</a></td></tr><tr><td align="center">011</td><td align="left"><a href="https://notes.camcad.cn/post/11a68870.html">C++核心知识11：函数提高（函数占位参数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=96">06:10</a></td></tr><tr><td align="center">012</td><td align="left"><a href="https://notes.camcad.cn/post/a93a0f90.html">C++核心知识12：函数提高（函数重载-函数重载概述）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=97">11:19</a></td></tr><tr><td align="center">013</td><td align="left"><a href="https://notes.camcad.cn/post/af4cd469.html">C++核心知识13：函数提高（函数重载-函数重载注意事项）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=98">11:22</a></td></tr></tbody></table><h3 id="第四章：类和对象"><a href="#第四章：类和对象" class="headerlink" title="第四章：类和对象"></a>第四章：类和对象</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">014</td><td align="left"><a href="https://notes.camcad.cn/post/d60295ce.html">C++核心知识14：类和对象（封装-封装的意义）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=99">14:36</a></td></tr><tr><td align="center">015</td><td align="left"><a href="https://notes.camcad.cn/post/443da51e.html">C++核心知识15：类和对象（封装-struct和class区别）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=102">05:41</a></td></tr><tr><td align="center">016</td><td align="left"><a href="https://notes.camcad.cn/post/d18a6ddb.html">C++核心知识16：类和对象（封装-成员属性设置为私有）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=103">16:25</a></td></tr><tr><td align="center">017</td><td align="left"><a href="https://notes.camcad.cn/post/a7e8e2e0.html">C++核心知识17：类和对象（封装-练习案例2：点和圆的关系）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=105">25:00</a></td></tr><tr><td align="center">018</td><td align="left"><a href="https://notes.camcad.cn/post/a0c1d58.html">C++核心知识18：类和对象（对象的初始化和清理-构造函数和析构函数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=106">15:56</a></td></tr><tr><td align="center">019</td><td align="left"><a href="https://notes.camcad.cn/post/410f4cfc.html">C++核心知识19：类和对象（对象的初始化和清理-构造函数的分类及调用）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=107">25:48</a></td></tr><tr><td align="center">020</td><td align="left"><a href="https://notes.camcad.cn/post/1e388f1.html">C++核心知识20：类和对象（对象的初始化和清理-拷贝构造函数调用时机）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=108">12:32</a></td></tr><tr><td align="center">021</td><td align="left"><a href="https://notes.camcad.cn/post/4957dc4c.html">C++核心知识21：类和对象（对象的初始化和清理-构造函数调用规则）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=109">13:53</a></td></tr><tr><td align="center">022</td><td align="left"><a href="https://notes.camcad.cn/post/f261c562.html">C++核心知识22：类和对象（对象的初始化和清理-深拷贝与浅拷贝）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=110">16:43</a></td></tr><tr><td align="center">023</td><td align="left"><a href="https://notes.camcad.cn/post/92cfe06a.html">C++核心知识23：类和对象（对象的初始化和清理-初始化列表）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=111">07:22</a></td></tr><tr><td align="center">024</td><td align="left"><a href="https://notes.camcad.cn/post/10048791.html">C++核心知识24：类和对象（对象的初始化和清理-类对象作为类成员）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=112">13:23</a></td></tr><tr><td align="center">025</td><td align="left"><a href="https://notes.camcad.cn/post/9c9825a3.html">C++核心知识25：类和对象（对象的初始化和清理-静态成员）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=113">09:08</a></td></tr><tr><td align="center">026</td><td align="left"><a href="https://notes.camcad.cn/post/be27d4eb.html">C++核心知识26：类和对象（C++对象模型和this指针-成员变量和成员函数分开存储）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=114">10:38</a></td></tr><tr><td align="center">027</td><td align="left"><a href="https://notes.camcad.cn/post/49bdc38e.html">C++核心知识27：类和对象（C++对象模型和this指针-this指针概念）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=115">15:37</a></td></tr><tr><td align="center">028</td><td align="left"><a href="https://notes.camcad.cn/post/bb043411.html">C++核心知识28：类和对象（C++对象模型和this指针-空指针访问成员函数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=116">06:19</a></td></tr><tr><td align="center">029</td><td align="left"><a href="https://notes.camcad.cn/post/3e7e5462.html">C++核心知识29：类和对象（C++对象模型和this指针-const修饰成员函数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=117">12:40</a></td></tr><tr><td align="center">030</td><td align="left"><a href="https://notes.camcad.cn/post/54dc0ab8.html">C++核心知识30：类和对象（友元-全局函数做友元）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=118">08:43</a></td></tr><tr><td align="center">031</td><td align="left"><a href="https://notes.camcad.cn/post/d307b743.html">C++核心知识31：类和对象（友元-类做友元）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=119">10:28</a></td></tr><tr><td align="center">032</td><td align="left"><a href="https://notes.camcad.cn/post/dc731654.html">C++核心知识32：类和对象（友元-成员函数做友元）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=120">10:12</a></td></tr><tr><td align="center">033</td><td align="left"><a href="https://notes.camcad.cn/post/a06479a2.html">C++核心知识33：类和对象（运算符重载-加号运算符重载）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=121">21:32</a></td></tr><tr><td align="center">034</td><td align="left"><a href="https://notes.camcad.cn/post/c2b29a2.html">C++核心知识34：类和对象（运算符重载-左移运算符重载）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=122">15:35</a></td></tr><tr><td align="center">035</td><td align="left"><a href="https://notes.camcad.cn/post/1cbfd86.html">C++核心知识35：类和对象（运算符重载-递增运算符重载）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=123">21:37</a></td></tr><tr><td align="center">036</td><td align="left"><a href="https://notes.camcad.cn/post/261c09c2.html">C++核心知识36：类和对象（运算符重载-赋值运算符重载）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=124">17:16</a></td></tr><tr><td align="center">037</td><td align="left"><a href="https://notes.camcad.cn/post/15ab8371.html">C++核心知识37：类和对象（运算符重载-关系运算符重载）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=125">08:28</a></td></tr><tr><td align="center">038</td><td align="left"><a href="https://notes.camcad.cn/post/d57eb46e.html">C++核心知识38：类和对象（运算符重载-函数调用运算符重载）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=126">09:47</a></td></tr><tr><td align="center">039</td><td align="left"><a href="https://notes.camcad.cn/post/d92241ea.html">C++核心知识39：类和对象（继承-继承的基本语法）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=127">17:53</a></td></tr><tr><td align="center">040</td><td align="left"><a href="https://notes.camcad.cn/post/cb95e71a.html">C++核心知识40：类和对象（继承-继承方式）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=128">16:27</a></td></tr><tr><td align="center">041</td><td align="left"><a href="https://notes.camcad.cn/post/cdbddfdd.html">C++核心知识41：类和对象（继承-继承中的对象模型&amp;vs开发人员命令提示符）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=129">12:30</a></td></tr><tr><td align="center">042</td><td align="left"><a href="https://notes.camcad.cn/post/2a4be3b1.html">C++核心知识42：类和对象（继承-继承中构造和析构顺序）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=130">04:58</a></td></tr><tr><td align="center">043</td><td align="left"><a href="https://notes.camcad.cn/post/434dacb3.html">C++核心知识43：类和对象（继承-继承同名成员处理方式）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=131">11:06</a></td></tr><tr><td align="center">044</td><td align="left"><a href="https://notes.camcad.cn/post/335a130a.html">C++核心知识44：类和对象（继承-继承同名静态成员处理方式）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=132">13:00</a></td></tr><tr><td align="center">045</td><td align="left"><a href="https://notes.camcad.cn/post/66431651.html">C++核心知识45：类和对象（继承-多继承语法）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=133">08:54</a></td></tr><tr><td align="center">046</td><td align="left"><a href="https://notes.camcad.cn/post/db3b53a0.html">C++核心知识46：类和对象（继承-菱形继承&amp;virtual）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=134">19:32</a></td></tr><tr><td align="center">047</td><td align="left"><a href="https://notes.camcad.cn/post/76b5e75d.html">C++核心知识47：类和对象（多态-多态的基本概念）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=135">16:59</a></td></tr><tr><td align="center">048</td><td align="left"><a href="https://notes.camcad.cn/post/e0aaaf87.html">C++核心知识48：类和对象（多态-多态案例一计算机类）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=137">20:07</a></td></tr><tr><td align="center">049</td><td align="left"><a href="https://notes.camcad.cn/post/9854c368.html">C++核心知识49：类和对象（多态-纯虚函数和抽象类）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=138">10:25</a></td></tr><tr><td align="center">050</td><td align="left"><a href="https://notes.camcad.cn/post/3996e7a6.html">C++核心知识50：类和对象（多态-多态案例二_制作饮品）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=139">12:29</a></td></tr><tr><td align="center">051</td><td align="left"><a href="https://notes.camcad.cn/post/78f7bf55.html">C++核心知识51：类和对象（多态-虚析构和纯虚析构）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=140">17:04</a></td></tr><tr><td align="center">052</td><td align="left"><a href="https://notes.camcad.cn/post/5b82a581.html">C++核心知识52：类和对象（多态-多态案例三_电脑组装）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=141">08:45</a></td></tr></tbody></table><h3 id="第五章：文件操作"><a href="#第五章：文件操作" class="headerlink" title="第五章：文件操作"></a>第五章：文件操作</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">053</td><td align="left"><a href="https://notes.camcad.cn/post/fa9b9dc9.html">C++核心知识53：文件操作（文本文件-写文件）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=143">16:07</a></td></tr><tr><td align="center">054</td><td align="left"><a href="https://notes.camcad.cn/post/49557b6.html">C++核心知识54：文件操作（文本文件-读文件）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=144">13:33</a></td></tr><tr><td align="center">055</td><td align="left"><a href="https://notes.camcad.cn/post/b7952e98.html">C++核心知识55：文件操作（二进制文件-写文件）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=145">07:44</a></td></tr><tr><td align="center">056</td><td align="left"><a href="https://notes.camcad.cn/post/24c85066.html">C++核心知识56：文件操作（二进制文件-读文件）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=146">06:29</a></td></tr></tbody></table><h3 id="第六章：职工管理系统"><a href="#第六章：职工管理系统" class="headerlink" title="第六章：职工管理系统"></a>第六章：职工管理系统</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">057</td><td align="left"><a href="https://notes.camcad.cn/post/953e7e3d.html">职工管理系统01：管理系统需求</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=147">11:16</a></td></tr><tr><td align="center">058</td><td align="left"><a href="https://notes.camcad.cn/post/b6a02408.html">职工管理系统02：创建项目</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=148">03:17</a></td></tr><tr><td align="center">059</td><td align="left"><a href="https://notes.camcad.cn/post/5bcbd485.html">职工管理系统03：创建管理类</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=149">05:42</a></td></tr><tr><td align="center">060</td><td align="left"><a href="https://notes.camcad.cn/post/835de141.html">职工管理系统04：菜单功能</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=150">05:26</a></td></tr><tr><td align="center">061</td><td align="left"><a href="https://notes.camcad.cn/post/b0cffca2.html">职工管理系统05：退出功能</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=151">08:57</a></td></tr><tr><td align="center">062</td><td align="left"><a href="https://notes.camcad.cn/post/b86aec87.html">职工管理系统06：创建职工类</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=152">17:13</a></td></tr><tr><td align="center">063</td><td align="left"><a href="https://notes.camcad.cn/post/b9fc9be6.html">职工管理系统07：创建职工类（创建经理类）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=153">10:33</a></td></tr><tr><td align="center">064</td><td align="left"><a href="https://notes.camcad.cn/post/d918eefa.html">职工管理系统08：创建职工类（创建总裁类）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=153">00:00</a></td></tr><tr><td align="center">065</td><td align="left"><a href="https://notes.camcad.cn/post/617e186a.html">职工管理系统09：测试多态</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=153">00:00</a></td></tr><tr><td align="center">066</td><td align="left"><a href="https://notes.camcad.cn/post/d9135.html">职工管理系统10：添加职工（功能分析）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=154">25:05</a></td></tr><tr><td align="center">070</td><td align="left"><a href="https://notes.camcad.cn/post/e692a636.html">职工管理系统11：文件交互（写文件）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=155">08:15</a></td></tr><tr><td align="center">071</td><td align="left"><a href="https://notes.camcad.cn/post/dd6cfc14.html">职工管理系统12：文件交互（读文件）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=156">07:22</a></td></tr><tr><td align="center">072</td><td align="left"><a href="https://notes.camcad.cn/post/410390e.html">职工管理系统13：显示职工</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=160">08:18</a></td></tr><tr><td align="center">073</td><td align="left"><a href="https://notes.camcad.cn/post/f80d1cb6.html">职工管理系统14：删除职工</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=161">06:54</a></td></tr><tr><td align="center">074</td><td align="left"><a href="https://notes.camcad.cn/post/90ed886a.html">职工管理系统15：修改职工</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=163">13:11</a></td></tr><tr><td align="center">075</td><td align="left"><a href="https://notes.camcad.cn/post/97bcc53.html">职工管理系统16：查找职工</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=164">14:15</a></td></tr><tr><td align="center">076</td><td align="left"><a href="https://notes.camcad.cn/post/960c29f6.html">职工管理系统17：排序</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=165">14:17</a></td></tr><tr><td align="center">077</td><td align="left"><a href="https://notes.camcad.cn/post/c543387c.html">职工管理系统18：清空文件</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=166">07:50</a></td></tr></tbody></table><h2 id="视频转载-bilibili博主《黑马程序员》"><a href="#视频转载-bilibili博主《黑马程序员》" class="headerlink" title="视频转载 bilibili博主《黑马程序员》"></a>视频转载 bilibili博主《<a href="https://space.bilibili.com/37974444?spm_id_from=333.788.b_765f7570696e666f.2">黑马程序员</a>》</h2>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统18：清空文件</title>
      <link href="/post/c543387c.html"/>
      <url>/post/c543387c.html</url>
      
        <content type="html"><![CDATA[<h1 id="15、清空文件"><a href="#15、清空文件" class="headerlink" title="15、清空文件"></a>15、清空文件</h1><p><strong>功能描述：</strong>将文件中记录数据清空。</p><h2 id="15-1-清空函数声明"><a href="#15-1-清空函数声明" class="headerlink" title="15.1 清空函数声明"></a>15.1 清空函数声明</h2><p>在workerManager.h中添加成员函数<code>void clean_File( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clean_File</span>()</span>;</span><br></pre></td></tr></table></figure><h2 id="15-2-清空函数实现"><a href="#15-2-清空函数实现" class="headerlink" title="15.2 清空函数实现"></a>15.2 清空函数实现</h2><p>在workerManager.cpp中实现成员函数<code>void clean_File( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空文件</span></span><br><span class="line"><span class="keyword">void</span> workerManager::clean_File()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;确认清空？&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1、确认清空&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2、返回退出&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//打开模式 ios::trunc 如果存在删除文件并重新创建</span></span><br><span class="line">            <span class="function">ofstream <span class="title">ofs</span>(<span class="params">FILENAME, ios::trunc</span>)</span>;     <span class="comment">//删除文件后重新创建</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//关闭文本</span></span><br><span class="line">            ofs.close();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray !=NULL)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//删除堆区每个职工的对象</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Empnum; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray[i]!=NULL)</span><br><span class="line">                    &#123;</span><br><span class="line">                        delete <span class="keyword">this</span>-&gt;m_Emparray[i];</span><br><span class="line">                        <span class="keyword">this</span>-&gt;m_Emparray[i] = NULL;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//删除堆区数据指针</span></span><br><span class="line">                delete[] <span class="keyword">this</span>-&gt;m_Emparray;</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Emparray = NULL;</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Empnum = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;清空成功!&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="15-3-测试清空文件"><a href="#15-3-测试清空文件" class="headerlink" title="15.3 测试清空文件"></a>15.3 测试清空文件</h2><p>在main函数分支7选项中，调用清空文件接口<br><img src="http://image.camcad.cn/2020/06/2020061602151243.jpg"> 测试1-当文件不存在或记录为空时<br><img src="http://image.camcad.cn/2020/06/2020061602163578.jpg"> 测试2-当清空数据库数据时<br><img src="http://image.camcad.cn/2020/06/2020061602184696.jpg"> 数据库文件为空！<br><img src="http://image.camcad.cn/2020/06/202006160219337.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统17：排序</title>
      <link href="/post/960c29f6.html"/>
      <url>/post/960c29f6.html</url>
      
        <content type="html"><![CDATA[<h1 id="14、排序"><a href="#14、排序" class="headerlink" title="14、排序"></a>14、排序</h1><p><strong>功能描述：</strong>按照职工编号进行排序，排序的顺序由用户指定。</p><h2 id="14-1-排序函数声明"><a href="#14-1-排序函数声明" class="headerlink" title="14.1 排序函数声明"></a>14.1 排序函数声明</h2><p>在workerManager.h中添加成员函数<code>void sort_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编号排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_Emp</span>()</span>;</span><br></pre></td></tr></table></figure><h2 id="14-2-排序函数实现"><a href="#14-2-排序函数实现" class="headerlink" title="14.2 排序函数实现"></a>14.2 排序函数实现</h2><p>在workerManager.cpp中实现成员函数<code>void sort_Emp( )&#39;</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//排序</span></span><br><span class="line"><span class="keyword">void</span> workerManager::sort_Emp()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入排序选项模式：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1、升序排序&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2、降序排序&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Empnum; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//最小值 或 最大值</span></span><br><span class="line">            <span class="built_in">int</span> minormax = i;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> j = i+<span class="number">1</span>; j &lt; <span class="keyword">this</span>-&gt;m_Empnum; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">select</span>==<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray[minormax]-&gt;m_Id &gt; <span class="keyword">this</span>-&gt;m_Emparray[j]-&gt;m_Id)</span><br><span class="line">                    &#123;</span><br><span class="line">                        minormax = j;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray[minormax]-&gt;m_Id &lt; <span class="keyword">this</span>-&gt;m_Emparray[j]-&gt;m_Id)</span><br><span class="line">                    &#123;</span><br><span class="line">                        minormax = j;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i !=minormax)</span><br><span class="line">            &#123;</span><br><span class="line">                Worker *tmep = <span class="keyword">this</span>-&gt;m_Emparray[i];</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Emparray[i] = <span class="keyword">this</span>-&gt;m_Emparray[minormax];</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Emparray[minormax] = tmep;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;排序更改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//保存数据</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;save();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//显示数据</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;show_Emp();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-3-测试排序功能"><a href="#14-3-测试排序功能" class="headerlink" title="14.3 测试排序功能"></a>14.3 测试排序功能</h2><p>在main函数分支6选项中，调用排序职工接口：<br><img src="http://image.camcad.cn/2020/06/2020061514293666-524x1024.jpg"> 测试1-文件不存在或记录为空<br><img src="http://image.camcad.cn/2020/06/2020061514322415-1024x615.jpg"> 测试2-升序排序<br><img src="http://image.camcad.cn/2020/06/2020061514350265-1024x667.jpg"> 测试3-降序排序<br><img src="http://image.camcad.cn/2020/06/2020061514361573-1024x673.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统16：查找职工</title>
      <link href="/post/97bcc53.html"/>
      <url>/post/97bcc53.html</url>
      
        <content type="html"><![CDATA[<h1 id="13、查找职工"><a href="#13、查找职工" class="headerlink" title="13、查找职工"></a>13、查找职工</h1><p><strong>功能描述：</strong>提供两种查找职工方式，一种按照职工编号，另一种按照职工姓名。</p><h2 id="13-1-查找职工函数声明"><a href="#13-1-查找职工函数声明" class="headerlink" title="13.1 查找职工函数声明"></a>13.1 查找职工函数声明</h2><p>在workerManager.h中添加成员函数：<code>void find_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找职工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find_Emp</span>()</span>;</span><br></pre></td></tr></table></figure><h2 id="13-2-查找职工函数实现"><a href="#13-2-查找职工函数实现" class="headerlink" title="13.2 查找职工函数实现"></a>13.2 查找职工函数实现</h2><p>在workerManager.cpp中实现成员函数<code>void find_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找职工</span></span><br><span class="line"><span class="keyword">void</span> workerManager::find_Emp()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在或者记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">select</span> = <span class="number">0</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请选择查找模式：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1、职工编号查找&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2、职工姓名查找&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; <span class="keyword">select</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//职工编号查找</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">select</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> id = <span class="number">0</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入需要查找的职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> ret = <span class="keyword">this</span>-&gt;isExist(id);</span><br><span class="line">            <span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;查找完成，结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Emparray[ret]-&gt;showInfo();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;输入的职工编号有误或不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//职工编号姓名</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">select</span>==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> name;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入需要查找的职工姓名&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//标志姓名是否存在</span></span><br><span class="line">            <span class="built_in">bool</span> isName = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Empnum; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray[i]-&gt;m_Name == name)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;查找到职工编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Emparray[i]-&gt;m_Id &lt;&lt; <span class="string">&quot; 信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">this</span>-&gt;m_Emparray[i]-&gt;showInfo();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//姓名存在</span></span><br><span class="line">                    isName = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!isName)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;查找的职工姓名有误或不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入的选项有误或不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-3-测试查找职工"><a href="#13-3-测试查找职工" class="headerlink" title="13.3 测试查找职工"></a>13.3 测试查找职工</h2><p>在main函数分支5选项中，调用查找职工接口：<br><img src="http://image.camcad.cn/2020/06/2020061509372916-768x1024.jpg"> 测试1-按照职工编号查找（不存在）<br><img src="http://image.camcad.cn/2020/06/2020061509395615.jpg"><br>测试2-按照职工编号查找（存在）<br><img src="http://image.camcad.cn/2020/06/2020061509423267-1024x703.jpg"> 测试3-按照职工姓名查找（不存在）<br><img src="http://image.camcad.cn/2020/06/2020061509442760.jpg"> 测试4-按照职工姓名查找（存在）<br><img src="http://image.camcad.cn/2020/06/2020061509453398-1024x670.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统15：修改职工</title>
      <link href="/post/90ed886a.html"/>
      <url>/post/90ed886a.html</url>
      
        <content type="html"><![CDATA[<h1 id="12、修改职工"><a href="#12、修改职工" class="headerlink" title="12、修改职工"></a>12、修改职工</h1><p><strong>功能描述</strong>能够按照职工的编号对职工信息进行修改并保存。</p><h2 id="12-1-修改职工函数声明"><a href="#12-1-修改职工函数声明" class="headerlink" title="12.1 修改职工函数声明"></a>12.1 修改职工函数声明</h2><p>在workerManager.h中添加成员函数<code>void mod_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加职工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mod_Emp</span>()</span>;</span><br></pre></td></tr></table></figure><h2 id="12-2-修改职工函数实现"><a href="#12-2-修改职工函数实现" class="headerlink" title="12.2 修改职工函数实现"></a>12.2 修改职工函数实现</h2><p>在workerManager.cpp中实现成员函数<code>void mod_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加职工</span></span><br><span class="line"><span class="keyword">void</span> workerManager::mod_Emp()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在或者记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> id;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入需要修改的职工id号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line">        <span class="built_in">int</span> ret = <span class="keyword">this</span>-&gt;isExist(id);</span><br><span class="line">        <span class="keyword">if</span> (ret==<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入的id有误或不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> new_id = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">string</span> new_name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="built_in">int</span> new_deptId = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            delete <span class="keyword">this</span>-&gt;m_Emparray[ret];</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;查到：&quot;</span> &lt;&lt; ret &lt;&lt; <span class="string">&quot;号职工！\n请输入职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cin &gt;&gt; new_id;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入职工姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cin &gt;&gt; new_name;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入职工岗位,对应以下选择&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;1、员工\n2、经理\n3、总裁&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cin &gt;&gt; new_deptId;</span><br><span class="line"></span><br><span class="line">            Worker *worker = NULL;</span><br><span class="line">            <span class="keyword">switch</span> (new_deptId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                worker = <span class="keyword">new</span> Employee(new_id, new_name, new_deptId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                worker = <span class="keyword">new</span> Manager(new_id, new_name, new_deptId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                worker = <span class="keyword">new</span> Boss(new_id, new_name, new_deptId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//数组数据更新</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;m_Emparray[ret] = worker;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//保存至文件</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统14：删除职工</title>
      <link href="/post/f80d1cb6.html"/>
      <url>/post/f80d1cb6.html</url>
      
        <content type="html"><![CDATA[<h1 id="11、删除职工"><a href="#11、删除职工" class="headerlink" title="11、删除职工"></a>11、删除职工</h1><p><strong>功能描述：</strong>按照职工的编号进行删除职工操作。</p><h2 id="11-1-删除职工函数声明"><a href="#11-1-删除职工函数声明" class="headerlink" title="11.1 删除职工函数声明"></a>11.1 删除职工函数声明</h2><p>在workerManager.h中添加成员函数<code>void del_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除职工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del_Emp</span>()</span>;</span><br></pre></td></tr></table></figure><h2 id="11-2-职工是否存在函数声明"><a href="#11-2-职工是否存在函数声明" class="headerlink" title="11.2 职工是否存在函数声明"></a>11.2 职工是否存在函数声明</h2><p>很多功能都需要用到根据职工是否存在再来进行操作如：删除职工、修改职工、查找职工。 因此添加该公告函数，以便后续调用。 在workerManager.h中添加成员函数<code>int isExist(int id);</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按照职工编号判断职工是否存在，若存在返回职工所在数据中位置，不存在返回-1；</span></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">isExist</span>(<span class="params"><span class="built_in">int</span> id</span>)</span>;</span><br></pre></td></tr></table></figure><h2 id="11-3-职工是否存在函数实现"><a href="#11-3-职工是否存在函数实现" class="headerlink" title="11.3 职工是否存在函数实现"></a>11.3 职工是否存在函数实现</h2><p>在workerManager.cpp中实现成员函数：<code>int isExist(int id);</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按照职工编号判断职工是否存在，若存在返回职工所在数据中位置，不存在返回-1；</span></span><br><span class="line"><span class="built_in">int</span> workerManager::isExist(<span class="built_in">int</span> id)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Empnum; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Emparray[i]-&gt;m_Id == id)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-4-删除职工函数实现"><a href="#11-4-删除职工函数实现" class="headerlink" title="11.4 删除职工函数实现"></a>11.4 删除职工函数实现</h2><p>在workerManager.cpp中实现成员函数：<code>voic del_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除职工</span></span><br><span class="line"><span class="keyword">void</span> workerManager::del_Emp()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件不存在或者数据为空&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> id = <span class="number">0</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入需要删除的id号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> ret = <span class="keyword">this</span>-&gt;isExist(id);</span><br><span class="line">        <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入的id有误或者不存在！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = ret; i &lt; <span class="keyword">this</span>-&gt;m_Empnum - <span class="number">1</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//数据前移</span></span><br><span class="line">                <span class="keyword">this</span>-&gt;m_Emparray[i] = <span class="keyword">this</span>-&gt;m_Emparray[i + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//更新数组中记录人员个数</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;m_Empnum--;    </span><br><span class="line"></span><br><span class="line">            <span class="comment">//保存数据</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;save();</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-5-测试删除职工"><a href="#11-5-测试删除职工" class="headerlink" title="11.5 测试删除职工"></a>11.5 测试删除职工</h2><p>在main函数分支3选项中，调用删除职工接口 <img src="http://image.camcad.cn/2020/06/2020061502474579-797x1024.jpg"> 测试1-删除不存在的职工情况 <img src="http://image.camcad.cn/2020/06/2020061502492790.jpg"> 测试2-删除存在的职工情况 <img src="http://image.camcad.cn/2020/06/2020061502510463-1024x648.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统13：显示职工</title>
      <link href="/post/410390e.html"/>
      <url>/post/410390e.html</url>
      
        <content type="html"><![CDATA[<h1 id="10、显示职工"><a href="#10、显示职工" class="headerlink" title="10、显示职工"></a>10、显示职工</h1><p><strong>功能描述：</strong>显示当前所有职工信息。</p><h2 id="10-1-显示职工函数声明"><a href="#10-1-显示职工函数声明" class="headerlink" title="10.1 显示职工函数声明"></a>10.1 显示职工函数声明</h2><p>在workerManager.h中添加成员函数<code>void show_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示职工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_Emp</span>()</span>;</span><br></pre></td></tr></table></figure><h3 id="10-2-显示职工函数实现"><a href="#10-2-显示职工函数实现" class="headerlink" title="10.2 显示职工函数实现"></a>10.2 显示职工函数实现</h3><p>在workerManager.cpp中实现成员函数<code>void show_Emp( );</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示职工</span></span><br><span class="line"><span class="keyword">void</span> workerManager::show_Emp()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;数据库文件不存在或者记录为空&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Empnum; i++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>-&gt;m_Emparray[i]-&gt;showInfo();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-3-测试显示职工"><a href="#10-3-测试显示职工" class="headerlink" title="10.3 测试显示职工"></a>10.3 测试显示职工</h3><p>在main函数分支2选项中，调用显示职工接口<br><img src="http://image.camcad.cn/2020/06/2020061409565759-879x1024.jpg"> 测试分别测试文件为空和文件不为空是两种情况 测试效果： 测试1-文件不存在或者空情况 <img src="http://image.camcad.cn/2020/06/202006140952389-1024x646.jpg"> 测试2-文件存在且有记录情况 <img src="http://image.camcad.cn/2020/06/202006140954382-1024x420.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统12：文件交互（读文件）</title>
      <link href="/post/dd6cfc14.html"/>
      <url>/post/dd6cfc14.html</url>
      
        <content type="html"><![CDATA[<h1 id="9、文件交互-读文件"><a href="#9、文件交互-读文件" class="headerlink" title="9、文件交互-读文件"></a>9、文件交互-读文件</h1><p><strong>功能描述：</strong>将文件中的内容读取到程序中 虽然我们实现了添加职工后保存到文件的操作，但是每次开始运行程序，并没有将文件中数据读取到程序中而我们的程序功能中还有清空文件的需求 <strong>因此构造函数初始化数据的情况分为三种：</strong></p><ul><li>1.第一次使用，文件未创建</li><li>2.文件存在，但是数据被用户清空</li><li>3.文件存在，并且保存职工的所有数据</li></ul><h2 id="9-1-文件未创建"><a href="#9-1-文件未创建" class="headerlink" title="9.1 文件未创建"></a>9.1 文件未创建</h2><p>在workerManager.h中添加新的成员属性<code>m_FileIsEmpty标志文件是否为空</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//标志文件是否为空</span></span><br><span class="line"><span class="type">bool</span> m_FileIsEmpty;</span><br></pre></td></tr></table></figure><p>修改WorkerManager.cpp中构造函数代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">workerManager::workerManager()</span><br><span class="line">&#123;</span><br><span class="line">    ifstream ios;</span><br><span class="line"></span><br><span class="line">    ios.open(FILENAME, ios::in);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//文件不存在情况</span></span><br><span class="line">    <span class="keyword">if</span> (!ios.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;!!!!数据库文件不存在!!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;   <span class="comment">//测试输出</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        this-&gt;m_Empnum = <span class="number">0</span>;                  <span class="comment">//初始化人数</span></span><br><span class="line">        this-&gt;m_Emparray = <span class="literal">NULL</span>;         <span class="comment">//员工数组的指针</span></span><br><span class="line">        this-&gt;m_FileIsEmpty = <span class="literal">true</span>;          <span class="comment">//初始化文件为空标志</span></span><br><span class="line">        ios.close();                        <span class="comment">//关闭文件</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ios.close();                        <span class="comment">//关闭文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="删除文件后，测试文件不存在时初始化数据功能。"><a href="#删除文件后，测试文件不存在时初始化数据功能。" class="headerlink" title="删除文件后，测试文件不存在时初始化数据功能。"></a>删除文件后，测试文件不存在时初始化数据功能。</h4><h2 id="9-2-文件存在且数据为空"><a href="#9-2-文件存在且数据为空" class="headerlink" title="9.2 文件存在且数据为空"></a>9.2 文件存在且数据为空</h2><p>在workerManager.cpp中的构造函数追加代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.文件存在，数据为空</span></span><br><span class="line"><span class="type">char</span> ch;    <span class="comment">//定义字符</span></span><br><span class="line">ifs &gt;&gt; ch;    <span class="comment">//右移读取一个字符</span></span><br><span class="line"><span class="keyword">if</span> (ifs.eof())  <span class="comment">//如果文件没有记录  </span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;!!!!文件为空!!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;   <span class="comment">//测试输出</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    this-&gt;m_Empnum = <span class="number">0</span>;                  <span class="comment">//初始化人数</span></span><br><span class="line">    this-&gt;m_Emparray = <span class="literal">NULL</span>;         <span class="comment">//员工数组的指针</span></span><br><span class="line">    this-&gt;m_FileIsEmpty = <span class="literal">true</span>;          <span class="comment">//初始化文件为空标志</span></span><br><span class="line">    ifs.close();                        <span class="comment">//关闭文件</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>追加代码位置如图： <img src="http://image.camcad.cn/2020/06/2020061315311494-1024x825.jpg"> 将文件创建后清空文件内容，并测试该情况下初始化功能。</p><p>我们发现文件不存在或者为空m_FileIsEmpty判断文件是否为空的标志都为真，那何时为假？ 成功添加职工后，应该更改文件下为空的标志 在<code>void WorkerManager::ADD_Emp( )</code>成员函数中添加</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新职工不为空标志</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2020/06/2020061315371694.jpg"></p><h2 id="9-3-文件存在，并且保存职工的所有数据"><a href="#9-3-文件存在，并且保存职工的所有数据" class="headerlink" title="9.3 文件存在，并且保存职工的所有数据"></a>9.3 文件存在，并且保存职工的所有数据</h2><h3 id="9-3-1-获取记录的职工人数"><a href="#9-3-1-获取记录的职工人数" class="headerlink" title="9.3.1 获取记录的职工人数"></a>9.3.1 获取记录的职工人数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//总计人数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">get_EmpNum</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>在workerManager.cpp中实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//总计人数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">workerManager::get_EmpNum</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.open(FILENAME, ios::in);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="type">int</span> deptId;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; deptId)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//统计人数变量</span></span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在workerManager.cpp构造函数中继续追加代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3.文件存在，并且记录数据</span></span><br><span class="line"><span class="type">int</span> num = this-&gt;get_EmpNum();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工人数为：&quot;</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span>;    <span class="comment">//测试代码</span></span><br><span class="line">this-&gt;m_Empnum = num;    <span class="comment">//更新成员属性</span></span><br></pre></td></tr></table></figure><p>手动添加一些职工数据，测试获取职工数量函数<br><img src="http://image.camcad.cn/2020/06/202006131613565.jpg"><br><img src="http://image.camcad.cn/2020/06/2020061316153426-1024x565.jpg"></p><h3 id="9-3-2-初始化数组"><a href="#9-3-2-初始化数组" class="headerlink" title="9.3.2 初始化数组"></a>9.3.2 初始化数组</h3><p>根据职工的数据，初始化workerManager中的Worker**m_EmpArray指针。 在WorkerManager.h中添加函数<code>void init_Emp( );</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化数据库</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">init_Emp</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>在WorkerManager.cpp中实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化数据库</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">workerManager::init_Emp</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.open(FILENAME, ios::in);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="type">int</span> deptId;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; deptId)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        Worker* worker = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (deptId==<span class="number">1</span>)      <span class="comment">//员工</span></span><br><span class="line">        &#123;</span><br><span class="line">            worker = new Employee(id, name, deptId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (deptId==<span class="number">2</span>) <span class="comment">//经理</span></span><br><span class="line">        &#123;</span><br><span class="line">            worker = new Manager(id, name, deptId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (deptId==<span class="number">3</span>) <span class="comment">//总裁</span></span><br><span class="line">        &#123;</span><br><span class="line">            worker = new Boss(id, name, deptId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化数据</span></span><br><span class="line">        this-&gt;m_Emparray[index] = worker;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在workerManager.cpp构造函数中追加代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开辟空间</span></span><br><span class="line">this-&gt;m_Emparray = new Worker*[this-&gt;m_Empnum];</span><br><span class="line"></span><br><span class="line"><span class="comment">//将文件中的数据，存到数组中</span></span><br><span class="line">this-&gt;init_Emp();</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; this-&gt;m_Empnum; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_Id &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">        &lt;&lt; <span class="string">&quot;职工姓名：&quot;</span> &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_Name &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">        &lt;&lt; <span class="string">&quot;所在部门：&quot;</span> &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_DeptId &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序，测试从文件中获取的数据<br><img src="http://image.camcad.cn/2020/06/2020061407561119-1024x578.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统11：文件交互（写文件）</title>
      <link href="/post/e692a636.html"/>
      <url>/post/e692a636.html</url>
      
        <content type="html"><![CDATA[<h1 id="8、文件交互-写文件"><a href="#8、文件交互-写文件" class="headerlink" title="8、文件交互-写文件"></a>8、文件交互-写文件</h1><p><strong>功能描述：</strong>对文件进行读写 在上一个添加功能中，我们只是将所有的数据添加到了内存中，一旦程序结束就无法保存了。 因此文件管理类中需要一个与文件进行交互的功能，对于文件进行读写操作。</p><h2 id="8-1设定文件路径"><a href="#8-1设定文件路径" class="headerlink" title="8.1设定文件路径"></a>8.1设定文件路径</h2><p>首先我们将文件路径，在workerManager.h中添加宏常量，并且包含头文件fstream。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILENAME <span class="string">&quot;empFile.dat&quot;</span></span></span><br></pre></td></tr></table></figure><h2 id="8-2-成员函数声明"><a href="#8-2-成员函数声明" class="headerlink" title="8.2 成员函数声明"></a>8.2 成员函数声明</h2><p>在workerManager.h中类里添加成员函数<code>void save( )</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">save</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><h2 id="8-3-保存文件功能实现"><a href="#8-3-保存文件功能实现" class="headerlink" title="8.3 保存文件功能实现"></a>8.3 保存文件功能实现</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">workerManager::save</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.增加头文件</span></span><br><span class="line">    <span class="comment">//2.创建流文件</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.创建文本--写文件</span></span><br><span class="line">    ofs.open(FILENAME, ios::out);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.输入数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; this-&gt;m_Empnum; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ofs &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_Id &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">            &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_Name &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">            &lt;&lt; this-&gt;m_Emparray[i]-&gt;m_DeptId &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.关闭文本</span></span><br><span class="line">    ofs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-4-保存文件功能测试"><a href="#8-4-保存文件功能测试" class="headerlink" title="8.4 保存文件功能测试"></a>8.4 保存文件功能测试</h2><p>在添加职工功能中添加成功后添加保存数据函数<code>void save( )</code><br><img src="http://image.camcad.cn/2020/06/2020061307024011.jpg"> </p><p>再次运行代码，添加职工 <img src="http://image.camcad.cn/2020/06/2020061307063256-853x1024.jpg"> </p><p>同级目录下多出文件，并且保存了添加的信息 <img src="http://image.camcad.cn/2020/06/2020061307093886-1024x704.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统10：添加职工（功能分析）</title>
      <link href="/post/d9135.html"/>
      <url>/post/d9135.html</url>
      
        <content type="html"><![CDATA[<h1 id="7、添加职工"><a href="#7、添加职工" class="headerlink" title="7、添加职工"></a>7、添加职工</h1><p><strong>功能描述：</strong>批量添加职工，并且保存到文件中</p><h2 id="7-1-功能分析"><a href="#7-1-功能分析" class="headerlink" title="7.1 功能分析"></a>7.1 功能分析</h2><p><strong>分析：</strong> 用户在批量创建时，可能会创建不同种类的职工。 如果想将所有不同种类的员工都放入一个数组中，可以将所有员工的指针维护到一个数组里。 如果想想在程序中维护这个不定长度的数组，可以将数组创建到堆区，并利用Worker＊＊的指针维护。<br><img src="http://image.camcad.cn/2020/06/2020061303183239-1024x335.jpg"></p><h2 id="7-2-功能实现"><a href="#7-2-功能实现" class="headerlink" title="7.2 功能实现"></a>7.2 功能实现</h2><p>在WorkerManager.h头文件中添加中成员属性代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//记录文件中的人数个数</span></span><br><span class="line"><span class="type">int</span> m_Empnum;</span><br><span class="line"></span><br><span class="line"><span class="comment">//员工数组的指针</span></span><br><span class="line">Worker **m_Emparray;</span><br></pre></td></tr></table></figure><p>在workerManager.cpp构造函数中初始化属性：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">workerManager::workerManager()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化人数</span></span><br><span class="line">    this-&gt;m_Empnum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//员工数组的指针</span></span><br><span class="line">    this-&gt;m_Emparray = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在workerManager.h中添加成员函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加职工</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add_Emp</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>workerManager.cpp中实现该函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加职工</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">workerManager::add_Emp</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入需要增加的人员数量&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="type">int</span> addnum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; addnum;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (addnum &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//计算新空间大小</span></span><br><span class="line">        <span class="type">int</span> newsize = addnum + this-&gt;m_Empnum;       <span class="comment">//新空间人数=原来记录人数+新增人数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//开辟新空间</span></span><br><span class="line">        Worker **newSpace = new Worker*[newsize];   </span><br><span class="line"></span><br><span class="line">        <span class="comment">//将原空间下的内容放到新空间下</span></span><br><span class="line">        <span class="keyword">if</span> (this-&gt;m_Emparray != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; this-&gt;m_Empnum; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                newSpace[i] = this-&gt;m_Emparray[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输入新数据</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; addnum; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> id;         <span class="comment">//职工编号</span></span><br><span class="line">            <span class="built_in">string</span> name;    <span class="comment">//职工姓名</span></span><br><span class="line">            <span class="type">int</span> deptId;     <span class="comment">//部门选择</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工编号&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工姓名&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工岗位,对应以下选择&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1、员工\n2、经理\n3、总裁&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; deptId;</span><br><span class="line"></span><br><span class="line">            Worker *worker = <span class="literal">NULL</span>;</span><br><span class="line">            <span class="keyword">switch</span> (deptId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                worker = new Employee(id, name, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                worker = new Manager(id, name, <span class="number">2</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                worker = new Boss(id, name, <span class="number">3</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//将创建职工职责，保存到数组中</span></span><br><span class="line">            newSpace[this-&gt;m_Empnum + i] = worker;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放原有空间</span></span><br><span class="line">        delete[] this-&gt;m_Emparray;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//更改新空间的指向</span></span><br><span class="line">        this-&gt;m_Emparray = newSpace;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//更新新的职工人数</span></span><br><span class="line">        this-&gt;m_Empnum = newsize;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//提示信息</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;成功添加&quot;</span> &lt;&lt; addnum &lt;&lt; <span class="string">&quot;名新职工&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入的数据有误，请重新输入&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在workerManager.cpp的析构函数中，释放堆区数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">workerManager::~workerManager()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (this-&gt;m_Emparray !=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delete[] this-&gt;m_Emparray;</span><br><span class="line">        this-&gt;m_Emparray = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统09：测试多态</title>
      <link href="/post/617e186a.html"/>
      <url>/post/617e186a.html</url>
      
        <content type="html"><![CDATA[<h1 id="6、创建职工类"><a href="#6、创建职工类" class="headerlink" title="6、创建职工类"></a>6、创建职工类</h1><h2 id="6-5-测试多态"><a href="#6-5-测试多态" class="headerlink" title="6.5 测试多态"></a>6.5 测试多态</h2><p>在职工管理系统.cpp中添加测试函数，并且运行能够产生多态。</p><h3 id="测试代码如下："><a href="#测试代码如下：" class="headerlink" title="测试代码如下："></a>测试代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;employee.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;boss.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//测试代码</span></span><br><span class="line">    Worker *w = <span class="literal">NULL</span>;</span><br><span class="line">    w = new Employee(<span class="number">1</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    w-&gt;showInfo();</span><br><span class="line">    delete w;</span><br><span class="line"></span><br><span class="line">    w = new Manager(<span class="number">2</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">2</span>);</span><br><span class="line">    w-&gt;showInfo();</span><br><span class="line">    delete w;</span><br><span class="line"></span><br><span class="line">    w = new Boss(<span class="number">3</span>, <span class="string">&quot;王五&quot;</span>, <span class="number">3</span>);</span><br><span class="line">    w-&gt;showInfo();</span><br><span class="line">    delete w;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//请按任意键继续...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编译执行结果如下："><a href="#编译执行结果如下：" class="headerlink" title="编译执行结果如下："></a>编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020061223230993-1024x275.jpg"> 测试成功后，测试代码可以注释保留，或者选择删除。</p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统08：创建职工类（创建总裁类）</title>
      <link href="/post/d918eefa.html"/>
      <url>/post/d918eefa.html</url>
      
        <content type="html"><![CDATA[<h1 id="6、创建职工类"><a href="#6、创建职工类" class="headerlink" title="6、创建职工类"></a>6、创建职工类</h1><h2 id="6-4-创建总裁类"><a href="#6-4-创建总裁类" class="headerlink" title="6.4 创建总裁类"></a>6.4 创建总裁类</h2><p>老板类继承职工抽象类，并重写父类中纯虚函数，和普通员工类似。 在头文件和源文件的文件夹下分别创建boss.h和boss.cpp文件。</p><h3 id="boss-h中代码如下："><a href="#boss-h中代码如下：" class="headerlink" title="boss.h中代码如下："></a>boss.h中代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//总裁</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boss</span> :</span>public Worker</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    Boss(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> eptId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//个人信息描述</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">showInfo</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取岗位名称</span></span><br><span class="line">    virtual <span class="built_in">string</span> <span class="title function_">getDeptName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="boss-cpp中代码如下："><a href="#boss-cpp中代码如下：" class="headerlink" title="boss.cpp中代码如下："></a>boss.cpp中代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;boss.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">Boss::Boss(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> dptId)</span><br><span class="line">&#123;</span><br><span class="line">    this-&gt;m_Id = id;</span><br><span class="line">    this-&gt;m_Name = name;</span><br><span class="line">    this-&gt;m_DeptId = dptId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//个人信息描述</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Boss::showInfo</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; m_Id</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; m_Name</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位：&quot;</span> &lt;&lt; this-&gt;getDeptName()</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位职责：管理公司所有事务&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="built_in">string</span> <span class="title function_">Boss::getDeptName</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;总裁&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统07：创建职工类（创建经理类）</title>
      <link href="/post/b9fc9be6.html"/>
      <url>/post/b9fc9be6.html</url>
      
        <content type="html"><![CDATA[<h1 id="6、创建职工类"><a href="#6、创建职工类" class="headerlink" title="6、创建职工类"></a>6、创建职工类</h1><h2 id="6-3-创建经理类"><a href="#6-3-创建经理类" class="headerlink" title="6.3 创建经理类"></a>6.3 创建经理类</h2><p>经理类继承职工抽象类，并重写父类中纯虚函数，和普通员工类似。 在头文件和源文件的文件夹下分别创建manager.h和manager.cpp文件</p><h3 id="manager-h中代码如下："><a href="#manager-h中代码如下：" class="headerlink" title="manager.h中代码如下："></a>manager.h中代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//经理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Manager</span>:</span>public Worker</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    Manager(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> eptId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//个人信息描述</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">showInfo</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取岗位名称</span></span><br><span class="line">    virtual <span class="built_in">string</span> <span class="title function_">getDeptName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="manager-cpp中代码如下："><a href="#manager-cpp中代码如下：" class="headerlink" title="manager.cpp中代码如下："></a>manager.cpp中代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">Manager::Manager(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> dptId)</span><br><span class="line">&#123;</span><br><span class="line">    this-&gt;m_Id = id;</span><br><span class="line">    this-&gt;m_Name = name;</span><br><span class="line">    this-&gt;m_DeptId = dptId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//个人信息描述</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Manager::showInfo</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; m_Id</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; m_Name</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位：&quot;</span> &lt;&lt; this-&gt;getDeptName()</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位职责：完成老板交给的任务，并下发任务给员工&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="built_in">string</span> <span class="title function_">Manager::getDeptName</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;经理&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统06：创建职工类</title>
      <link href="/post/b86aec87.html"/>
      <url>/post/b86aec87.html</url>
      
        <content type="html"><![CDATA[<h1 id="6、创建职工类"><a href="#6、创建职工类" class="headerlink" title="6、创建职工类"></a>6、创建职工类</h1><h2 id="6-1-创建职工抽象类"><a href="#6-1-创建职工抽象类" class="headerlink" title="6.1 创建职工抽象类"></a>6.1 创建职工抽象类</h2><p>**职工的分类为:**普通员工、经理、老板 将三种职工抽象到一个类（worker）中，利用多态管理不同职工种类。 职工的属性为：职工编号、职工姓名、职工所在部门编号。 职工的行为：岗位职责信息描述，获取岗位名称</p><h3 id="头文件文件夹下创建文件worker-h-文件并且添加如下代码："><a href="#头文件文件夹下创建文件worker-h-文件并且添加如下代码：" class="headerlink" title="头文件文件夹下创建文件worker.h 文件并且添加如下代码："></a>头文件文件夹下创建文件worker.h 文件并且添加如下代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//职工抽象基类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//个人信息描述</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">showInfo</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取岗位名称</span></span><br><span class="line">    virtual <span class="built_in">string</span> <span class="title function_">getDeptName</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//职工编号</span></span><br><span class="line">    <span class="type">int</span> m_Id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//职工姓名</span></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//职工所在部门名称编号</span></span><br><span class="line">    <span class="type">int</span> m_DeptId;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="6-2创建普通员工类"><a href="#6-2创建普通员工类" class="headerlink" title="6.2创建普通员工类"></a>6.2创建普通员工类</h2><p>普通员工类继承职工抽象类，并重写父类中纯虚函数，在头文件和源文件的文件夹下分别创建employee.h和employee.cpp文件</p><h3 id="employee-h中代码如下"><a href="#employee-h中代码如下" class="headerlink" title="employee.h中代码如下"></a>employee.h中代码如下</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//员工类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span> :</span>public Worker</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    Employee(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> eptId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//个人信息描述</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">showInfo</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取岗位名称</span></span><br><span class="line">    virtual <span class="built_in">string</span> <span class="title function_">getDeptName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="employee-cpp中代码如下"><a href="#employee-cpp中代码如下" class="headerlink" title="employee.cpp中代码如下"></a>employee.cpp中代码如下</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;employee.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">Employee::Employee(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> dptId)</span><br><span class="line">&#123;</span><br><span class="line">    this-&gt;m_Id = id;</span><br><span class="line">    this-&gt;m_Name = name;</span><br><span class="line">    this-&gt;m_DeptId = dptId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//个人信息描述</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Employee::showInfo</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; m_Id</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; m_Name</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位：&quot;</span> &lt;&lt; this-&gt;getDeptName() </span><br><span class="line">        &lt;&lt; <span class="string">&quot;\t岗位职责：完成经理交给的任务&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="built_in">string</span> <span class="title function_">Employee::getDeptName</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;员工&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统05：退出功能</title>
      <link href="/post/b0cffca2.html"/>
      <url>/post/b0cffca2.html</url>
      
        <content type="html"><![CDATA[<h1 id="5、退出功能"><a href="#5、退出功能" class="headerlink" title="5、退出功能"></a>5、退出功能</h1><h2 id="5-1-提供功能接口"><a href="#5-1-提供功能接口" class="headerlink" title="5.1 提供功能接口"></a>5.1 提供功能接口</h2><p>在main函数中提供分支选择，提供每个功能接口</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//实例化对象</span></span><br><span class="line">    workerManager wm;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> choice = <span class="number">0</span>;     <span class="comment">//用户选择初始化</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        wm.show_Menu();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入你的选择&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">switch</span> (choice)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:     <span class="comment">//退出系统</span></span><br><span class="line">            wm.exitSystem();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:     <span class="comment">//增加职工</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:     <span class="comment">//显示职工</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:     <span class="comment">//删除职工</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:     <span class="comment">//修改职工</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:     <span class="comment">//查找职工</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:     <span class="comment">//编号排序</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:     <span class="comment">//清空文档</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);    <span class="comment">//清屏</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//请按任意键继续...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2-实现退出功能"><a href="#5-2-实现退出功能" class="headerlink" title="5.2 实现退出功能"></a>5.2 实现退出功能</h2><p>在workerManager.h中提供退出系统的成员函数：<code>void exitSystem( );</code><br><img src="http://image.camcad.cn/2020/06/2020061208190949.jpg"> 在workerManager.cpp中提供具体的功能实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//退出系统</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">workerManager::exitSystem</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;欢迎下次使用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);    <span class="comment">//退出程序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3-测试功能"><a href="#5-3-测试功能" class="headerlink" title="5.3 测试功能"></a>5.3 测试功能</h2><p>在main函数分支0选项中，调用退出程序 的接口。<br><img src="http://image.camcad.cn/2020/06/2020061208230372-923x1024.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统04：菜单功能</title>
      <link href="/post/835de141.html"/>
      <url>/post/835de141.html</url>
      
        <content type="html"><![CDATA[<h1 id="4、菜单功能"><a href="#4、菜单功能" class="headerlink" title="4、菜单功能"></a>4、菜单功能</h1><p>功能描述：与用户的沟通界面</p><h2 id="4-1-添加成员函数"><a href="#4-1-添加成员函数" class="headerlink" title="4.1 添加成员函数"></a>4.1 添加成员函数</h2><p>在管理类workerManager.h中添加成员函数<code>void show_Menu( );</code><br><img src="http://image.camcad.cn/2020/06/2020061207375575.jpg"></p><h2 id="4-2-菜单功能实现"><a href="#4-2-菜单功能实现" class="headerlink" title="4.2 菜单功能实现"></a>4.2 菜单功能实现</h2><p>在管理类workerManager.cpp中实现 show_Menu( )函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">workerManager::show_Menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**************************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*******  欢迎使用职工管理系统！ ******&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  0.退出管理程序  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  1.增加职工信息  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  2.显示职工信息  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  3.删除离职职工  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  4.修改职工信息  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  5.查找职工信息  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  6.按照编号排序  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**********  7.清空所有文档  **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;**************************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-测试菜单功能"><a href="#4-3-测试菜单功能" class="headerlink" title="4.3 测试菜单功能"></a>4.3 测试菜单功能</h2><p>在职工管理系统.cpp中测试菜单功能</p><h3 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//实例化对象</span></span><br><span class="line">    workerManager wm;</span><br><span class="line">    wm.show_Menu();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h4><p><img src="http://image.camcad.cn/2020/06/2020061207425823.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统03：创建管理类</title>
      <link href="/post/5bcbd485.html"/>
      <url>/post/5bcbd485.html</url>
      
        <content type="html"><![CDATA[<h1 id="3、创建管理类"><a href="#3、创建管理类" class="headerlink" title="3、创建管理类"></a>3、创建管理类</h1><p><strong>管理类负责的内容如下：</strong></p><ul><li>与用户的沟通菜单界面</li><li>对职工增删改查的操作</li><li>与文件的读写交互</li></ul><h2 id="3-1-创建文件"><a href="#3-1-创建文件" class="headerlink" title="3.1 创建文件"></a>3.1 创建文件</h2><p>在头文件和源文件的文件下分别创建workerManager.h和workerManager.cpp文件。 <img src="http://image.camcad.cn/2020/06/2020061207020490-1024x379.jpg"></p><h2 id="3-2-头文件实现"><a href="#3-2-头文件实现" class="headerlink" title="3.2 头文件实现"></a>3.2 头文件实现</h2><p>在workerManager.h中设计管理类，代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once            <span class="comment">//防止头文件重复包含</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>       <span class="comment">//包含输入输出流 头文件</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;    <span class="comment">//使用标准命名空间</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">workerManager</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    workerManager();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~workerManager();</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="3-3-源文件实现"><a href="#3-3-源文件实现" class="headerlink" title="3.3 源文件实现"></a>3.3 源文件实现</h2><p>在workerManager.cpp中将构造和析构函数空实现补全。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line">workerManager::workerManager()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">workerManager::~workerManager()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统02：创建项目</title>
      <link href="/post/b6a02408.html"/>
      <url>/post/b6a02408.html</url>
      
        <content type="html"><![CDATA[<h1 id="2、创建项目"><a href="#2、创建项目" class="headerlink" title="2、创建项目"></a>2、创建项目</h1><p>创建项目步骤如下：</p><ul><li>创建新项目</li><li>添加文件</li></ul><h2 id="2-1-创建项目"><a href="#2-1-创建项目" class="headerlink" title="2.1 创建项目"></a>2.1 创建项目</h2><p>打开vs软件后，点击创建新项目，创建新的C++项目。 <img src="http://image.camcad.cn/2020/06/2020061206320776-1024x423.jpg"></p><h3 id="2-1-1-填写项目名称以及项目路径，点击确定"><a href="#2-1-1-填写项目名称以及项目路径，点击确定" class="headerlink" title="2.1.1 填写项目名称以及项目路径，点击确定"></a>2.1.1 填写项目名称以及项目路径，点击确定</h3><p><img src="http://image.camcad.cn/2020/06/2020061206334073-1024x627.jpg"></p><h2 id="2-2-添加文件"><a href="#2-2-添加文件" class="headerlink" title="2.2 添加文件"></a>2.2 添加文件</h2><h3 id="2-2-1-右键源文件，进行添加文件"><a href="#2-2-1-右键源文件，进行添加文件" class="headerlink" title="2.2.1 右键源文件，进行添加文件"></a>2.2.1 右键源文件，进行添加文件</h3><p><img src="http://image.camcad.cn/2020/06/2020061206362276-1024x467.jpg"> <img src="http://image.camcad.cn/2020/06/2020061206371915-1024x622.jpg"> <img src="http://image.camcad.cn/2020/06/2020061206375496-1024x421.jpg"></p><h3 id="2-2-2-至此，项目创建完毕。"><a href="#2-2-2-至此，项目创建完毕。" class="headerlink" title="2.2.2 至此，项目创建完毕。"></a>2.2.2 至此，项目创建完毕。</h3>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工管理系统01：管理系统需求</title>
      <link href="/post/953e7e3d.html"/>
      <url>/post/953e7e3d.html</url>
      
        <content type="html"><![CDATA[<h1 id="1、管理系统需求"><a href="#1、管理系统需求" class="headerlink" title="1、管理系统需求"></a>1、管理系统需求</h1><p>职工管理系统可以用来管理公司内所有员工的信息。</p><p>本教程主要利用C++来实现一个基于多态的职工管理系统。</p><p>公司中职工分为三类：普通员工、经理、老板，显示信息时，需要显示职工编号、职工姓名、职工岗位以及职责。</p><h4 id="普通员工职责：完成经理交给的任务。"><a href="#普通员工职责：完成经理交给的任务。" class="headerlink" title="普通员工职责：完成经理交给的任务。"></a>普通员工职责：完成经理交给的任务。</h4><h4 id="经理职责：完成老板交给的任务，并下发任务给员工。"><a href="#经理职责：完成老板交给的任务，并下发任务给员工。" class="headerlink" title="经理职责：完成老板交给的任务，并下发任务给员工。"></a>经理职责：完成老板交给的任务，并下发任务给员工。</h4><h4 id="老板职责：管理公司所有事务。"><a href="#老板职责：管理公司所有事务。" class="headerlink" title="老板职责：管理公司所有事务。"></a>老板职责：管理公司所有事务。</h4><h2 id="管理系统中需要实现的功能如下："><a href="#管理系统中需要实现的功能如下：" class="headerlink" title="管理系统中需要实现的功能如下："></a>管理系统中需要实现的功能如下：</h2><ul><li>退出管理程序：退出当前管理系统</li><li>增加职工信息：实现批量添加职工功能，将信息录入文件中，职工信息为：职工编号、姓名、部门编号</li><li>显示职工信息：显示公司内部所有职工的信息</li><li>删除离职职工：按照编号删除指定的职工</li><li>修改职工信息：按照编号修改职工个人信息</li><li>查找职工信息：按照职工的编号或者职工的姓名进行查找相关的人员信息</li><li>按照编号排序：按照职工编号，进行排序，排序规则由用户指定</li><li>清空所有文档：清空文件中记录的所有职工信息（清空前需要再次确认，防止误删）</li></ul><h3 id="系统界面效果如下："><a href="#系统界面效果如下：" class="headerlink" title="系统界面效果如下："></a>系统界面效果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020061207314536.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识56：文件操作（二进制文件-读文件）</title>
      <link href="/post/24c85066.html"/>
      <url>/post/24c85066.html</url>
      
        <content type="html"><![CDATA[<h1 id="5-2-二进制文件"><a href="#5-2-二进制文件" class="headerlink" title="5.2 二进制文件"></a>5.2 二进制文件</h1><h2 id="5-2-2-读文件"><a href="#5-2-2-读文件" class="headerlink" title="5.2.2 读文件"></a>5.2.2 读文件</h2><p>二进制方式读文件主要利用流对象调用成员函数read。 函数原型：<code>istream&amp; read(char *buffer,int len);</code> 参数解释：字符指针buffer指向内存中一段储存空间，len是读写的字节数。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> cName 24</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    <span class="type">char</span> m_Name[cName];</span><br><span class="line">    <span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.加载头文件 &lt;fstream&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.创建流文件</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.打开文件</span></span><br><span class="line">    ifs.open(<span class="string">&quot;02.txt&quot;</span>, ios::in  ios::binary);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.判断文件是否存在</span></span><br><span class="line">    <span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;文本文件不存在&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.读取内容</span></span><br><span class="line">    Person p;</span><br><span class="line">    ifs.read((<span class="type">char</span>*)&amp;p, <span class="keyword">sizeof</span>(Person));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p.m_Name &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; p.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();   </span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020061009003538-1024x402.jpg"></p><h3 id="总结：文件输入流对象可以通过read函数，以二进制的方式读取数据。"><a href="#总结：文件输入流对象可以通过read函数，以二进制的方式读取数据。" class="headerlink" title="总结：文件输入流对象可以通过read函数，以二进制的方式读取数据。"></a>总结：文件输入流对象可以通过read函数，以二进制的方式读取数据。</h3>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识55：文件操作（二进制文件-写文件）</title>
      <link href="/post/b7952e98.html"/>
      <url>/post/b7952e98.html</url>
      
        <content type="html"><![CDATA[<h1 id="5-2-二进制文件"><a href="#5-2-二进制文件" class="headerlink" title="5.2 二进制文件"></a>5.2 二进制文件</h1><p>以二进制的方式对文件进行读写操作 打开方式要指定为<code>iso::binary</code></p><h2 id="5-2-1-写文件"><a href="#5-2-1-写文件" class="headerlink" title="5.2.1 写文件"></a>5.2.1 写文件</h2><p>二进制方式写文件主要利用流对象调用成员函数<code>write</code> 函数原型：<code>ostream&amp; write(const char * buffer , int len);</code> 参数解释 ：字符指针buffer指向内存中一段存储空间，len是读写的字节数。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> cName 24</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    <span class="type">char</span> m_Name[cName];</span><br><span class="line">    <span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.加载头文件 &lt;fstream&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.创建流文件</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.打开文件</span></span><br><span class="line">    ofs.open(<span class="string">&quot;02.txt&quot;</span>, ios::out  ios::binary);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.写入内容</span></span><br><span class="line">    Person p = &#123; <span class="string">&quot;李四&quot;</span>,<span class="number">18</span> &#125;;</span><br><span class="line">    ofs.write((<span class="type">const</span> <span class="type">char</span>*)&amp;p, <span class="keyword">sizeof</span>(Person));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();   <span class="comment">//写内容</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果（打开文本文件）如下"><a href="#以上代码编译执行结果（打开文本文件）如下" class="headerlink" title="以上代码编译执行结果（打开文本文件）如下:"></a>以上代码编译执行结果（打开文本文件）如下:</h3><p><img src="http://image.camcad.cn/2020/06/2020061008350891-1024x495.jpg"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>文件输出流对象可以通过write函数，以二进制方式写入数据。</p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识54：文件操作（文本文件-读文件）</title>
      <link href="/post/49557b6.html"/>
      <url>/post/49557b6.html</url>
      
        <content type="html"><![CDATA[<h1 id="5-1-文本文件"><a href="#5-1-文本文件" class="headerlink" title="5.1 文本文件"></a>5.1 文本文件</h1><h2 id="5-1-2-读文件"><a href="#5-1-2-读文件" class="headerlink" title="5.1.2 读文件"></a>5.1.2 读文件</h2><p>读文件与写文件步骤相似，但是读取方式相对于比较多。</p><p>读文件步骤如下： 1.包含头文件 ＃include ＜fstream＞</p><p>2.创建流对象 ifstream ifs;</p><p>3.打开文件并判断文件是否打开成功 ifs.open(“文件路径”，打开方式);</p><p>4.读数据 四种方式读取</p><p>5.关闭文件 ifs.close();</p><h3 id="示例代码（读文件）："><a href="#示例代码（读文件）：" class="headerlink" title="示例代码（读文件）："></a>示例代码（读文件）：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.加载头文件 &lt;fstream&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.创建流文件</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.打开文件</span></span><br><span class="line">    ifs.open(<span class="string">&quot;01.txt&quot;</span>,ios::in);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.判断文本文件是否存在</span></span><br><span class="line">    <span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;文本文件不存在！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.读取内容</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    //方法一</span></span><br><span class="line"><span class="comment">    char content[1024] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">    while (ifs&gt;&gt;content)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        cout &lt;&lt; content &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法二</span></span><br><span class="line">    <span class="built_in">string</span> content;</span><br><span class="line">    <span class="keyword">while</span> (getline(ifs,content))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; content &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    //方法三</span></span><br><span class="line"><span class="comment">    char content[1024] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">    while (ifs.getline(content, sizeof(content)))</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        cout &lt;&lt; content &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    //方法四</span></span><br><span class="line"><span class="comment">    char c;</span></span><br><span class="line"><span class="comment">    while ((c=ifs.get()) != EOF )   //EOF： end of file（文件尾部）</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        cout &lt;&lt; c;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//6.关闭文件</span></span><br><span class="line">    ifs.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();   <span class="comment">//写内容</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020061004290179-1024x501.jpg"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul><li>读文件可以利用ifstream,或者fstream类</li><li>利用is_open函数可以判断文件是否打开成功</li><li>close关闭文件</li></ul>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识53：文件操作（文本文件-写文件）</title>
      <link href="/post/fa9b9dc9.html"/>
      <url>/post/fa9b9dc9.html</url>
      
        <content type="html"><![CDATA[<h1 id="5-文件操作"><a href="#5-文件操作" class="headerlink" title="5 文件操作"></a>5 文件操作</h1><p>程序运行时产生的数据都属于临时数据，程序一旦运行结束都会被释放。 通过<strong>文件操作可以将数据持久化</strong>。 C++中对文件操作需要包含头文件 ＜fstream＞</p><p>文件类型分为两种：</p><ul><li><strong>文件文件：</strong>文件以文本的<strong>ASCII码</strong>形式存储在计算机中。</li><li><strong>二进制文件：</strong>文件以文本的<strong>二进制</strong>形式存储在计算机中，用户一般不能直接读懂它们。</li></ul><p>操作文件的三大类：</p><ul><li>ofstream：写操作</li><li>ifstream：读操作</li><li>fstream：读写操作</li></ul><h1 id="5-1-文本文件"><a href="#5-1-文本文件" class="headerlink" title="5.1 文本文件"></a>5.1 文本文件</h1><h2 id="5-1-1-写文件"><a href="#5-1-1-写文件" class="headerlink" title="5.1.1 写文件"></a>5.1.1 写文件</h2><h3 id="写文件步骤如下："><a href="#写文件步骤如下：" class="headerlink" title="写文件步骤如下："></a>写文件步骤如下：</h3><p>1.包含头文件 ＃include ＜fstream＞</p><p>2.创建流对象 ofstream ofs;</p><p>3.打开文件 ofs.open(“文件路径”,打开方式);</p><p>4.写数据 ofs&lt;&lt;”写入的数据”;</p><p>5.关闭文件 ofs.close();</p><p><strong>文件打开方式：</strong></p><table><thead><tr><th align="center">打开方式</th><th align="left">解释</th></tr></thead><tbody><tr><td align="center">ios::in</td><td align="left">为读文件而打开文件</td></tr><tr><td align="center">iso::out</td><td align="left">为写文件而打开文件</td></tr><tr><td align="center">ios::ate</td><td align="left">初始位置：文件尾</td></tr><tr><td align="center">ios::trunc</td><td align="left">如果文件存在先删除，再创建</td></tr><tr><td align="center">ios::binary</td><td align="left">二进制方式</td></tr></tbody></table><h4 id="注意：文件打开方式可以配合使用，利用-操作符。"><a href="#注意：文件打开方式可以配合使用，利用-操作符。" class="headerlink" title="注意：文件打开方式可以配合使用，利用 操作符。"></a>注意：文件打开方式可以配合使用，利用 操作符。</h4><h4 id="例如：用二进制方式写文件：ios-binary-ios-out"><a href="#例如：用二进制方式写文件：ios-binary-ios-out" class="headerlink" title="例如：用二进制方式写文件：ios::binary ios::out"></a>例如：用二进制方式写文件：<code>ios::binary ios::out</code></h4><h3 id="示例代码（写文件）："><a href="#示例代码（写文件）：" class="headerlink" title="示例代码（写文件）："></a>示例代码（写文件）：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.加载头文件 &lt;fstream&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.创建流文件</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开文件</span></span><br><span class="line">    ofs.open(<span class="string">&quot;01.txt&quot;</span>,ios::out);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输入内容</span></span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;姓名：李四&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;年龄：20&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;身高：170&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭文件</span></span><br><span class="line">    ofs.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();   <span class="comment">//写内容</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下（打开文本文件）："><a href="#以上代码编译执行结果如下（打开文本文件）：" class="headerlink" title="以上代码编译执行结果如下（打开文本文件）："></a>以上代码编译执行结果如下（打开文本文件）：</h3><p><img src="http://image.camcad.cn/2020/06/2020061003223974.jpg"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul><li>文件操作必须包含头文件fstream</li><li>读文件可以利用ofstream或者fstream类</li><li>打开文件时候需要指定操作文件的路径，以及打开方式</li><li>利用&lt;&lt;可以向文件中写数据</li><li>操作完毕，要关闭文件</li></ul>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识52：类和对象（多态-多态案例三_电脑组装）</title>
      <link href="/post/5b82a581.html"/>
      <url>/post/5b82a581.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-7-多态"><a href="#4-7-多态" class="headerlink" title="4.7 多态"></a>4.7 多态</h1><h2 id="4-7-6-多态案例三-电脑组装"><a href="#4-7-6-多态案例三-电脑组装" class="headerlink" title="4.7.6 多态案例三-电脑组装"></a>4.7.6 多态案例三-电脑组装</h2><p><strong>案例描述：</strong> 电脑主要组成部件为CPU（用于计算），GPU（用于显示），内存条（用于存储）。 将每个零件封装出抽象基类，并且提供不同的厂商生产不同的零件，例如Intel厂商和AMD厂商以及Lenove厂商。创建电脑类提供让电脑工作的函数，并且调用每个零件工作的接口。 测试时组装三台不同的电脑进行工作。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象CPU</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractCPU</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">cpuCaculate</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象GPU</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractGPU</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">gpuDisplay</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象内存卡</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractSD</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">sdStorage</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Computers</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line">    Computers(AbstractCPU *cpu, AbstractGPU *gpu, AbstractSD *sd)</span><br><span class="line">    &#123;</span><br><span class="line">        m_CPU = cpu;</span><br><span class="line">        m_GPU = gpu;</span><br><span class="line">        m_SD = sd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供工作函数</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">work</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_CPU-&gt;cpuCaculate();</span><br><span class="line">        m_GPU-&gt;gpuDisplay();</span><br><span class="line">        m_SD-&gt;sdStorage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ~Computers()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (m_CPU !=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            delete m_CPU;</span><br><span class="line">            m_CPU = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (m_GPU != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            delete m_GPU;</span><br><span class="line">            m_GPU = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (m_SD != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            delete m_SD;</span><br><span class="line">            m_SD = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    AbstractCPU *m_CPU;</span><br><span class="line">    AbstractGPU *m_GPU;</span><br><span class="line">    AbstractSD  *m_SD;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Intel厂商</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelCPU</span> :</span>public AbstractCPU</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    <span class="type">void</span> <span class="title function_">cpuCaculate</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Intel CPU计算中&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelGPU</span> :</span>public AbstractGPU</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    <span class="type">void</span> <span class="title function_">gpuDisplay</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Intel GPU显示中&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelSD</span> :</span>public AbstractSD</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    <span class="type">void</span> <span class="title function_">sdStorage</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Intel SD储存中&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Lenovo厂商</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoCPU</span> :</span> public AbstractCPU</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">cpuCaculate</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Lenovo CPU正在计算&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoGPU</span> :</span>public AbstractGPU</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    <span class="type">void</span> <span class="title function_">gpuDisplay</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Lenovo GPU显示中&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoSD</span> :</span>public AbstractSD</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    <span class="type">void</span> <span class="title function_">sdStorage</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Lenovo SD储存中&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//第一台电脑</span></span><br><span class="line">    Computers <span class="title function_">computers1</span><span class="params">(new IntelCPU, new IntelGPU, new IntelSD)</span>;</span><br><span class="line">    computers1.work();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二台电脑</span></span><br><span class="line">    AbstractCPU *LenovoCPU01 = new LenovoCPU;</span><br><span class="line">    AbstractGPU *LenovoGPU01 = new LenovoGPU;</span><br><span class="line">    AbstractSD *LenovoSD01 = new LenovoSD;</span><br><span class="line">    Computers *computers2 = new Computers(LenovoCPU01, LenovoGPU01, LenovoSD01);</span><br><span class="line">    computers2-&gt;work();</span><br><span class="line">    delete computers2;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第三台电脑</span></span><br><span class="line">    Computers <span class="title function_">computers3</span><span class="params">(new IntelCPU, new LenovoGPU, new IntelSD)</span>;</span><br><span class="line">    computers3.work();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h4><p><img src="http://image.camcad.cn/2020/06/2020060911084457-1024x555.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识51：类和对象（多态-虚析构和纯虚析构）</title>
      <link href="/post/78f7bf55.html"/>
      <url>/post/78f7bf55.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-7-多态"><a href="#4-7-多态" class="headerlink" title="4.7 多态"></a>4.7 多态</h1><h2 id="4-7-5-虚析构得纯虚析构"><a href="#4-7-5-虚析构得纯虚析构" class="headerlink" title="4.7.5 虚析构得纯虚析构"></a>4.7.5 虚析构得纯虚析构</h2><p>多态使用时，如果子类中有属性开辟到堆区，那么父类指针在释放时无法调用到子类的析构代码。</p><p>解决方式：将父类中的析构函数改为<strong>虚析构</strong>或者<strong>纯虚析构</strong>。</p><p>虚析构和纯虚析构共性：</p><ul><li>可以解决父类指针释放子类对象</li><li>都需要有具体的函数实现</li></ul><p>虚析构和纯虚析构区别：</p><ul><li>如果是纯虚析构，该类属于抽象类，无法实例化对象。</li></ul><p>虚析构语法：<code>virtual ~类名( )&#123; &#125;</code> 纯虚析构语法：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virtual ~类名( ) = <span class="number">0</span>;</span><br><span class="line">类名::~类名( )&#123; &#125;</span><br></pre></td></tr></table></figure><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象类(饮料)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractAinmal</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    AbstractAinmal()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;AbstractAinmal 构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">action</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    //1.利用虚析构可以解决 父类指针释放子类对象时不干净问题</span></span><br><span class="line"><span class="comment">    virtual ~AbstractAinmal()</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        cout &lt;&lt; &quot;AbstractAinmal 虚析构函数&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.纯虚析构 需要声明也需要实现</span></span><br><span class="line">    <span class="comment">//有了纯虚析构之后，这个类也属于抽象类，无法实例化对象</span></span><br><span class="line">    virtual ~AbstractAinmal() = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">AbstractAinmal::~AbstractAinmal()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;AbstractAinmal 纯虚析构函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> :</span>public AbstractAinmal</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    Cat(<span class="built_in">string</span> name)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Cat 构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        m_Name = new <span class="built_in">string</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">action</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; *m_Name &lt;&lt; <span class="string">&quot;小猫在叫&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ~Cat()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Cat 析构函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">if</span> (m_Name != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            delete m_Name;</span><br><span class="line">            m_Name = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> *m_Name;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    AbstractAinmal *ainmal = new Cat(<span class="string">&quot;Toom：&quot;</span>);</span><br><span class="line">    ainmal-&gt;action();</span><br><span class="line">    delete ainmal;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060906485949-1024x469.jpg"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul><li>1.虚析构或纯虚析构就是用来解决通过父类指针释放子类对象</li><li>2.如果子类中没有堆区数据，可以不写虚析构或纯虚析构</li><li>3.拥有纯虚析构函数的类也属于抽象类</li></ul>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识50：类和对象（多态-多态案例二_制作饮品）</title>
      <link href="/post/3996e7a6.html"/>
      <url>/post/3996e7a6.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-7-多态"><a href="#4-7-多态" class="headerlink" title="4.7 多态"></a>4.7 多态</h1><h2 id="4-7-4-多态案例二-制作饰品"><a href="#4-7-4-多态案例二-制作饰品" class="headerlink" title="4.7.4 多态案例二_制作饰品"></a>4.7.4 多态案例二_制作饰品</h2><p><strong>案例描述：</strong> 制作饰品的大致流程为：煮水–&gt;冲泡–&gt;倒入杯中–&gt;加入辅料。</p><p>利用多态技术实现本案例，提供抽象制作 饮品基类，提供子类制作咖啡和茶叶。 <img src="http://image.camcad.cn/2020/06/2020060902412845-1024x350.jpg"></p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象类(饮料)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractBeverages</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//煮水</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">water</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//冲泡</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">brewing</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//倒入杯中</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">pour</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//加入辅料</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">accessories</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//制作步骤</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">steps</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        water();</span><br><span class="line">        brewing();</span><br><span class="line">        pour();</span><br><span class="line">        accessories();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//咖啡类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coffee</span>:</span>public AbstractBeverages</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//煮水</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">water</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1.上等纯净水&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//冲泡</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">brewing</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2.冲泡咖啡&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//倒入杯中</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">pour</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;3.倒入咖啡杯中&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//加入辅料</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">accessories</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;4.加入少量白糖牛奶&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//冲泡茶叶</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tea</span> :</span>public AbstractBeverages</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//煮水</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">water</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1.极品山泉水&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//冲泡</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">brewing</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2.冲泡茶叶&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//倒入杯中</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">pour</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;3.倒入茶几中&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//加入辅料</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">accessories</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;4.放入少量枸杞&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//制作饮料</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">makingDrinks</span><span class="params">(AbstractBeverages *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">abs</span>-&gt;steps();</span><br><span class="line">    delete <span class="built_in">abs</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//冲咖啡</span></span><br><span class="line">    makingDrinks(new Coffee);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;——————————&quot;</span> &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//分割</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//冲泡茶</span></span><br><span class="line">    makingDrinks(new Tea);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译结果如下："><a href="#以上代码编译结果如下：" class="headerlink" title="以上代码编译结果如下："></a>以上代码编译结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060903223123-1024x557.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识49：类和对象（多态-纯虚函数和抽象类）</title>
      <link href="/post/9854c368.html"/>
      <url>/post/9854c368.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-7-多态"><a href="#4-7-多态" class="headerlink" title="4.7 多态"></a>4.7 多态</h1><h2 id="4-7-3-纯虚函数和抽象类"><a href="#4-7-3-纯虚函数和抽象类" class="headerlink" title="4.7.3 纯虚函数和抽象类"></a>4.7.3 纯虚函数和抽象类</h2><p>在多态中，通常父类中的虚函数实现是毫无意义的，主要都是调用子类重写的内容。</p><p>因此可以将虚函数改为<strong>纯虚函数</strong>。</p><p><code>纯虚函数语法：virtual 返回值类型 函数名 (参数列表) = 0;</code></p><p>当类中有了纯虚函数，这个类也称为抽象类。</p><p><strong>抽象类特点：</strong></p><ul><li>无法实例化对象</li><li>子类必须重写抽象类中的纯虚函数，否则也属于抽象类。</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现计算器抽象类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractComputers</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//抽象类：只要有一个纯虚函数，这个类称为抽象类</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//抽象类特点：</span></span><br><span class="line">    <span class="comment">//1.无法实例化对象</span></span><br><span class="line">    <span class="comment">//2.抽象类的子类 必须要重写父类中的纯虚函数，否则也属于抽象类</span></span><br><span class="line"></span><br><span class="line">    virtual <span class="type">double</span> <span class="title function_">getResult</span><span class="params">()</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    <span class="type">double</span> m_num01;</span><br><span class="line">    <span class="type">double</span> m_num02;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">addComputers</span>:</span>public AbstractComputers</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">getResult</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>  m_num01 + m_num02;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//AbstractComputers ab; //抽象类是无法实例化对象</span></span><br><span class="line">    <span class="comment">//new AbstractComputers;    //抽象类是无法实例化对象</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//addComputers a;   //子类必须重写父类中的纯虚函数，否则无法实例化对象</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//加</span></span><br><span class="line">    AbstractComputers *add = new addComputers;</span><br><span class="line">    add-&gt;m_num01 = <span class="number">10</span>;</span><br><span class="line">    add-&gt;m_num02 = <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; add-&gt;m_num01 &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; add-&gt;m_num02 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; add-&gt;getResult() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    delete add;     <span class="comment">//释放内存</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060902100292-1024x489.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识48：类和对象（多态-多态案例一计算机类）</title>
      <link href="/post/e0aaaf87.html"/>
      <url>/post/e0aaaf87.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-7-多态"><a href="#4-7-多态" class="headerlink" title="4.7 多态"></a>4.7 多态</h1><h2 id="4-7-2-多态案例一-计算机类"><a href="#4-7-2-多态案例一-计算机类" class="headerlink" title="4.7.2 多态案例一_计算机类"></a>4.7.2 多态案例一_计算机类</h2><p><strong>案例描述：</strong> 分别利用普通写法和多态技术，设计实现两个操作数进行运算的计算器类。</p><p><strong>多态的优点：</strong></p><ul><li>代码组织结构清晰</li><li>可读性强</li><li>利于前期和后期的扩展以及维护</li></ul><h2 id="普通写法（示例）"><a href="#普通写法（示例）" class="headerlink" title="普通写法（示例）"></a>普通写法（示例）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Computers</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    Computers(<span class="built_in">double</span> num01,<span class="built_in">double</span> num02)</span><br><span class="line">    &#123;</span><br><span class="line">        m_num01 = num01;</span><br><span class="line">        m_num02 = num02;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">double</span> <span class="title">getResult</span>(<span class="params"><span class="built_in">string</span> opre</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (opre==<span class="string">&quot;+&quot;</span>)                    <span class="comment">//加</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> m_num01 + m_num02;   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opre == <span class="string">&quot;-&quot;</span>)         <span class="comment">//减</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> m_num01 - m_num02;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opre == <span class="string">&quot;*&quot;</span>)         <span class="comment">//乘</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> m_num01 * m_num02;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opre == <span class="string">&quot;/&quot;</span>)         <span class="comment">//除</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> m_num01 / m_num02;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">double</span> m_num01;</span><br><span class="line">    <span class="built_in">double</span> m_num02;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//普通实现方式</span></span><br><span class="line">    <span class="function">Computers <span class="title">c</span>(<span class="params"><span class="number">10</span>, <span class="number">20</span></span>)</span>;</span><br><span class="line">    cout &lt;&lt; c.m_num01 &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; c.m_num02 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.getResult(<span class="string">&quot;+&quot;</span>) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; c.m_num01 &lt;&lt; <span class="string">&quot; - &quot;</span> &lt;&lt; c.m_num02 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.getResult(<span class="string">&quot;-&quot;</span>) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; c.m_num01 &lt;&lt; <span class="string">&quot; * &quot;</span> &lt;&lt; c.m_num02 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.getResult(<span class="string">&quot;*&quot;</span>) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; c.m_num01 &lt;&lt; <span class="string">&quot; / &quot;</span> &lt;&lt; c.m_num02 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.getResult(<span class="string">&quot;/&quot;</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h4><p><img src="http://image.camcad.cn/2020/06/2020060811310317-1024x442.jpg"></p><h3 id="普通写法-总结："><a href="#普通写法-总结：" class="headerlink" title="普通写法 总结："></a>普通写法 总结：</h3><ul><li>如果想扩展新的功能，需要修改源码</li><li>在做项目中 提倡 开闭原则</li><li><strong>开闭原则：</strong>对扩展进行开放，对修改进行关闭</li></ul><h2 id="多态写法（示例）"><a href="#多态写法（示例）" class="headerlink" title="多态写法（示例）"></a>多态写法（示例）</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.代码组织结构清晰</span></span><br><span class="line"><span class="comment">2.可读性强</span></span><br><span class="line"><span class="comment">3.利于前期和后期的扩展以及维护</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//实现计算器抽象类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">AbstractComputers</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">     <span class="function"><span class="keyword">virtual</span> <span class="built_in">double</span> <span class="title">getResult</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">double</span> m_num01;</span><br><span class="line">    <span class="built_in">double</span> m_num02;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">addComputers</span>:<span class="title">public</span> <span class="title">AbstractComputers</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">double</span> <span class="title">getResult</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>  m_num01 + m_num02;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//减</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">subComputers</span> :<span class="title">public</span> <span class="title">AbstractComputers</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">double</span> <span class="title">getResult</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>  m_num01 - m_num02;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//乘</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">mulComputers</span> :<span class="title">public</span> <span class="title">AbstractComputers</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">double</span> <span class="title">getResult</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>  m_num01 * m_num02;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//除</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">divComputers</span> :<span class="title">public</span> <span class="title">AbstractComputers</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">double</span> <span class="title">getResult</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>  m_num01 / m_num02;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//加</span></span><br><span class="line">    AbstractComputers *<span class="keyword">add</span> = <span class="keyword">new</span> addComputers;</span><br><span class="line">    <span class="keyword">add</span>-&gt;m_num01 = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">add</span>-&gt;m_num02 = <span class="number">20</span>;</span><br><span class="line">    cout &lt;&lt; <span class="keyword">add</span>-&gt;m_num01 &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; <span class="keyword">add</span>-&gt;m_num02 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; <span class="keyword">add</span>-&gt;getResult() &lt;&lt; endl;</span><br><span class="line">    delete <span class="keyword">add</span>;     <span class="comment">//释放内存</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//减</span></span><br><span class="line">    <span class="keyword">add</span> = <span class="keyword">new</span> subComputers;</span><br><span class="line">    <span class="keyword">add</span>-&gt;m_num01 = <span class="number">10.5</span>;</span><br><span class="line">    <span class="keyword">add</span>-&gt;m_num02 = <span class="number">10</span>;</span><br><span class="line">    cout &lt;&lt; <span class="keyword">add</span>-&gt;m_num01 &lt;&lt; <span class="string">&quot; - &quot;</span> &lt;&lt; <span class="keyword">add</span>-&gt;m_num02 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; <span class="keyword">add</span>-&gt;getResult() &lt;&lt; endl;</span><br><span class="line">    delete <span class="keyword">add</span>;     <span class="comment">//释放内存</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//乘</span></span><br><span class="line">    <span class="keyword">add</span> = <span class="keyword">new</span> mulComputers;</span><br><span class="line">    <span class="keyword">add</span>-&gt;m_num01 = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">add</span>-&gt;m_num02 = <span class="number">3.14</span>;</span><br><span class="line">    cout &lt;&lt; <span class="keyword">add</span>-&gt;m_num01 &lt;&lt; <span class="string">&quot; * &quot;</span> &lt;&lt; <span class="keyword">add</span>-&gt;m_num02 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; <span class="keyword">add</span>-&gt;getResult() &lt;&lt; endl;</span><br><span class="line">    delete <span class="keyword">add</span>;     <span class="comment">//释放内存</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//除</span></span><br><span class="line">    <span class="keyword">add</span> = <span class="keyword">new</span> divComputers;</span><br><span class="line">    <span class="keyword">add</span>-&gt;m_num01 = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">add</span>-&gt;m_num02 = <span class="number">3</span>;</span><br><span class="line">    cout &lt;&lt; <span class="keyword">add</span>-&gt;m_num01 &lt;&lt; <span class="string">&quot; / &quot;</span> &lt;&lt; <span class="keyword">add</span>-&gt;m_num02 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; <span class="keyword">add</span>-&gt;getResult() &lt;&lt; endl;</span><br><span class="line">    delete <span class="keyword">add</span>;     <span class="comment">//释放内存</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h4><p><img src="http://image.camcad.cn/2020/06/2020060812070328-1024x455.jpg"></p><h3 id="总结：C-开发提倡利用多态设计程序架构，因为多态优点很多。"><a href="#总结：C-开发提倡利用多态设计程序架构，因为多态优点很多。" class="headerlink" title="总结：C++开发提倡利用多态设计程序架构，因为多态优点很多。"></a>总结：C++开发提倡利用多态设计程序架构，因为多态优点很多。</h3>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识47：类和对象（多态-多态的基本概念）</title>
      <link href="/post/76b5e75d.html"/>
      <url>/post/76b5e75d.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-7-多态"><a href="#4-7-多态" class="headerlink" title="4.7 多态"></a>4.7 多态</h1><h2 id="4-7-1-多态的基本概念"><a href="#4-7-1-多态的基本概念" class="headerlink" title="4.7.1 多态的基本概念"></a>4.7.1 多态的基本概念</h2><h4 id="多态是C-面向对象三大特性之一"><a href="#多态是C-面向对象三大特性之一" class="headerlink" title="多态是C++面向对象三大特性之一"></a>多态是C++面向对象三大特性之一</h4><p><strong>多态分为两类：</strong></p><ul><li>静态多态：函数重载 和 运算符重载属于静态多态，复用函数数名。</li><li>动态多态：派生类和虚函数实现运行时多态。</li></ul><p>静态多态和动态多态区别：</p><ul><li>静态多态的函数地址早绑定 - 编译阶段确定函数地址</li><li>动态多态的函数地址晚绑定 - 运行阶段确定函数地址</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//虚函数</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">speak</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Animal 动物在叫&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Cat</span> :<span class="title">public</span> <span class="title">Animal</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">speak</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Cat 小猫在叫&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Dog</span> :<span class="title">public</span> <span class="title">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">speak</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Dog 小狗在叫&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行说话的函数</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">动态多态满足条件：</span></span><br><span class="line"><span class="comment">  1.有继承关系</span></span><br><span class="line"><span class="comment">  2.子类重写父类的虚函数</span></span><br><span class="line"><span class="comment">  &#123; 重写：函数返回值类型 函数名 参数列表（需要完全相同）&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">动态多态使用：</span></span><br><span class="line"><span class="comment">  1.父类的指针或者引用 执行子类对象</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doSpeak</span>(<span class="params">Animal &amp;animal</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    animal.speak();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Cat cot;</span><br><span class="line">    doSpeak(cot);</span><br><span class="line"></span><br><span class="line">    Dog dog;</span><br><span class="line">    doSpeak(dog);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060810193381-1024x446.jpg"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p><strong>多态满足条件：</strong></p><ul><li>有继承关系</li><li>子类<strong>重写</strong>父类中的虚函数 <strong>重写：</strong>函数返回值类型 函数名 参数列表 （完全一致称为重写）。</li></ul><p><strong>多态使用条件：</strong></p><ul><li>父类指针或引用指向子类对象</li></ul><h2 id="多态的原理剖析图"><a href="#多态的原理剖析图" class="headerlink" title="多态的原理剖析图"></a>多态的原理剖析图</h2><p><a href="http://image.camcad.cn/2020/06/202006081021541.jpg"><img src="http://image.camcad.cn/2020/06/202006081021541-1024x498.jpg"></a></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识46：类和对象（继承-菱形继承&amp;virtual）</title>
      <link href="/post/db3b53a0.html"/>
      <url>/post/db3b53a0.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-6-继承"><a href="#4-6-继承" class="headerlink" title="4.6 继承"></a>4.6 继承</h1><h2 id="4-6-8-菱形继承"><a href="#4-6-8-菱形继承" class="headerlink" title="4.6.8 菱形继承"></a>4.6.8 菱形继承</h2><p><strong>菱形继承概念：</strong></p><ul><li>两个派生类继承同一个基类</li><li>又有某个类同时继承两个派生类</li><li>这种继承被称为菱形继承，或者钻石继承</li></ul><p><strong>典型的菱形继承案例：</strong><br><img src="http://image.camcad.cn/2020/06/2020060803244837.jpg"></p><p><strong>菱形继承问题：</strong> 1.羊继承了动物的数据，驼同样继承了动物的数据，当草泥马使用数据时，就会产生二义性。 2.草泥马继承自动物数据两份，其实我们应该清楚，这份数据我们只需要一份就可以。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承前加 virtual 关键字后，变为虚继承</span></span><br><span class="line"><span class="comment">//此时公共的父类 Animal 称为虚基类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Sheep</span> :<span class="title">virtual</span> <span class="title">public</span> <span class="title">Animal</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Tuo</span> :<span class="title">virtual</span> <span class="title">public</span> <span class="title">Animal</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title">SheepTuo</span> :<span class="title">public</span> <span class="title">Sheep</span>, <span class="title">public</span> <span class="title">Tuo</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    SheepTuo s;</span><br><span class="line">    s.Sheep::m_Age = <span class="number">20</span>;</span><br><span class="line">    s.Tuo::m_Age = <span class="number">18</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;s.Sheep::m_Age= &quot;</span> &lt;&lt; s.Sheep::m_Age &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;s.Tuo::m_Age= &quot;</span> &lt;&lt; s.Tuo::m_Age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//继承前加 virtual 关键字后，变为虚继承</span></span><br><span class="line">    <span class="comment">//此时公共的父类 Animal 称为虚基类</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;s.m_Age= &quot;</span> &lt;&lt; s.m_Age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060803444082-1024x416.jpg"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul><li>菱形继承带来的主要问题是子类继承两份相同的数据，导致资源浪费毫无意义。</li><li>利用虚继承可以解决菱形继承问题。（virtual）</li></ul><h3 id="底层原理"><a href="#底层原理" class="headerlink" title="底层原理"></a>底层原理</h3><p><img src="http://image.camcad.cn/2020/06/2020060803513645-1024x536.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识45：类和对象（继承-多继承语法）</title>
      <link href="/post/66431651.html"/>
      <url>/post/66431651.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-6-继承"><a href="#4-6-继承" class="headerlink" title="4.6 继承"></a>4.6 继承</h1><h2 id="4-6-7-多继承语法"><a href="#4-6-7-多继承语法" class="headerlink" title="4.6.7 多继承语法"></a>4.6.7 多继承语法</h2><p>C++允许一个类继承<strong>多个类</strong> <code>语法：class 子类 :继承方式 父类1,继承方式 父类2, ...</code> 多继承可能会引发父类中有同名成员出现，需要加作用域区分</p><p><strong>C++实际开发中不建议使用多继承</strong></p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Parent01</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Parent01()</span><br><span class="line">    &#123;</span><br><span class="line">        m_A = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:     </span><br><span class="line"><span class="built_in">int</span> m_A;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Parent02</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Parent02()</span><br><span class="line">    &#123;</span><br><span class="line">        m_A = <span class="number">20</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">int</span> m_A;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Son</span> :<span class="title">public</span> <span class="title">Parent01</span>,<span class="title">public</span> <span class="title">Parent02</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    Son()</span><br><span class="line">    &#123;</span><br><span class="line">        m_A = <span class="number">30</span>;</span><br><span class="line">        m_B = <span class="number">80</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">int</span> m_A;</span><br><span class="line"><span class="built_in">int</span> m_B;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Son s;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;sizeof(Son)占用内存空间：&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(Son) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;子类(Son) m_A= &quot;</span> &lt;&lt; s.m_A &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;子类(Son) m_B= &quot;</span> &lt;&lt; s.m_B &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;父类(Parent01) m_A= &quot;</span> &lt;&lt; s.Parent01::m_A &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;父类(Parent02) m_A= &quot;</span> &lt;&lt; s.Parent02::m_A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060802405789-1024x473.jpg"></p><h3 id="总结：多继承中如果父类中出现了同名情况，子类使用时候要加作用域。"><a href="#总结：多继承中如果父类中出现了同名情况，子类使用时候要加作用域。" class="headerlink" title="总结：多继承中如果父类中出现了同名情况，子类使用时候要加作用域。"></a>总结：多继承中如果父类中出现了同名情况，子类使用时候要加作用域。</h3>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识44：类和对象（继承-继承同名静态成员处理方式）</title>
      <link href="/post/335a130a.html"/>
      <url>/post/335a130a.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-6继承"><a href="#4-6继承" class="headerlink" title="4.6继承"></a>4.6继承</h1><h2 id="4-6-6-继承同名静态成员处理方式"><a href="#4-6-6-继承同名静态成员处理方式" class="headerlink" title="4.6.6 继承同名静态成员处理方式"></a>4.6.6 继承同名静态成员处理方式</h2><p><strong>问题：</strong>继承中同名的静态成员在子类对象上如何进行访问？ 静态成员和非静态成员出现同名，处理方式一致</p><ul><li>访问子类同名成员 直接访问即可</li><li>访问父类同名成员 需要加作用域</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Parent</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Parent父类中的func()函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span>(<span class="params"><span class="built_in">int</span> num</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Parent父类中的func(int num)函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:     </span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">int</span> m_num;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">int</span> Parent::m_num = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Son</span> :<span class="title">public</span> <span class="title">Parent</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Son子类中的func()函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">int</span> m_num;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">int</span> Son::m_num = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.通过对象方式访问数据</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;通过对象方式访问数据&quot;</span> &lt;&lt; endl;</span><br><span class="line">    Son s;</span><br><span class="line">    <span class="comment">//访问子类与父类同名的成员属性</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（Son）子类static int m_num：&quot;</span> &lt;&lt; s.m_num &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问父类与子类同名的成员属性</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（Parent）父类static int m_num：&quot;</span> &lt;&lt; s.Parent::m_num &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问子类与父类同名函数func()</span></span><br><span class="line">    s.func();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问父类与子类同名函数func()</span></span><br><span class="line">    s.Parent::func();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问父类与子类同名函数func(int num)</span></span><br><span class="line">    s.Parent::func(<span class="number">100</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.通过类名访问数据</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;通过类名访问数据&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//访问子类与父类同名的成员属性</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（Son）子类static int m_num：&quot;</span> &lt;&lt; Son::m_num &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问父类与子类同名的成员属性</span></span><br><span class="line">    <span class="comment">//第一个::代表通过类名方式访问，第二个::代表访问父类作用域下</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（Parent）父类static int m_num：&quot;</span> &lt;&lt;  Son::Parent::m_num &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问子类与父类同名函数func()</span></span><br><span class="line">    Son::func();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问父类与子类同名函数func()</span></span><br><span class="line">    Son::Parent::func();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问父类与子类同名函数func(int num)</span></span><br><span class="line">    Son::Parent::func(<span class="number">100</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h4><p><img src="http://image.camcad.cn/2020/06/2020060802091993-1024x649.jpg"></p><h3 id="总结：同名静态成员处理方式和非静态处理方式一样，只不过有两种访问的方式（通过对象-和-通过类名）"><a href="#总结：同名静态成员处理方式和非静态处理方式一样，只不过有两种访问的方式（通过对象-和-通过类名）" class="headerlink" title="总结：同名静态成员处理方式和非静态处理方式一样，只不过有两种访问的方式（通过对象 和 通过类名）"></a>总结：同名静态成员处理方式和非静态处理方式一样，只不过有两种访问的方式（通过对象 和 通过类名）</h3>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识43：类和对象（继承-继承同名成员处理方式）</title>
      <link href="/post/434dacb3.html"/>
      <url>/post/434dacb3.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-6-继承"><a href="#4-6-继承" class="headerlink" title="4.6 继承"></a>4.6 继承</h1><h2 id="4-6-5-继承同名成员处理方式"><a href="#4-6-5-继承同名成员处理方式" class="headerlink" title="4.6.5 继承同名成员处理方式"></a>4.6.5 继承同名成员处理方式</h2><p><strong>问题：</strong>当子类与父类出现同名的成员，如何通过子类对象，访问到子类或父类中同名的数据呢？</p><ul><li>访问子类同名成员 直接访问即可</li><li>访问父类同名成员 需要加作用域</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Parent</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Parent()</span><br><span class="line">    &#123;</span><br><span class="line">        m_num = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Parent父类中的func()函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span>(<span class="params"><span class="built_in">int</span> num</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Parent父类中的func(int num)函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:     </span><br><span class="line">    <span class="built_in">int</span> m_num;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Son</span> :<span class="title">public</span> <span class="title">Parent</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Son()</span><br><span class="line">    &#123;</span><br><span class="line">        m_num = <span class="number">20</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Son子类中的func()函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">int</span> m_num;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Son s;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问子类与父类同名的成员属性</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（Son）子类m_num：&quot;</span> &lt;&lt; s.m_num &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问父类与子类同名的成员属性</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（Parent）父类m_num：&quot;</span> &lt;&lt; s.Parent::m_num &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问子类与父类同名函数func()</span></span><br><span class="line">    s.func();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问父类与子类同名函数func()</span></span><br><span class="line">    s.Parent::func();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问父类与子类同名函数func(int num)</span></span><br><span class="line">    s.Parent::func(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060710155781-1024x499.jpg"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><h4 id="1-子类对象可以直接访问到子类中同名成员"><a href="#1-子类对象可以直接访问到子类中同名成员" class="headerlink" title="1.子类对象可以直接访问到子类中同名成员"></a>1.子类对象可以直接访问到子类中同名成员</h4><h4 id="2-子类对象加作用域可以访问到父类同名成员"><a href="#2-子类对象加作用域可以访问到父类同名成员" class="headerlink" title="2.子类对象加作用域可以访问到父类同名成员"></a>2.子类对象加作用域可以访问到父类同名成员</h4><h4 id="3-当子类与父类拥有同名的成员函数，子类会隐藏父类中同名成员函数，加作用域可以访问到父类中同名函数"><a href="#3-当子类与父类拥有同名的成员函数，子类会隐藏父类中同名成员函数，加作用域可以访问到父类中同名函数" class="headerlink" title="3.当子类与父类拥有同名的成员函数，子类会隐藏父类中同名成员函数，加作用域可以访问到父类中同名函数"></a>3.当子类与父类拥有同名的成员函数，子类会隐藏父类中同名成员函数，加作用域可以访问到父类中同名函数</h4>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识42：类和对象（继承-继承中构造和析构顺序）</title>
      <link href="/post/2a4be3b1.html"/>
      <url>/post/2a4be3b1.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-6-继承"><a href="#4-6-继承" class="headerlink" title="4.6 继承"></a>4.6 继承</h1><h2 id="4-6-4-继承中构造和析构顺序"><a href="#4-6-4-继承中构造和析构顺序" class="headerlink" title="4.6.4 继承中构造和析构顺序"></a>4.6.4 继承中构造和析构顺序</h2><p>子类继承父类后，当创建子类对象，也会调用父类的构造函数。</p><p>问题：父类和子类的构造和析构顺序是谁先谁后？</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Parent</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:     </span><br><span class="line"></span><br><span class="line">    Parent()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Parent 构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ~Parent()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Parent 析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Son</span> :<span class="title">public</span> <span class="title">Parent</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    Son()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Son 构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ~Son()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Son 析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//继承中的构造和析构顺序如下：</span></span><br><span class="line">    <span class="comment">//先构造父类，再构造子类，析构的顺序与构造的顺序相反。</span></span><br><span class="line">    Son s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h4><p><img src="http://image.camcad.cn/2020/06/2020060709351657-1024x505.jpg"></p><h3 id="总结：继承中-先调用父类构造函数，再调用子类构造函数，析构顺序与构造相反。"><a href="#总结：继承中-先调用父类构造函数，再调用子类构造函数，析构顺序与构造相反。" class="headerlink" title="总结：继承中 先调用父类构造函数，再调用子类构造函数，析构顺序与构造相反。"></a>总结：继承中 先调用父类构造函数，再调用子类构造函数，析构顺序与构造相反。</h3>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识41：类和对象（继承-继承中的对象模型&amp;vs开发人员命令提示符）</title>
      <link href="/post/cdbddfdd.html"/>
      <url>/post/cdbddfdd.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-6-继承"><a href="#4-6-继承" class="headerlink" title="4.6 继承"></a>4.6 继承</h1><h2 id="4-6-3-继承中的对象模型"><a href="#4-6-3-继承中的对象模型" class="headerlink" title="4.6.3 继承中的对象模型"></a>4.6.3 继承中的对象模型</h2><p><strong>问题：</strong>从父类继承过来成员，哪些属于子类对象中？</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Parent</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:     <span class="comment">//公共权限</span></span><br><span class="line">    <span class="built_in">int</span> m_A;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:  <span class="comment">//保护权限</span></span><br><span class="line">    <span class="built_in">int</span> m_B;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:    <span class="comment">//私有权限</span></span><br><span class="line">    <span class="built_in">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Son</span> :<span class="title">public</span> <span class="title">Parent</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">int</span> m_D;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用（开发人员命令提示符）工具查看对象模型</span></span><br><span class="line"><span class="comment">//跳转盘符 D：</span></span><br><span class="line"><span class="comment">//跳转文件路径 cd 具体路径下</span></span><br><span class="line"><span class="comment">//查看命名</span></span><br><span class="line"><span class="comment">//cl /d1 reportSingleClassLayout类名 &quot;文件名&quot;</span></span><br><span class="line"><span class="comment">//cl /d1 reportSingleClassLayoutSon &quot;main.cpp&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//父类中所有非静态成员属性都会被子类继承下去</span></span><br><span class="line">    <span class="comment">//父类中私有成员属性 是被编译器给隐藏了，因此是访问不到，但是确实被子类继承了</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;子类 sizeof(Son) 占用多大内存空间：&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(Son) &lt;&lt; endl;  <span class="comment">//16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060707474547-1024x408.jpg"></p><h2 id="利用工具查看："><a href="#利用工具查看：" class="headerlink" title="利用工具查看："></a>利用工具查看：</h2><p><img src="http://image.camcad.cn/2020/06/2020060708225855.jpg"> 1.打开工具窗口后，定位到当前CPP文件盘符。 2.然后输入：cl &#x2F;d1 reportSingleClassLayout查看的类名 “所属文件名”</p><h3 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060707474547-1024x408.jpg"></p><h2 id="利用工具查看：-1"><a href="#利用工具查看：-1" class="headerlink" title="利用工具查看："></a>利用工具查看：</h2><p><img src="http://image.camcad.cn/2020/06/2020060708225855.jpg"> 1.打开工具窗口后，定位到当前CPP文件盘符。 2.然后输入：cl &#x2F;d1 reportSingleClassLayout查看的类名 “所属文件名”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//利用（开发人员命令提示符）工具查看对象模型</span><br><span class="line">//1.跳转盘符：C：</span><br><span class="line">//2.跳转文件路径：cd 具体路径下</span><br><span class="line">//3.查看命名：dir</span><br><span class="line">//4.cl /d1 reportSingleClassLayout类名 &quot;文件名&quot;</span><br><span class="line">//cl /d1 reportSingleClassLayoutSon &quot;main.cpp&quot;</span><br></pre></td></tr></table></figure><h3 id="效果如下图："><a href="#效果如下图：" class="headerlink" title="效果如下图："></a>效果如下图：</h3><p><img src="http://image.camcad.cn/2020/06/2020060708345629-1024x567.jpg"></p><h3 id="结论：父类中私有成员也是被子类继承下去了，只是由编译器给隐藏后访问不到。"><a href="#结论：父类中私有成员也是被子类继承下去了，只是由编译器给隐藏后访问不到。" class="headerlink" title="结论：父类中私有成员也是被子类继承下去了，只是由编译器给隐藏后访问不到。"></a>结论：父类中私有成员也是被子类继承下去了，只是由编译器给隐藏后访问不到。</h3>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识40：类和对象（继承-继承方式）</title>
      <link href="/post/cb95e71a.html"/>
      <url>/post/cb95e71a.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-6-继承"><a href="#4-6-继承" class="headerlink" title="4.6 继承"></a>4.6 继承</h1><h2 id="4-6-2-继承方式"><a href="#4-6-2-继承方式" class="headerlink" title="4.6.2 继承方式"></a>4.6.2 继承方式</h2><p>继承的语法：class 子类 :继承方式 父类</p><h4 id="继承方式一共有三种："><a href="#继承方式一共有三种：" class="headerlink" title="继承方式一共有三种："></a>继承方式一共有三种：</h4><ul><li>公共继承（public）</li><li>保护继承（protected）</li><li>私有继承（private）</li></ul><p><img src="http://image.camcad.cn/2020/06/2020060704120821-1024x567.jpg"></p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">public:     <span class="comment">//公共权限</span></span><br><span class="line">    <span class="type">int</span> m_A;</span><br><span class="line"></span><br><span class="line">protected:  <span class="comment">//保护权限</span></span><br><span class="line">    <span class="type">int</span> m_B;</span><br><span class="line"></span><br><span class="line">private:    <span class="comment">//私有权限</span></span><br><span class="line">    <span class="type">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son01</span> :</span>public Parent</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">func</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_A = <span class="number">10</span>;       <span class="comment">//父类中的公共权限成员，到子类中依然是公共权限</span></span><br><span class="line">        m_B = <span class="number">10</span>;       <span class="comment">//父类中的保护权限成员，到子类中依然是保护权限</span></span><br><span class="line">        <span class="comment">//m_C = 10;     //父类中的私有权限成员，子类访问不了</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son02</span> :</span>protected Parent</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">func</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_A = <span class="number">10</span>;       <span class="comment">//父类中的公共权限成员，到子类中变成为保护权限</span></span><br><span class="line">        m_B = <span class="number">10</span>;       <span class="comment">//父类中的保护权限成员，到子类中依然是保护权限</span></span><br><span class="line">        <span class="comment">//m_C = 10;     //父类中的私有权限成员，子类访问不了</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son03</span> :</span>private Parent</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">func</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_A = <span class="number">10</span>;       <span class="comment">//父类中的公共权限成员，到子类中变成为私有权限</span></span><br><span class="line">        m_B = <span class="number">10</span>;       <span class="comment">//父类中的保护权限成员，到子类中变成为私有权限</span></span><br><span class="line">        <span class="comment">//m_C = 10;     //父类中的私有权限成员，子类访问不了</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Son01 s;</span><br><span class="line">    s.m_A = <span class="number">100</span>;</span><br><span class="line">    <span class="comment">//s.m_B = 100;  //错误，到Son01中 m_B是保护仅限 类外访问不了</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Son02 s;</span><br><span class="line">    <span class="comment">//s.m_A = 100;  //错误，到Son02中 m_A是保护仅限 类外访问不了</span></span><br><span class="line">    <span class="comment">//s.m_B = 100;  //错误，到Son02中 m_B是保护仅限 类外访问不了</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test03</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Son03 s;</span><br><span class="line">    <span class="comment">//s.m_A = 100;  //错误，到Son03中 m_A是私有仅限 类外访问不了</span></span><br><span class="line">    <span class="comment">//s.m_B = 100;  //错误，到Son03中 m_B是私有仅限 类外访问不了</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line">    test02();</span><br><span class="line">    test03();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识39：类和对象（继承-继承的基本语法）</title>
      <link href="/post/d92241ea.html"/>
      <url>/post/d92241ea.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-6-继承"><a href="#4-6-继承" class="headerlink" title="4.6 继承"></a>4.6 继承</h1><h4 id="继承是面向对象三大特性之一"><a href="#继承是面向对象三大特性之一" class="headerlink" title="继承是面向对象三大特性之一"></a>继承是面向对象三大特性之一</h4><p>有些类与类之间存在特殊的关系，例如下图中： <img src="http://image.camcad.cn/2020/06/2020060702392360-1024x291.jpg"> 我们发现，定义这些类时，下级别的成员除了拥有上级的共性 ，还有自己的特性。 这个时候我们就可以考虑利用继承的技术，减少重复代码。</p><h2 id="4-6-1-继承的基本语法"><a href="#4-6-1-继承的基本语法" class="headerlink" title="4.6.1 继承的基本语法"></a>4.6.1 继承的基本语法</h2><p>例如我们看到很多网站中，都有公共的头部，公共的底部，甚至公共的右侧列表，只有中心内容不同，接下来我们分别利用普通写法和继承的写法来实现网页的内容，看一下继承存在的意义以及好处。</p><h3 id="语法：class-子类-继承方式-父类"><a href="#语法：class-子类-继承方式-父类" class="headerlink" title="语法：class 子类 :继承方式 父类"></a>语法：class 子类 :继承方式 父类</h3><ul><li>子类 也称为 派生类</li><li>父类 也称为 基类</li></ul><h3 id="1-普通实现："><a href="#1-普通实现：" class="headerlink" title="1.普通实现："></a>1.普通实现：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//首页</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Home</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">header</span><span class="params">()</span>   <span class="comment">//页眉</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;首页、福利抽奖、应用软件、技术干货、视频教程、求助讨论...发布文章&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">footer</span><span class="params">()</span>   <span class="comment">//页脚</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;版权声明、网站驱动、关于网站、文章归档、网站地图...网站备案&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">right</span><span class="params">()</span>    <span class="comment">//右边</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;登录、注册、近期文章、标签云、栏目...日期&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">home</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;首页相关内容&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//福利抽奖</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Welfare</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">header</span><span class="params">()</span>   <span class="comment">//页眉</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;首页、福利抽奖、应用软件、技术干货、视频教程、求助讨论...发布文章&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">footer</span><span class="params">()</span>   <span class="comment">//页脚</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;版权声明、网站驱动、关于网站、文章归档、网站地图...网站备案&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">right</span><span class="params">()</span>    <span class="comment">//右边</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;登录、注册、近期文章、标签云、栏目...日期&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">welfare</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;福利抽奖相关内容&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//应用软件</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apps</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">header</span><span class="params">()</span>   <span class="comment">//页眉</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;首页、福利抽奖、应用软件、技术干货、视频教程、求助讨论...发布文章&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">footer</span><span class="params">()</span>   <span class="comment">//页脚</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;版权声明、网站驱动、关于网站、文章归档、网站地图...网站备案&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">right</span><span class="params">()</span>    <span class="comment">//右边</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;登录、注册、近期文章、标签云、栏目...日期&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">apps</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;应用软件相关内容&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Home h;</span><br><span class="line">    h.home();</span><br><span class="line">    h.header();</span><br><span class="line">    h.footer();</span><br><span class="line">    h.right();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    Welfare w;</span><br><span class="line">    w.welfare();</span><br><span class="line">    w.header();</span><br><span class="line">    w.footer();</span><br><span class="line">    w.right();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    Apps a;</span><br><span class="line">    a.apps();</span><br><span class="line">    a.header();</span><br><span class="line">    a.footer();</span><br><span class="line">    a.right();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060703200085-1024x718.jpg"></p><h3 id="2-继承实现："><a href="#2-继承实现：" class="headerlink" title="2.继承实现："></a>2.继承实现：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//公共页面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BasePage</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line">    <span class="type">void</span> <span class="title function_">header</span><span class="params">()</span>   <span class="comment">//页眉</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;首页、福利抽奖、应用软件、技术干货、视频教程、求助讨论...发布文章&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">footer</span><span class="params">()</span>   <span class="comment">//页脚</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;版权声明、网站驱动、关于网站、文章归档、网站地图...网站备案&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">right</span><span class="params">()</span>    <span class="comment">//右边</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;登录、注册、近期文章、标签云、栏目...日期&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//首页</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Home</span> :</span>public BasePage</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">home</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;首页相关内容&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//福利抽奖</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Welfare</span> :</span>public BasePage </span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">welfare</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;福利抽奖相关内容&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//应用软件</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apps</span> :</span>public BasePage</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">apps</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;应用软件相关内容&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Home h;</span><br><span class="line">    h.home();</span><br><span class="line">    h.header();</span><br><span class="line">    h.footer();</span><br><span class="line">    h.right();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    Welfare w;</span><br><span class="line">    w.welfare();</span><br><span class="line">    w.header();</span><br><span class="line">    w.footer();</span><br><span class="line">    w.right();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    Apps a;</span><br><span class="line">    a.apps();</span><br><span class="line">    a.header();</span><br><span class="line">    a.footer();</span><br><span class="line">    a.right();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060703200085-1024x718.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识38：类和对象（运算符重载-函数调用运算符重载）</title>
      <link href="/post/d57eb46e.html"/>
      <url>/post/d57eb46e.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-5-运算符重载"><a href="#4-5-运算符重载" class="headerlink" title="4.5 运算符重载"></a>4.5 运算符重载</h1><h2 id="4-5-6-函数调用运算符重载"><a href="#4-5-6-函数调用运算符重载" class="headerlink" title="4.5.6 函数调用运算符重载"></a>4.5.6 函数调用运算符重载</h2><ul><li>函数调用运算符( ) 也可以重载</li><li>由于重载后使用的方式非常像函数的调用，因此称为仿函数</li><li>仿函数没有固定的写法，非常灵活</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Prtson</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//函数调用运算符重载</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">operator</span><span class="params">()</span><span class="params">(<span class="built_in">string</span>  name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    <span class="built_in">string</span> m_name;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyAdd</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">operator</span><span class="params">()</span><span class="params">(<span class="type">int</span> num01, <span class="type">int</span> num02)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> num01 + num02;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//重载的 ( )操作符 也称为仿函数</span></span><br><span class="line">    Prtson p;</span><br><span class="line">    p(<span class="string">&quot;test01 hello world&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    MyAdd add;</span><br><span class="line">    <span class="type">int</span> ret = add(<span class="number">20</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;test02 ret= &quot;</span> &lt;&lt; ret &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//匿名函数对象</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;test02 匿名函数对象= &quot;</span> &lt;&lt; MyAdd()(<span class="number">100</span>, <span class="number">212</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line">    test02();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060702022259-1024x426.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识37：类和对象（运算符重载-关系运算符重载）</title>
      <link href="/post/15ab8371.html"/>
      <url>/post/15ab8371.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-5-运算符重载"><a href="#4-5-运算符重载" class="headerlink" title="4.5 运算符重载"></a>4.5 运算符重载</h1><h2 id="4-5-5-关系运算符重载"><a href="#4-5-5-关系运算符重载" class="headerlink" title="4.5.5 关系运算符重载"></a>4.5.5 关系运算符重载</h2><p><strong>作用：</strong>重载关系运算符，可以让两个自定义类型对象进行对比操作。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Prtson</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line">    Prtson(<span class="built_in">string</span> name, <span class="type">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        m_name = name;</span><br><span class="line">        m_age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//相等重载</span></span><br><span class="line">    <span class="type">bool</span> operator==(Prtson &amp;p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (this-&gt;m_name == p.m_name &amp;&amp; this-&gt;m_age == p.m_age)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不相等重载</span></span><br><span class="line">    <span class="type">bool</span> operator!=(Prtson &amp;p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (this-&gt;m_name == p.m_name &amp;&amp; this-&gt;m_age == p.m_age)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    <span class="built_in">string</span> m_name;</span><br><span class="line">    <span class="type">int</span> m_age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Prtson <span class="title function_">p1</span><span class="params">(<span class="string">&quot;张三&quot;</span>, <span class="number">18</span>)</span>;</span><br><span class="line">    Prtson <span class="title function_">p2</span><span class="params">(<span class="string">&quot;张三&quot;</span>, <span class="number">18</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (p1 == p2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;两个类的属性相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;两个类的属性不相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (p1 != p2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;两个类的属性不相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;两个类的属性相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060615295788-1024x456.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识36：类和对象（运算符重载-赋值运算符重载）</title>
      <link href="/post/261c09c2.html"/>
      <url>/post/261c09c2.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-5-运算符重载"><a href="#4-5-运算符重载" class="headerlink" title="4.5 运算符重载"></a>4.5 运算符重载</h1><h2 id="4-5-4-赋值运算符重载"><a href="#4-5-4-赋值运算符重载" class="headerlink" title="4.5.4 赋值运算符重载"></a>4.5.4 赋值运算符重载</h2><p>C++编译器至少给一个类添加4个函数：</p><ul><li>1.默认构造函数（无参，函数体为空）</li><li>2.默认析构函数（无参，函数体为空）</li><li>3.默认拷贝函数，对属性进行值拷贝</li><li>4.赋值运算符 operator&#x3D;，对属性进行值拷贝</li></ul><p>如果类中有属性指向堆区，做赋值操作时也会出现深浅拷贝问题。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyInteger</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    MyInteger(<span class="type">int</span> num)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将数据开辟到堆区</span></span><br><span class="line">        m_num = new <span class="type">int</span>(num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    MyInteger&amp; operator=(MyInteger &amp;myinteger)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//m_num = myinteger.m_num;      //错误，编译器提供的是浅拷贝</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//应该先判断是否有属性在堆区，如果有先释放干净，然后再深拷贝</span></span><br><span class="line">        <span class="keyword">if</span> (m_num != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            delete m_num;</span><br><span class="line">            m_num = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//提供深拷贝，解决浅拷贝的问题</span></span><br><span class="line">        m_num = new <span class="type">int</span>(*myinteger.m_num);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//返回自身</span></span><br><span class="line">        <span class="keyword">return</span> *this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ~MyInteger()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m_num != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            delete m_num;</span><br><span class="line">            m_num = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> *m_num;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    MyInteger <span class="title function_">p01</span><span class="params">(<span class="number">15</span>)</span>;</span><br><span class="line">    MyInteger <span class="title function_">p02</span><span class="params">(<span class="number">10</span>)</span>;</span><br><span class="line">    MyInteger <span class="title function_">p03</span><span class="params">(<span class="number">20</span>)</span>;</span><br><span class="line"></span><br><span class="line">    p02 = p01 = p03;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *p02.m_num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060611053696-1024x388.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识35：类和对象（运算符重载-递增运算符重载）</title>
      <link href="/post/1cbfd86.html"/>
      <url>/post/1cbfd86.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-5-运算符重载"><a href="#4-5-运算符重载" class="headerlink" title="4.5 运算符重载"></a>4.5 运算符重载</h1><h2 id="4-5-3-递增运算符重载"><a href="#4-5-3-递增运算符重载" class="headerlink" title="4.5.3 递增运算符重载"></a>4.5.3 递增运算符重载</h2><p><strong>作用：</strong>通过重载递增运算符，实现自己的整形数据。</p><h3 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h3><p><img src="http://image.camcad.cn/2020/06/2020060608401739-1024x697.jpg"></p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyInteger</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    friend ostream&amp; operator&lt;&lt;(ostream &amp;out, MyInteger p1);</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    MyInteger()</span><br><span class="line">    &#123;</span><br><span class="line">        m_num = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重载前置++运算符，返回引用为了一直对一个数据进行递增操作</span></span><br><span class="line">    MyInteger&amp; operator++()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//先进行++运算</span></span><br><span class="line">        m_num++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//再返回自身</span></span><br><span class="line">        <span class="keyword">return</span> *this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重载后置++运算符</span></span><br><span class="line">    <span class="comment">//  MyInteger operator++(int) int代表占位参数，可以用于区分前置和后置递增</span></span><br><span class="line">    MyInteger operator++(<span class="type">int</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//先 记录当时结果</span></span><br><span class="line">        MyInteger tmap = *this;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//后 递增</span></span><br><span class="line">        m_num++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//再返回</span></span><br><span class="line">        <span class="keyword">return</span> tmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    <span class="type">int</span> m_num;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局函数实现左移重载（ &lt;&lt; ）</span></span><br><span class="line"><span class="comment">//ostream对象只能有一个</span></span><br><span class="line">ostream&amp; operator&lt;&lt;(ostream &amp;out, MyInteger p1)   <span class="comment">//本质 operator&lt;&lt;(cout,p),简化 cout&lt;&lt;p;</span></span><br><span class="line">&#123;</span><br><span class="line">    out &lt;&lt; p1.m_num;</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    MyInteger a;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;前置++运算：&quot;</span> &lt;&lt; ++a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;前置++运算 结果：&quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    MyInteger a;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;后置++运算：&quot;</span> &lt;&lt; a++ &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;后置++运算 结果：&quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line">    test02();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060608421773-1024x457.jpg"></p><h2 id="递减运算符重载"><a href="#递减运算符重载" class="headerlink" title="递减运算符重载"></a>递减运算符重载</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyInteger</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    friend ostream&amp; operator&lt;&lt;(ostream &amp;out, MyInteger p1);</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    MyInteger()</span><br><span class="line">    &#123;</span><br><span class="line">        m_num = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重载前置--运算符</span></span><br><span class="line">    MyInteger&amp; operator--()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//先进行--运算</span></span><br><span class="line">        m_num--;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//再返回自身</span></span><br><span class="line">        <span class="keyword">return</span> *this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重载后置--运算符</span></span><br><span class="line">    MyInteger operator--(<span class="type">int</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//先 记录当时结果</span></span><br><span class="line">        MyInteger tmap = *this;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//后 递减</span></span><br><span class="line">        m_num--;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//再返回</span></span><br><span class="line">        <span class="keyword">return</span> tmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    <span class="type">int</span> m_num;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局函数实现左移重载（ &lt;&lt; ）</span></span><br><span class="line"><span class="comment">//ostream对象只能有一个</span></span><br><span class="line">ostream&amp; operator&lt;&lt;(ostream &amp;out, MyInteger p1)   <span class="comment">//本质 operator&lt;&lt;(cout,p),简化 cout&lt;&lt;p;</span></span><br><span class="line">&#123;</span><br><span class="line">    out &lt;&lt; p1.m_num;</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    MyInteger a;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;test01 前置++运算：&quot;</span> &lt;&lt; --a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;test01 前置++运算 结果：&quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    MyInteger a;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;test02 后置++运算：&quot;</span> &lt;&lt; a-- &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;test02 后置++运算 结果：&quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line">    test02();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/202006060849217-1024x480.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识34：类和对象（运算符重载-左移运算符重载）</title>
      <link href="/post/c2b29a2.html"/>
      <url>/post/c2b29a2.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-5-运算符重载"><a href="#4-5-运算符重载" class="headerlink" title="4.5 运算符重载"></a>4.5 运算符重载</h1><h2 id="4-5-2-左移运算符重载"><a href="#4-5-2-左移运算符重载" class="headerlink" title="4.5.2 左移运算符重载"></a>4.5.2 左移运算符重载</h2><p><strong>作用：</strong>可以输出自定义数据类型。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Prtson</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    friend ostream&amp; operator&lt;&lt;(ostream &amp;out, Prtson &amp;p1);</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    Prtson(<span class="type">int</span> a,<span class="type">int</span> b)</span><br><span class="line">    &#123;</span><br><span class="line">        m_A = a;</span><br><span class="line">        m_B = b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//错误，成员函数实现不了 p &lt;&lt; cout 不是我们想要的效果</span></span><br><span class="line">    <span class="comment">//void operator&lt;&lt;(Prtson &amp;p) &#123;&#125;</span></span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    <span class="type">int</span> m_A;</span><br><span class="line">    <span class="type">int</span> m_B;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局函数实现左移重载（ &lt;&lt; ）</span></span><br><span class="line"><span class="comment">//ostream对象只能有一个</span></span><br><span class="line">ostream&amp; operator&lt;&lt;(ostream &amp;out, Prtson &amp;p1) <span class="comment">//本质 operator&lt;&lt;(cout,p),简化 cout&lt;&lt;p;</span></span><br><span class="line">&#123;</span><br><span class="line">    out &lt;&lt; <span class="string">&quot;m_A：&quot;</span> &lt;&lt; p1.m_A &lt;&lt; <span class="string">&quot;\nm_b：&quot;</span> &lt;&lt; p1.m_B;  </span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Prtson <span class="title function_">p</span><span class="params">(<span class="number">10</span>,<span class="number">20</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; p &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//链式编程</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060607130085.jpg"></p><h3 id="总结：重载左移运算符配合友元可以实现输出自定义数据类型。"><a href="#总结：重载左移运算符配合友元可以实现输出自定义数据类型。" class="headerlink" title="总结：重载左移运算符配合友元可以实现输出自定义数据类型。"></a>总结：重载左移运算符配合友元可以实现输出自定义数据类型。</h3>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识33：类和对象（运算符重载-加号运算符重载）</title>
      <link href="/post/a06479a2.html"/>
      <url>/post/a06479a2.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-5-运算符重载"><a href="#4-5-运算符重载" class="headerlink" title="4.5 运算符重载"></a>4.5 运算符重载</h1><p>运算符重载概念：对已有的运算符重新进行定义，赋予其另一种功能，以适应不同的数据类型。</p><h2 id="4-5-1-加号运算符重载"><a href="#4-5-1-加号运算符重载" class="headerlink" title="4.5.1 加号运算符重载"></a>4.5.1 加号运算符重载</h2><p><strong>作用：</strong>实现两个自定义数据类型相加的运算，关键字（<strong>operator</strong>）。</p><h3 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h3><p><a href="http://image.camcad.cn/2020/06/2020060603021327.jpg"><img src="http://image.camcad.cn/2020/06/2020060603021327-1024x422.jpg"></a></p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Prtson</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    //1.通过成员函数重载+号（operator）</span></span><br><span class="line"><span class="comment">    Prtson operator+(Prtson &amp;p)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        Prtson temp;</span></span><br><span class="line"><span class="comment">        temp.m_A = this-&gt;m_A + p.m_A;</span></span><br><span class="line"><span class="comment">        temp.m_B = this-&gt;m_B + p.m_B;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        return temp;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> m_A;</span><br><span class="line">    <span class="type">int</span> m_B;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.通过全局函数重载+号</span></span><br><span class="line">Prtson operator+(Prtson &amp;p1, Prtson &amp;p2)</span><br><span class="line">&#123;</span><br><span class="line">    Prtson temp;</span><br><span class="line">    temp.m_A = p1.m_A + p2.m_A;</span><br><span class="line">    temp.m_B = p1.m_B + p2.m_B;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.类和变量重载+号</span></span><br><span class="line">Prtson operator+(Prtson &amp;p1, <span class="type">int</span> num)</span><br><span class="line">&#123;</span><br><span class="line">    Prtson temp;</span><br><span class="line">    temp.m_A = p1.m_A + num;</span><br><span class="line">    temp.m_B = p1.m_B + num;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Prtson p1;</span><br><span class="line">    p1.m_A = <span class="number">10</span>;</span><br><span class="line">    p1.m_B = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    Prtson p2;</span><br><span class="line">    p2.m_A = <span class="number">10</span>;</span><br><span class="line">    p2.m_B = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员函数重载本质调用</span></span><br><span class="line">    <span class="comment">//Prtson p3 = p1.operator+(p2);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//全局函数重载本质调用</span></span><br><span class="line">    <span class="comment">//Prtson p3 = operator+(p1, p2);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//简化调用</span></span><br><span class="line">    Prtson p3 = p1 + p2;    </span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通过成员函数重载+号 p3.m_A：&quot;</span> &lt;&lt; p3.m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通过成员函数重载+号 p3.m_B：&quot;</span> &lt;&lt; p3.m_B &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    Prtson p4 = p1 + <span class="number">200</span>;   <span class="comment">//相当于 operator+(p1,10);</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;类和变量重载+号 p4.m_A：&quot;</span> &lt;&lt; p4.m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;类和变量重载+号 p4.m_B：&quot;</span> &lt;&lt; p4.m_B &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);    <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060604240720-1024x500.jpg"></p><h3 id="总结1：对于内置数据类型的表达式，运算符是不可能改变的。"><a href="#总结1：对于内置数据类型的表达式，运算符是不可能改变的。" class="headerlink" title="总结1：对于内置数据类型的表达式，运算符是不可能改变的。"></a>总结1：对于内置数据类型的表达式，运算符是不可能改变的。</h3><h3 id="总结2：不要滥用运算符重载。"><a href="#总结2：不要滥用运算符重载。" class="headerlink" title="总结2：不要滥用运算符重载。"></a>总结2：不要滥用运算符重载。</h3>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识32：类和对象（友元-成员函数做友元）</title>
      <link href="/post/dc731654.html"/>
      <url>/post/dc731654.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-4-友元"><a href="#4-4-友元" class="headerlink" title="4.4 友元"></a>4.4 友元</h1><h3 id="4-4-3-成员函数做友元"><a href="#4-4-3-成员函数做友元" class="headerlink" title="4.4.3 成员函数做友元"></a>4.4.3 成员函数做友元</h3><p>让void goodGay::Visit01()函数访问Building类中的私有属性，函数前面需加<strong>friend</strong>关键字。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span>;</span> <span class="comment">//在调用之前需加 声明</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">goodGay</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    goodGay();</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">Visit01</span><span class="params">()</span>; <span class="comment">//参观函数 访问Building中的属性</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">Visit02</span><span class="params">()</span>; </span><br><span class="line"></span><br><span class="line">    ~goodGay()</span><br><span class="line">    &#123;</span><br><span class="line">        delete building;</span><br><span class="line">        building = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    Building *building;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//告诉编译器，goodGay::Visit01()函数是Building类的好朋友，可以访问到Building类中的私有内容</span></span><br><span class="line">    friend <span class="type">void</span> <span class="title function_">goodGay::Visit01</span><span class="params">()</span>; <span class="comment">//参观函数 访问Building中的属性</span></span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    Building();</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    <span class="built_in">string</span> m_SittingRoom;       <span class="comment">//客厅</span></span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    <span class="built_in">string</span> m_BedRoom;           <span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Building::Building()</span><br><span class="line">&#123;</span><br><span class="line">    m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">    m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">goodGay::goodGay()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建建筑物对象</span></span><br><span class="line">    building = new Building;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">goodGay::Visit01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Visit01 好基友全局函数 正在访问：&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Visit01 好基友全局函数 正在访问：&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">goodGay::Visit02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Visit02 好基友全局函数 正在访问：&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    goodGay gay;</span><br><span class="line">    gay.Visit01();</span><br><span class="line">    gay.Visit02();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060602274528-1024x467.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识31：类和对象（友元-类做友元）</title>
      <link href="/post/d307b743.html"/>
      <url>/post/d307b743.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-4-友元"><a href="#4-4-友元" class="headerlink" title="4.4 友元"></a>4.4 友元</h1><h2 id="4-4-2-类做友元"><a href="#4-4-2-类做友元" class="headerlink" title="4.4.2 类做友元"></a>4.4.2 类做友元</h2><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span>;</span> <span class="comment">//在调用之前需加 声明</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">goodGay</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    goodGay();</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">Visit</span><span class="params">()</span>;   <span class="comment">//参观函数 访问Building中的属性</span></span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    Building *building;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//告诉编译器，goodGay类是Building类的好朋友，可以访问到Building类中的私有内容</span></span><br><span class="line">    friend <span class="class"><span class="keyword">class</span> <span class="title">goodGay</span>;</span></span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    Building();</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    <span class="built_in">string</span> m_SittingRoom;       <span class="comment">//客厅</span></span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    <span class="built_in">string</span> m_BedRoom;           <span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Building::Building()</span><br><span class="line">&#123;</span><br><span class="line">    m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">    m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">goodGay::goodGay()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建建筑物对象</span></span><br><span class="line">    building = new Building;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">goodGay::Visit</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友全局函数 正在访问：&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友全局函数 正在访问：&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    goodGay gay;</span><br><span class="line">    gay.Visit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060601265210-1024x489.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识30：类和对象（友元-全局函数做友元）</title>
      <link href="/post/54dc0ab8.html"/>
      <url>/post/54dc0ab8.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-4-友元"><a href="#4-4-友元" class="headerlink" title="4.4 友元"></a>4.4 友元</h1><p>生活中你的家有客厅（Public），有你的卧室（Private）。 客厅所有来的客人都可以进去，但是你的卧室是私有的，也就是説只有你能进去，但是呢，你也可以允许你的好闺蜜或者好基友进去。 在程序里，有些私有属性也想让类外特殊的一些函数或者类进行访问，就需要用到友元的技术，友元的目的就是让一个函数或者类访问另一个类中私有成员。</p><p>友元的三种实现：</p><ul><li>全局函数做友元</li><li>类做友元</li><li>成员函数做友元</li></ul><h2 id="全局函数做友元"><a href="#全局函数做友元" class="headerlink" title="全局函数做友元"></a>全局函数做友元</h2><p>友元的关键字为 <strong>friend</strong></p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//goodGay全局函数是Building好朋友，可以访问Building中私有成员。</span></span><br><span class="line">    friend <span class="type">void</span> <span class="title function_">goodGay</span><span class="params">(Building *building)</span>;    <span class="comment">//访问函数前需加（friend）关键字</span></span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    Building()</span><br><span class="line">    &#123;</span><br><span class="line">        m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">        m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    <span class="built_in">string</span> m_SittingRoom;       <span class="comment">//客厅</span></span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    <span class="built_in">string</span> m_BedRoom;           <span class="comment">//卧室</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">goodGay</span><span class="params">(Building *building)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友全局函数 正在访问：&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友全局函数 正在访问：&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Building b;</span><br><span class="line">    goodGay(&amp;b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060515314799-1024x501.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识29：类和对象（C++对象模型和this指针-const修饰成员函数）</title>
      <link href="/post/3e7e5462.html"/>
      <url>/post/3e7e5462.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-3-C-对象模型和this指针"><a href="#4-3-C-对象模型和this指针" class="headerlink" title="4.3 C++对象模型和this指针"></a>4.3 C++对象模型和this指针</h1><h2 id="4-3-4-const修饰成员函数"><a href="#4-3-4-const修饰成员函数" class="headerlink" title="4.3.4 const修饰成员函数"></a>4.3.4 const修饰成员函数</h2><h3 id="常函数"><a href="#常函数" class="headerlink" title="常函数"></a>常函数</h3><ul><li>成员函数后加const后我们称为这个函数为<strong>常函数</strong>。</li><li>常函数内不可以修改成员属性。</li><li>成员属性声明时加关键字mutable后，在常函数中依然可以修改。</li></ul><h3 id="常对象："><a href="#常对象：" class="headerlink" title="常对象："></a>常对象：</h3><ul><li>声明对象前加const称该对象为常对象。</li><li>常对象只能调用常函数。</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//this指针的本质 是指针常量 指针的指向是不可以修改的</span></span><br><span class="line">    <span class="comment">//const Person * const this;</span></span><br><span class="line">    <span class="comment">//在成员函数后面加const，修饰的是this指向，让指针指向的值也不可以修改</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">showPerson</span><span class="params">()</span> <span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        this-&gt;m_age = <span class="number">18</span>;</span><br><span class="line">        <span class="comment">//this-&gt;m_id = 10001;    //错误，const修饰的this指向的值不可以修改</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">test02</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> m_id;   </span><br><span class="line">    mutable <span class="type">int</span> m_age;  <span class="comment">//特殊变量（mutable），即使在常函数中，也可以修改这个值，加关键字mutble</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//常函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Person p;</span><br><span class="line">    p.showPerson();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//常对象</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">const</span> Person p; <span class="comment">//在对象前加const，变为常对象</span></span><br><span class="line">    <span class="comment">//p.m_id = 1001;    //错误</span></span><br><span class="line">    p.m_age = <span class="number">28</span>;   <span class="comment">//m_age是特殊值，在常对象下也可以修改</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//常对象只能调用常函数</span></span><br><span class="line">    p.showPerson();</span><br><span class="line">    <span class="comment">//p.test02();   //错误，常对象 不可以调用普通成员函数，因为普通成员函数可以修改属性</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//test01();</span></span><br><span class="line">    test02();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识28：类和对象（C++对象模型和this指针-空指针访问成员函数）</title>
      <link href="/post/bb043411.html"/>
      <url>/post/bb043411.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-3-C-对象模型和this指针"><a href="#4-3-C-对象模型和this指针" class="headerlink" title="4.3 C++对象模型和this指针"></a>4.3 C++对象模型和this指针</h1><h2 id="4-3-3-空指针访问成员函数"><a href="#4-3-3-空指针访问成员函数" class="headerlink" title="4.3.3 空指针访问成员函数"></a>4.3.3 空指针访问成员函数</h2><p>C++中空指针也是可以调用成员函数的，但是也要注意有没有用到this指针。</p><p>如果用到this指针，需要加以判断保证代码的健壮性。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">showClassName</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;this is class&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">showClassAge</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//报错原因：因为传入的指针为NULL（所以需要加以下判断）</span></span><br><span class="line">        <span class="keyword">if</span> (this == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;年龄为：&quot;</span> &lt;&lt; m_age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> m_age;  <span class="comment">//年龄</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Person *p = <span class="literal">NULL</span>;   <span class="comment">//创建指针时，需要初始化（NULL）</span></span><br><span class="line">    p-&gt;showClassName();</span><br><span class="line">    p-&gt;showClassAge();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060511190471-1024x441.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识27：类和对象（C++对象模型和this指针-this指针概念）</title>
      <link href="/post/49bdc38e.html"/>
      <url>/post/49bdc38e.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-3-C-对象模型和this指针"><a href="#4-3-C-对象模型和this指针" class="headerlink" title="4.3 C++对象模型和this指针"></a>4.3 C++对象模型和this指针</h1><h2 id="4-3-2-this指针概念"><a href="#4-3-2-this指针概念" class="headerlink" title="4.3.2 this指针概念"></a>4.3.2 this指针概念</h2><ul><li>通过4.3.1我们知道在C++中成员变量和成员函数是分开存储的。</li><li>每一个非静态成员函数只会诞生一份函数实例，也就是说多个同类型的对象会共用一份代码。</li><li>那么问题是：这一份代码是如何区分那个对象调用自己的呢？</li></ul><p>C++通过提供特殊的对象指针，this指针，解决上述问题。<strong>this指针指向被调用的成员函数所属的对象</strong>。</p><p>this指针是隐含每一个非静态成员函数内的一种指针。 this指针不需要定义，直接使用即可。</p><p>this指针的用途：</p><ul><li>当形参和成员变量同名时，可用this指针来区分。</li><li>在类的非静态成员函数中返回对象本身，可使用return *this</li></ul><h3 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//成员变量 和 成员函数 占用内存是分开存储</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.解决名称冲突问题</span></span><br><span class="line">    Person(<span class="type">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        this-&gt;age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.在类的非静态成员函数中返回对象本身，可使用return *this</span></span><br><span class="line">    Person&amp; <span class="title function_">PersonAddAge</span><span class="params">(Person p)</span></span><br><span class="line">    &#123;</span><br><span class="line">        this-&gt;age += p.age;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> *this;   <span class="comment">//返回对象本身</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> age;    <span class="comment">//年龄</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.解决名称冲突问题</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Person <span class="title function_">p</span><span class="params">(<span class="number">18</span>)</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p的年龄：&quot;</span> &lt;&lt; p.age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.在类的非静态成员函数中返回对象本身，可使用return *this</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Person <span class="title function_">p1</span><span class="params">(<span class="number">10</span>)</span>;</span><br><span class="line">    Person <span class="title function_">p2</span><span class="params">(<span class="number">10</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//链式编程思想</span></span><br><span class="line">    p2.PersonAddAge(p1).PersonAddAge(p1).PersonAddAge(p1);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p2的年龄：&quot;</span> &lt;&lt;p2.age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//test01();</span></span><br><span class="line">    test02();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060509253913-1024x408.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识26：类和对象（C++对象模型和this指针-成员变量和成员函数分开存储）</title>
      <link href="/post/be27d4eb.html"/>
      <url>/post/be27d4eb.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-3-C-对象模型和this指针"><a href="#4-3-C-对象模型和this指针" class="headerlink" title="4.3 C++对象模型和this指针"></a>4.3 C++对象模型和this指针</h1><h2 id="4-3-1-成员变量和成员函数分开存储"><a href="#4-3-1-成员变量和成员函数分开存储" class="headerlink" title="4.3.1 成员变量和成员函数分开存储"></a>4.3.1 成员变量和成员函数分开存储</h2><p>C++中，类内的成员变量和成员函数分开存储。 只有非静态成员变量才属于类的对象上。</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//成员变量 和 成员函数 占用内存是分开存储</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person01</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person02</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> m_A;            <span class="comment">//非静态成员变量，属于类的对象上</span></span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> m_B;     <span class="comment">//静态成员变量，不属于类的对象上</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">func01</span><span class="params">()</span> &#123;&#125;    <span class="comment">//非静态成员函数，不属于类的对象上</span></span><br><span class="line">    <span class="type">static</span> <span class="type">void</span> <span class="title function_">func02</span><span class="params">()</span> &#123;&#125;     <span class="comment">//静态成员函数，不属于类的对象上   </span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//空类，占用一个字节大小的内存空间</span></span><br><span class="line">    Person01 p;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person01占用内存空间大小：&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(p) &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    Person02 p2;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person02占用内存空间大小：&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(p2) &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060508284674-1024x522.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识25：类和对象（对象的初始化和清理-静态成员）</title>
      <link href="/post/9c9825a3.html"/>
      <url>/post/9c9825a3.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-2-对象初始化和清理"><a href="#4-2-对象初始化和清理" class="headerlink" title="4.2 对象初始化和清理"></a>4.2 对象初始化和清理</h1><h2 id="4-2-8-静态成员"><a href="#4-2-8-静态成员" class="headerlink" title="4.2.8 静态成员"></a>4.2.8 静态成员</h2><p>静态成员就是在成员变量和成员函数前加上关键字static，称为静态成员。</p><h2 id="静态成员分为："><a href="#静态成员分为：" class="headerlink" title="静态成员分为："></a>静态成员分为：</h2><h3 id="静态成员变量："><a href="#静态成员变量：" class="headerlink" title="静态成员变量："></a>静态成员变量：</h3><ul><li>所有对象共享同一份数据</li><li>在编译阶段分配内存</li><li>类内声明，类外初始化</li></ul><h3 id="静态成员函数"><a href="#静态成员函数" class="headerlink" title="静态成员函数"></a>静态成员函数</h3><ul><li>所有对象共享同一个函数</li><li>静态成员函数只能访问静态成员变量</li></ul><h3 id="示例1：静态成员变量"><a href="#示例1：静态成员变量" class="headerlink" title="示例1：静态成员变量"></a>示例1：静态成员变量</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> m_A;     <span class="comment">//静态成员变量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    静态成员变量特点：</span></span><br><span class="line"><span class="comment">        1.在编译阶段分配内存</span></span><br><span class="line"><span class="comment">        2.类内声明，类外初始化</span></span><br><span class="line"><span class="comment">        3.所有对象共享同一份数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> m_B;     <span class="comment">//静态成员变量也是有访问权限</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.类内声明，类外初始化</span></span><br><span class="line"><span class="type">int</span> Person::m_A = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> Person::m_B = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="comment">//静态成员变量两种访问方式</span></span><br><span class="line">    <span class="comment">//1.通过这对象</span></span><br><span class="line">    Person p1;</span><br><span class="line">    p1.m_A = <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p1.m_A静态成员变量：&quot;</span> &lt;&lt; p1.m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    Person p2;</span><br><span class="line">    p2.m_A = <span class="number">200</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p1.m_A静态成员变量：&quot;</span> &lt;&lt; p1.m_A &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//共享同一份数据</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p2.m_A静态成员变量：&quot;</span> &lt;&lt; p2.m_A &lt;&lt; <span class="built_in">endl</span>;  </span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过类名访问</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;m_A静态成员变量：&quot;</span> &lt;&lt;Person::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//cout &lt;&lt; &quot;m_B静态成员变量：&quot; &lt;&lt; Person::m_B &lt;&lt; endl;  //错误，私有权限无法访问</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060507280754-1024x492.jpg"></p><h3 id="示例2：静态成员函数"><a href="#示例2：静态成员函数" class="headerlink" title="示例2：静态成员函数"></a>示例2：静态成员函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    静态成员函数特点：</span></span><br><span class="line"><span class="comment">        1.程序共享一个函数</span></span><br><span class="line"><span class="comment">        2.静态成员函数只能访问静态成员变量</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="type">static</span> <span class="type">void</span> <span class="title function_">func</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func函数调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        m_A = <span class="number">100</span>;</span><br><span class="line">        <span class="comment">//m_B = 100;        //错误，不可以访问非静态成员变量</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> m_A;     <span class="comment">//静态成员变量</span></span><br><span class="line">    <span class="type">int</span> m_B;</span><br><span class="line">private:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态成员函数也是有访问权限</span></span><br><span class="line">    <span class="type">static</span> <span class="type">void</span> <span class="title function_">func02</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func02函数调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//类内声明，类外初始化</span></span><br><span class="line"><span class="type">int</span> Person::m_A = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="comment">//1.静态成员变量两种访问方式</span></span><br><span class="line">    Person p1;</span><br><span class="line">    p1.func();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.通过类名</span></span><br><span class="line">    Person::func();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Person::func02(); //错误，私有权限无法访问</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下：-1"><a href="#以上代码编译执行结果如下：-1" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060507464274-1024x485.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识24：类和对象（对象的初始化和清理-类对象作为类成员）</title>
      <link href="/post/10048791.html"/>
      <url>/post/10048791.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-2-对象的初始化和清理"><a href="#4-2-对象的初始化和清理" class="headerlink" title="4.2 对象的初始化和清理"></a>4.2 对象的初始化和清理</h1><h2 id="4-2-7-类对象作为类成员"><a href="#4-2-7-类对象作为类成员" class="headerlink" title="4.2.7 类对象作为类成员"></a>4.2.7 类对象作为类成员</h2><p>C++类中的成员可以是另一个类的对象，我们称该成员为对象成员。 </p><p><strong>例如：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span> &#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    A a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>B类中有对象A作为成员，A为对象成员。 那么当创建B对象时，A与B的构造和析构的顺序是谁先谁后？</p><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    Phone(<span class="built_in">string</span> name):m_PName(name)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Phone 构造函数调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~Phone() </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Phoen 析构函数调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> m_PName;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//公共权限</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    Person(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> age, <span class="built_in">string</span> phone) :m_Id(id), m_Name(name), m_Age(age), m_Phone(phone)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person 构造函数调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~Person()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person 析构函数调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> m_Id;           <span class="comment">//序号</span></span><br><span class="line">    <span class="built_in">string</span> m_Name;      <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> m_Age;          <span class="comment">//年龄</span></span><br><span class="line">    Phone m_Phone;      <span class="comment">//手机</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Person <span class="title function_">p</span><span class="params">(<span class="number">1001</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">18</span>, <span class="string">&quot;华为P40PRO&quot;</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;序号：&quot;</span> &lt;&lt; p.m_Id &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; p.m_Name &lt;&lt; <span class="string">&quot;\t年龄：&quot;</span> &lt;&lt; p.m_Age &lt;&lt; <span class="string">&quot;\t手机：&quot;</span> &lt;&lt; p.m_Phone.m_PName &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060506103964-1024x405.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识23：类和对象（对象的初始化和清理-初始化列表）</title>
      <link href="/post/92cfe06a.html"/>
      <url>/post/92cfe06a.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-2-对象的初始化和清"><a href="#4-2-对象的初始化和清" class="headerlink" title="4.2 对象的初始化和清"></a>4.2 对象的初始化和清</h1><h2 id="4-2-6-初始化列表"><a href="#4-2-6-初始化列表" class="headerlink" title="4.2.6 初始化列表"></a>4.2.6 初始化列表</h2><p><strong>作用：</strong> C++提供了初始化列表语法，用来初始化属性。 </p><p><strong>语法：</strong>构造函数( ):属性1( 值1 ),属性2( 值1 ),…{ }</p><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//公共权限</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    Person(<span class="type">int</span> id, <span class="built_in">string</span> name, <span class="type">int</span> age) :m_Id(id), m_Name(name), m_Age(age)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~Person()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有权限</span></span><br><span class="line"><span class="comment">//private:</span></span><br><span class="line">    <span class="type">int</span> m_Id;           <span class="comment">//序号</span></span><br><span class="line">    <span class="built_in">string</span> m_Name;      <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> m_Age;          <span class="comment">//年龄</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Person <span class="title function_">p</span><span class="params">(<span class="number">1001</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">18</span>)</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;序号：&quot;</span> &lt;&lt; p.m_Id &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; p.m_Name &lt;&lt; <span class="string">&quot;\t年龄：&quot;</span> &lt;&lt; p.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060505450862-1024x432.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识22：类和对象（对象的初始化和清理-深拷贝与浅拷贝）</title>
      <link href="/post/f261c562.html"/>
      <url>/post/f261c562.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-2-对象的初始化和清理"><a href="#4-2-对象的初始化和清理" class="headerlink" title="4.2 对象的初始化和清理"></a>4.2 对象的初始化和清理</h1><h2 id="4-2-5-深拷贝与浅拷贝"><a href="#4-2-5-深拷贝与浅拷贝" class="headerlink" title="4.2.5 深拷贝与浅拷贝"></a>4.2.5 深拷贝与浅拷贝</h2><p><strong>深浅拷贝是面试经典问题，也是常见的一个坑</strong></p><p><strong>浅拷贝：</strong>简单的赋值拷贝操作<br><strong>深拷贝：</strong>在堆区重新申请空间，进行拷贝操作 </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//公共权限</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">Person()<span class="comment">//无参构造（默认构造/普通构造）</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person 无参构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person(<span class="type">int</span> age,<span class="type">int</span> height)<span class="comment">//有参构造（普通构造）</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person 有参构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">m\_Age = age;</span><br><span class="line">m\_Height = new <span class="type">int</span>(height);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person(<span class="type">const</span> Person &amp;p)<span class="comment">//拷贝构造</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person 拷贝构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">m\_Age = p.m\_Age;</span><br><span class="line">                <span class="comment">//m\_Height = p.m\_Height;//错误，编译器默认生成的代码</span></span><br><span class="line">m\_Height = new <span class="type">int</span>(\*p.m\_Height);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~Person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 析构函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">if</span> (m\_Height !=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">delete m\_Height;</span><br><span class="line">m\_Height = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line"><span class="type">int</span> m\_Age;<span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> \*m\_Height;<span class="comment">//身高</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Person <span class="title function_">p1</span><span class="params">(<span class="number">18</span>, <span class="number">170</span>)</span>;</span><br><span class="line">Person <span class="title function_">p2</span><span class="params">(p1)</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p1年龄为：&quot;</span> &lt;&lt; p1.m\_Age &lt;&lt; <span class="string">&quot;\\tp1身高为：&quot;</span> &lt;&lt; \*p1.m\_Height &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p2年龄为：&quot;</span> &lt;&lt; p2.m\_Age &lt;&lt; <span class="string">&quot;\\tp2身高为：&quot;</span> &lt;&lt; \*p2.m\_Height &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">test01();</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);<span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060503363618-1024x505.jpg"></p><h4 id="总结：如果属性有在堆区开辟的内存，一定要自己提供拷贝构造函数，防止浅拷贝带来的问题。"><a href="#总结：如果属性有在堆区开辟的内存，一定要自己提供拷贝构造函数，防止浅拷贝带来的问题。" class="headerlink" title="总结：如果属性有在堆区开辟的内存，一定要自己提供拷贝构造函数，防止浅拷贝带来的问题。"></a>总结：如果属性有在堆区开辟的内存，一定要自己提供拷贝构造函数，防止浅拷贝带来的问题。</h4>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识21：类和对象（对象的初始化和清理-构造函数调用规则）</title>
      <link href="/post/4957dc4c.html"/>
      <url>/post/4957dc4c.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-2-对象的初始化和清理"><a href="#4-2-对象的初始化和清理" class="headerlink" title="4.2 对象的初始化和清理"></a>4.2 对象的初始化和清理</h1><h2 id="4-2-4-构造函数调用规则"><a href="#4-2-4-构造函数调用规则" class="headerlink" title="4.2.4 构造函数调用规则"></a>4.2.4 构造函数调用规则</h2><p>默认情况下，C++编译器至少给一个类添加3个函数。</p><ul><li>1.默认构造函数（无参，函数体为空）。</li><li>2.默认析构函数（无参，函数体为空）。</li><li>3.默认拷贝构造函数，对属性进行值拷贝。</li></ul><p>构造函数调用规则如下：</p><ul><li>如果用户定义有参构造函数，C++不在提供默认无参构造，但是会提供默认拷贝构造。</li><li>如果用户定义拷贝构造函数，C++不再提供其他构造函数。</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Func</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//公共权限</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    Func()  <span class="comment">//无参构造（默认构造/普通构造）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 无参构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Func(<span class="type">int</span> a) <span class="comment">//有参构造（普通构造）</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_Age = a;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 有参构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Func(<span class="type">const</span> Func &amp;f)     <span class="comment">//拷贝构造</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 拷贝构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        m_Age = f.m_Age;    <span class="comment">//将传入的对象所有属性，拷贝到这个对象里</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ~Func()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 析构函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> m_Age;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.如果用户定义有参构造函数，C++不在提供默认无参构造，但是会提供默认拷贝构造。</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Func f;</span><br><span class="line">    f.m_Age = <span class="number">18</span>;</span><br><span class="line"></span><br><span class="line">    Func <span class="title function_">f2</span><span class="params">(f)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;f2的年龄为：&quot;</span> &lt;&lt; f2.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.如果用户定义拷贝构造函数，C++不再提供其他构造函数。</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Func <span class="title function_">f</span><span class="params">(<span class="number">28</span>)</span>;</span><br><span class="line">    Func <span class="title function_">f2</span><span class="params">(f)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;f2的年龄为：&quot;</span> &lt;&lt; f2.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//Test01();</span></span><br><span class="line">    Test02();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识20：类和对象（对象的初始化和清理-拷贝构造函数调用时机）</title>
      <link href="/post/1e388f1.html"/>
      <url>/post/1e388f1.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-2-对象的初始化和清理"><a href="#4-2-对象的初始化和清理" class="headerlink" title="4.2 对象的初始化和清理"></a>4.2 对象的初始化和清理</h1><h2 id="4-2-3-拷贝构造函数调用时机"><a href="#4-2-3-拷贝构造函数调用时机" class="headerlink" title="4.2.3 拷贝构造函数调用时机"></a>4.2.3 拷贝构造函数调用时机</h2><p>C++中拷贝构造函数调用时机通常有三种情况：</p><ul><li>使用一个已经创建完毕的对象来初始化一个新对象。</li><li>值传递的方式给函数参数传值。</li><li>以值方式返回局部对象。</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Func</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//公共权限</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    Func()  <span class="comment">//无参构造（默认构造/普通构造）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 无参构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Func(<span class="type">int</span> a) <span class="comment">//有参构造（普通构造）</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_Age = a;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 有参构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Func(<span class="type">const</span> Func &amp;f)     <span class="comment">//拷贝构造</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 拷贝构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        m_Age = f.m_Age;    <span class="comment">//将传入的对象所有属性，拷贝到这个对象里</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ~Func()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 析构函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> m_Age;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用一个已经创建完毕的对象来初始化一个新对象。</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Func <span class="title function_">f1</span><span class="params">(<span class="number">10</span>)</span>;</span><br><span class="line">    Func <span class="title function_">f2</span><span class="params">(f1)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;f2的年龄为：&quot;</span> &lt;&lt; f2.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递的方式给函数参数传值。</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">doWork01</span><span class="params">(Func f)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Func f;</span><br><span class="line">    doWork01(f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以值方式返回局部对象。</span></span><br><span class="line">Func <span class="title function_">doWork02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Func f1;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (<span class="type">int</span>*)&amp;f1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> f1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test03</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Func f = doWork02();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (<span class="type">int</span>*)&amp;f &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//Test01();</span></span><br><span class="line">    <span class="comment">//Test02();</span></span><br><span class="line">    Test03();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识19：类和对象（对象的初始化和清理-构造函数的分类及调用）</title>
      <link href="/post/410f4cfc.html"/>
      <url>/post/410f4cfc.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-2对象的初始化和清理"><a href="#4-2对象的初始化和清理" class="headerlink" title="4.2对象的初始化和清理"></a>4.2对象的初始化和清理</h1><h2 id="4-2-2-构造函数的分类及调用"><a href="#4-2-2-构造函数的分类及调用" class="headerlink" title="4.2.2 构造函数的分类及调用"></a>4.2.2 构造函数的分类及调用</h2><p><strong>两种分类方式：</strong></p><ul><li>按参数分为：有参构造和无参构造。</li><li>按类型分曾：普通构造和拷贝构造。</li></ul><p><strong>三种调用方式：</strong></p><ul><li>括号法</li><li>显示法</li><li>隐式转换法</li></ul><h3 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Func</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//公共权限</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    Func()  <span class="comment">//无参构造（默认构造/普通构造）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 无参构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Func(<span class="type">int</span> a) <span class="comment">//有参构造（普通构造）</span></span><br><span class="line">    &#123;</span><br><span class="line">        age = a;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 有参构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Func(<span class="type">const</span> Func &amp;f)     <span class="comment">//拷贝构造</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 拷贝构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        age = f.age;    <span class="comment">//将传入的对象所有属性，拷贝到这个对象里</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ~Func()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Func 析构函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//括号法</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;***** 括号法 *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    Func f01;       <span class="comment">//默认构造函数调用</span></span><br><span class="line">    Func <span class="title function_">f02</span><span class="params">(<span class="number">10</span>)</span>;   <span class="comment">//有参构造函数调用</span></span><br><span class="line">    Func <span class="title function_">f03</span><span class="params">(f02)</span>;  <span class="comment">//拷贝构造函数调用</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;f02的年龄为：&quot;</span> &lt;&lt; f02.age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;f03的年龄为：&quot;</span> &lt;&lt; f03.age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    注意事项1：</span></span><br><span class="line"><span class="comment">            1.调用默认构造函数的时候，不要加入( )</span></span><br><span class="line"><span class="comment">            Func f04();     //因为这等代码，编译器会认为是一个函数的声明，不会认为在创建对象。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示法</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;***** 显示法 *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    Func f11;               <span class="comment">//无参构造</span></span><br><span class="line">    Func f12 = Func(<span class="number">10</span>);    <span class="comment">//有参构造</span></span><br><span class="line">    Func f13 = Func(f12);   <span class="comment">//拷贝构造</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Func(10);   //匿名对象 特点：当前执行结束后，系统会立即回收匿名对象</span></span><br><span class="line"><span class="comment">    cout &lt;&lt; &quot;匿名对象&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    注意事项2</span></span><br><span class="line"><span class="comment">            1.不要利用拷贝构造函数初始化匿名对象。 编译器会认为 Func(13)==Func f13;对象声明</span></span><br><span class="line"><span class="comment">            Func(f13);</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//隐式转换法</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;***** 隐式转换法 *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    Func f21 = <span class="number">10</span>;      <span class="comment">//相当于 Func F21 = Func(10);  //有参构造</span></span><br><span class="line">    Func f22 = f21;     <span class="comment">//拷贝构造</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Test();     <span class="comment">//函数调用</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060408192013-1024x933.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识18：类和对象（对象的初始化和清理-构造函数和析构函数）</title>
      <link href="/post/a0c1d58.html"/>
      <url>/post/a0c1d58.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-2-对象的初始化和清理"><a href="#4-2-对象的初始化和清理" class="headerlink" title="4.2 对象的初始化和清理"></a>4.2 对象的初始化和清理</h1><ul><li>生活中我们买的电子产品都基本会有出厂设置，在某一天我们不用的时候也会删除一些自己信息数据保证安全。</li><li>C++中的面向对象来源于生活，每个对象也都会有初始化设置以及对象销毁前的清理数据的设置。</li></ul><h2 id="4-2-1-构造函数和析构函数"><a href="#4-2-1-构造函数和析构函数" class="headerlink" title="4.2.1 构造函数和析构函数"></a>4.2.1 构造函数和析构函数</h2><ul><li>对象的<strong>初始化</strong>和<strong>清理</strong>也是两个非常重要的安全问题。</li><li>一个对象或者变量没有初始状态，对其使用后是未知。</li><li>同样的使用完一个对象或者变量，没有及时清理，也会造成一定的安全问题。</li></ul><p>C++利用了<strong>构造函数</strong>和<strong>析构函数</strong>解决上述问题，这两个函数将会被编译器自动调用，完成对象初始化和清理的工作。对象的初始化和清理工作是编译器强制要我们做的事情，因此如果<strong>我们不提供构造函数和析构函数，编译器会提供编译器的构造函数以及析构函数是空实现</strong>。</p><ul><li>构造函数：主要作用在于创建对象时为对象的<strong>成员属性赋值</strong>，构造函数由编译器自动调用，无须手动调用。</li><li>析构函数：主要作用在于对象<strong>销毁前</strong>系统自动调用执行一些清理工作。</li></ul><h3 id="构造函数语法：类名"><a href="#构造函数语法：类名" class="headerlink" title="构造函数语法：类名( ){ }"></a>构造函数语法：类名( ){ }</h3><ul><li>1.构造函数，没有返回值也不用写void。</li><li>2.函数名称与类名相同。</li><li>3.构造函数可以有参数，因此可以发生重载。</li><li>4.程序在调用对象时候会自动调用构造，无须手动调用，而且只会调用一次。</li></ul><h3 id="析构函数语法：-类名"><a href="#析构函数语法：-类名" class="headerlink" title="析构函数语法：~类名( ){ }"></a>析构函数语法：~类名( ){ }</h3><ul><li>1.析构函数，没有返回值也不写void。</li><li>2.函数名称与类名相同，在名称前加上符号~。</li><li>3.析构函数不可以有参数，因此不可以发生重载。</li><li>4.程序在对象销毁前会自动调用析构，无须手动调用，而且只会调用一次。</li></ul><h3 id="测试示例："><a href="#测试示例：" class="headerlink" title="测试示例："></a>测试示例：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//公共权限</span></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    Person()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person 构造函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~Person()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person 析构函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Func</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Person p;   <span class="comment">//创建了一个对象，但是没有调用</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Func();     <span class="comment">//构造函数、析构函数测试</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上代码编译执行结果如下："><a href="#以上代码编译执行结果如下：" class="headerlink" title="以上代码编译执行结果如下："></a>以上代码编译执行结果如下：</h3><p><img src="http://image.camcad.cn/2020/06/2020060407011755-1024x512.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识17：类和对象（封装-练习案例2：点和圆的关系）</title>
      <link href="/post/a7e8e2e0.html"/>
      <url>/post/a7e8e2e0.html</url>
      
        <content type="html"><![CDATA[<h1 id="4、类和对象"><a href="#4、类和对象" class="headerlink" title="4、类和对象"></a>4、类和对象</h1><h2 id="4-1-封装"><a href="#4-1-封装" class="headerlink" title="4.1 封装"></a>4.1 封装</h2><h3 id="4-1-4-练习案例2：点和圆的关系"><a href="#4-1-4-练习案例2：点和圆的关系" class="headerlink" title="4.1.4 练习案例2：点和圆的关系"></a>4.1.4 练习案例2：点和圆的关系</h3><p>设计一个圆形类（Circle），和一个点类（Point），计算点和圆的关系。 <img src="http://image.camcad.cn/2020/06/2020060402430037-1024x344.jpg"></p><h3 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h3><p><img src="http://image.camcad.cn/2020/06/2020060402443743-1024x319.jpg"></p><h2 id="代码：方法一"><a href="#代码：方法一" class="headerlink" title="代码：方法一"></a>代码：方法一</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建点类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//公共仅限</span></span><br><span class="line">public:</span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetX</span><span class="params">(<span class="type">double</span> x)</span>     <span class="comment">//设置X</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_X = x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">GetX</span><span class="params">()</span>           <span class="comment">//获取X</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> m_X;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetY</span><span class="params">(<span class="type">double</span> y)</span>     <span class="comment">//设置Y</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_Y = y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">GetY</span><span class="params">()</span>           <span class="comment">//获取Y</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> m_Y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有仅限</span></span><br><span class="line">private:</span><br><span class="line">    <span class="type">double</span> m_X;     <span class="comment">//X</span></span><br><span class="line">    <span class="type">double</span> m_Y;     <span class="comment">//Y</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建圆类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//公共仅限</span></span><br><span class="line">public:</span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetRadius</span><span class="params">(<span class="type">double</span> r)</span>        <span class="comment">//设置半径</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_R = r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">GetRadius</span><span class="params">()</span>              <span class="comment">//获取半径</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> m_R;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetCenter</span><span class="params">(Point Center)</span>    <span class="comment">//设置圆心</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_Center = Center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Point <span class="title function_">GetCenter</span><span class="params">()</span>               <span class="comment">//获取圆心</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> m_Center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有仅限</span></span><br><span class="line">private:</span><br><span class="line">    <span class="type">double</span> m_R;     <span class="comment">//半径</span></span><br><span class="line">    Point m_Center; <span class="comment">//圆心（在类中可以让另一个类 作为本类成员）</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断点和圆的关系</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">isInCircle</span><span class="params">(Circle &amp;c, Point &amp;p)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//求出两点之间的距离（平方）</span></span><br><span class="line">    <span class="type">double</span> Distance = (c.GetCenter().GetX() - p.GetX())*(c.GetCenter().GetX() - p.GetX()) +</span><br><span class="line">        (c.GetCenter().GetY() - p.GetY())*(c.GetCenter().GetY() - p.GetY());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算半径平方</span></span><br><span class="line">    <span class="type">double</span> rDistance = c.GetRadius()*c.GetRadius();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断关系</span></span><br><span class="line">    <span class="keyword">if</span> (Distance == rDistance)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;点在圆上&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Distance &lt; rDistance)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;点在圆内&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Distance &gt; rDistance)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;点在圆外&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建圆</span></span><br><span class="line">    Circle c;</span><br><span class="line">    c.SetRadius(<span class="number">10</span>);    <span class="comment">//半径</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建圆心</span></span><br><span class="line">    Point Center;</span><br><span class="line">    Center.SetX(<span class="number">10</span>);</span><br><span class="line">    Center.SetY(<span class="number">0</span>);</span><br><span class="line">    c.SetCenter(Center);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建点</span></span><br><span class="line">    Point p;</span><br><span class="line">    p.SetX(<span class="number">10</span>);</span><br><span class="line">    p.SetY(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断关系</span></span><br><span class="line">    isInCircle(c, p);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码：方法二"><a href="#代码：方法二" class="headerlink" title="代码：方法二"></a>代码：方法二</h2><h3 id="圆类头文件（Circle-h）"><a href="#圆类头文件（Circle-h）" class="headerlink" title="圆类头文件（Circle.h）"></a>圆类头文件（Circle.h）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Point.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建圆类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//公共仅限</span></span><br><span class="line">public:</span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetRadius</span><span class="params">(<span class="type">double</span> r)</span>;       <span class="comment">//设置半径</span></span><br><span class="line">    <span class="type">double</span> <span class="title function_">GetRadius</span><span class="params">()</span>;             <span class="comment">//获取半径</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetCenter</span><span class="params">(Point Center)</span>;   <span class="comment">//设置圆心</span></span><br><span class="line">    Point <span class="title function_">GetCenter</span><span class="params">()</span>;              <span class="comment">//获取圆心</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//私有仅限</span></span><br><span class="line">private:</span><br><span class="line">    <span class="type">double</span> m_R;     <span class="comment">//半径</span></span><br><span class="line">    Point m_Center; <span class="comment">//圆心（在类中可以让另一个类 作为本类成员）</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="点类头文件（Point-h）"><a href="#点类头文件（Point-h）" class="headerlink" title="点类头文件（Point.h）"></a>点类头文件（Point.h）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建点类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//公共仅限</span></span><br><span class="line">public:</span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetX</span><span class="params">(<span class="type">double</span> x)</span>;    <span class="comment">//设置X</span></span><br><span class="line">    <span class="type">double</span> <span class="title function_">GetX</span><span class="params">()</span>;          <span class="comment">//获取X</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetY</span><span class="params">(<span class="type">double</span> y)</span>;    <span class="comment">//设置Y</span></span><br><span class="line">    <span class="type">double</span> <span class="title function_">GetY</span><span class="params">()</span>;          <span class="comment">//获取Y</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//私有仅限</span></span><br><span class="line">private:</span><br><span class="line">    <span class="type">double</span> m_X;     <span class="comment">//X</span></span><br><span class="line">    <span class="type">double</span> m_Y;     <span class="comment">//Y</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="圆类源文件（Circle-cpp）"><a href="#圆类源文件（Circle-cpp）" class="headerlink" title="圆类源文件（Circle.cpp）"></a>圆类源文件（Circle.cpp）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Circle.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Circle::SetRadius</span><span class="params">(<span class="type">double</span> r)</span>        <span class="comment">//设置半径</span></span><br><span class="line">&#123;</span><br><span class="line">    m_R = r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">Circle::GetRadius</span><span class="params">()</span>              <span class="comment">//获取半径</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> m_R;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Circle::SetCenter</span><span class="params">(Point Center)</span>    <span class="comment">//设置圆心</span></span><br><span class="line">&#123;</span><br><span class="line">    m_Center = Center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Point <span class="title function_">Circle::GetCenter</span><span class="params">()</span>           <span class="comment">//获取圆心</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> m_Center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="点类源文件（Point-cpp）"><a href="#点类源文件（Point-cpp）" class="headerlink" title="点类源文件（Point.cpp）"></a>点类源文件（Point.cpp）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Point.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Point::SetX</span><span class="params">(<span class="type">double</span> x)</span>      <span class="comment">//设置X</span></span><br><span class="line">&#123;</span><br><span class="line">    m_X = x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">Point::GetX</span><span class="params">()</span>            <span class="comment">//获取X</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> m_X;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Point::SetY</span><span class="params">(<span class="type">double</span> y)</span>      <span class="comment">//设置Y</span></span><br><span class="line">&#123;</span><br><span class="line">    m_Y = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">Point::GetY</span><span class="params">()</span>            <span class="comment">//获取Y</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> m_Y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主函数（main-cpp）"><a href="#主函数（main-cpp）" class="headerlink" title="主函数（main.cpp）"></a>主函数（main.cpp）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Point.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Circle.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断点和圆的关系</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">isInCircle</span><span class="params">(Circle &amp;c, Point &amp;p)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//求出两点之间的距离（平方）</span></span><br><span class="line">    <span class="type">double</span> Distance = (c.GetCenter().GetX() - p.GetX())*(c.GetCenter().GetX() - p.GetX()) +</span><br><span class="line">        (c.GetCenter().GetY() - p.GetY())*(c.GetCenter().GetY() - p.GetY());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算半径平方</span></span><br><span class="line">    <span class="type">double</span> rDistance = c.GetRadius()*c.GetRadius();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断关系</span></span><br><span class="line">    <span class="keyword">if</span> (Distance == rDistance)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;点在圆上&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Distance &lt; rDistance)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;点在圆内&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Distance &gt; rDistance)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;点在圆外&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建圆</span></span><br><span class="line">    Circle c;</span><br><span class="line">    c.SetRadius(<span class="number">10</span>);    <span class="comment">//半径</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建圆心</span></span><br><span class="line">    Point Center;</span><br><span class="line">    Center.SetX(<span class="number">10</span>);</span><br><span class="line">    Center.SetY(<span class="number">0</span>);</span><br><span class="line">    c.SetCenter(Center);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建点</span></span><br><span class="line">    Point p;</span><br><span class="line">    p.SetX(<span class="number">10</span>);</span><br><span class="line">    p.SetY(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断关系</span></span><br><span class="line">    isInCircle(c, p);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识16：类和对象（封装-成员属性设置为私有）</title>
      <link href="/post/d18a6ddb.html"/>
      <url>/post/d18a6ddb.html</url>
      
        <content type="html"><![CDATA[<h1 id="4、类和对象"><a href="#4、类和对象" class="headerlink" title="4、类和对象"></a>4、类和对象</h1><h2 id="4-1-封装"><a href="#4-1-封装" class="headerlink" title="4.1 封装"></a>4.1 封装</h2><h3 id="4-1-3-成员属性设置为私有"><a href="#4-1-3-成员属性设置为私有" class="headerlink" title="4.1.3 成员属性设置为私有"></a>4.1.3 成员属性设置为私有</h3><p><strong>优点1：</strong>将所有成员属性设置为私有，可以自己控制读写权限。 </p><p><strong>优点2：</strong>对于写权限 ，我们可以检测数据的有效性。 </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//公共权限</span></span><br><span class="line"><span class="comment">//优点1：将所有成员属性设置为私有，可以自己控制读写权限。</span></span><br><span class="line">public:</span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetName</span><span class="params">(<span class="built_in">string</span> name)</span>   <span class="comment">//设置年龄</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> <span class="title function_">GetName</span><span class="params">()</span>            <span class="comment">//获取年龄</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> m_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">GetAge</span><span class="params">()</span>                <span class="comment">//获取年龄</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> m_age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">GetHeight</span><span class="params">()</span>          <span class="comment">//获取身高</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> m_height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//优点2：对于写权限 ，我们可以检测数据的有效性。</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetAge</span><span class="params">(<span class="type">int</span> age)</span>        <span class="comment">//设置年龄</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (age &lt;= <span class="number">0</span>  age &gt; <span class="number">200</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;错误：年龄取值范围 0 &lt; 年龄 &gt; 200&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span>;     <span class="comment">//返回退出</span></span><br><span class="line">        &#125;</span><br><span class="line">        m_age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有权限</span></span><br><span class="line">private:</span><br><span class="line">    <span class="built_in">string</span> m_name = <span class="string">&quot;&quot;</span>;       <span class="comment">//姓名（读写）</span></span><br><span class="line">    <span class="type">int</span> m_age = <span class="number">0</span>;          <span class="comment">//年龄（写）</span></span><br><span class="line">    <span class="type">double</span> m_height = <span class="number">170</span>;  <span class="comment">//身高（读）</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Person p1;</span><br><span class="line">    p1.SetName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    p1.SetAge(<span class="number">18</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p1.GetName() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; p1.GetAge() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;身高：&quot;</span> &lt;&lt; p1.GetHeight() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="练习案例1：设计立方体类"><a href="#练习案例1：设计立方体类" class="headerlink" title="练习案例1：设计立方体类"></a>练习案例1：设计立方体类</h3><ul><li>设计立方体类（Cube)。</li><li>求出立方体的面积和体积。</li><li>分别用全局函数和成员函数判断两个立方体是否相等。 <img src="http://image.camcad.cn/2020/06/2020060308393019-1024x312.jpg"></li></ul><p><strong>示例代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1、设计立方体类（Cube）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cube</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//公共权限</span></span><br><span class="line">public:</span><br><span class="line"><span class="type">void</span> <span class="title function_">SetL</span><span class="params">(<span class="type">double</span> l)</span><span class="comment">//设置长度</span></span><br><span class="line">&#123;</span><br><span class="line">m\_L = l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">GetL</span><span class="params">()</span><span class="comment">//获取长度</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> m\_L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SetW</span><span class="params">(<span class="type">double</span> w)</span><span class="comment">//设置宽度</span></span><br><span class="line">&#123;</span><br><span class="line">m\_W = w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">GetW</span><span class="params">()</span><span class="comment">//获取宽度</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> m\_W;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SetH</span><span class="params">(<span class="type">double</span> h)</span><span class="comment">//设置高度</span></span><br><span class="line">&#123;</span><br><span class="line">m\_H = h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">GetH</span><span class="params">()</span><span class="comment">//获取高度</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> m\_H;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、求出立方体的面积和体积</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">CalculateS</span><span class="params">()</span><span class="comment">//面积</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span> \* m\_L\*m\_W + <span class="number">2</span> \* m\_W\*m\_H + <span class="number">2</span> \* m\_L\*m\_H;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">CalculateV</span><span class="params">()</span><span class="comment">//体积</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> m\_L \* m\_W \* m\_H;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、通过成员函数判断两个立方体是否相等</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">isSameByClass</span><span class="params">(Cube &amp;c)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m\_L == c.GetL() &amp;&amp; m\_W == c.GetW() &amp;&amp; m\_H == c.GetH())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有权限</span></span><br><span class="line">private:</span><br><span class="line"><span class="type">double</span> m\_L = <span class="number">0.0</span>;<span class="comment">//长</span></span><br><span class="line"><span class="type">double</span> m\_W = <span class="number">0.0</span>;<span class="comment">//宽</span></span><br><span class="line"><span class="type">double</span> m\_H = <span class="number">0.0</span>;<span class="comment">//高</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、通过全局函数判断两个立方体是否相等</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">isSame</span><span class="params">(Cube &amp;c1, Cube&amp;c2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (c1.GetL() == c2.GetL() &amp;&amp; c1.GetW() == c2.GetW() &amp;&amp; c1.GetH() == c2.GetH())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//创建立方体一</span></span><br><span class="line">Cube c1;</span><br><span class="line">c1.SetL(<span class="number">10</span>);</span><br><span class="line">c1.SetW(<span class="number">10</span>);</span><br><span class="line">c1.SetH(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;c1立方体的面积：&quot;</span> &lt;&lt; c1.CalculateS() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;c1立方体的体积：&quot;</span> &lt;&lt; c1.CalculateV() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建立方体二</span></span><br><span class="line">Cube c2;</span><br><span class="line">c2.SetL(<span class="number">10</span>);</span><br><span class="line">c2.SetW(<span class="number">10</span>);</span><br><span class="line">c2.SetH(<span class="number">10</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;c2立方体的面积：&quot;</span> &lt;&lt; c2.CalculateS() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;c2立方体的体积：&quot;</span> &lt;&lt; c2.CalculateV() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、通过成员函数判断两个立方体是否相等</span></span><br><span class="line"><span class="type">bool</span> ret01 = c1.isSameByClass(c2);</span><br><span class="line"><span class="keyword">if</span> (ret01)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;成员函数：c1和c2两个立方体相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;成员函数：c1和c2两个立方体不相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、通过全局函数判断两个立方体是否相等</span></span><br><span class="line"><span class="type">bool</span> ret02 = isSame(c1, c2);</span><br><span class="line"><span class="keyword">if</span> (ret02)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;全局函数：c1和c2两个立方体相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;全局函数：c1和c2两个立方体不相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);<span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下：</p><p><img src="http://image.camcad.cn/2020/06/2020060309521525-1024x510.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识15：类和对象（封装-struct和class区别）</title>
      <link href="/post/443da51e.html"/>
      <url>/post/443da51e.html</url>
      
        <content type="html"><![CDATA[<h1 id="4、类和对象"><a href="#4、类和对象" class="headerlink" title="4、类和对象"></a>4、类和对象</h1><h2 id="4-1-封装"><a href="#4-1-封装" class="headerlink" title="4.1 封装"></a>4.1 封装</h2><h3 id="4-1-2-struct和class区别"><a href="#4-1-2-struct和class区别" class="headerlink" title="4.1.2 struct和class区别"></a>4.1.2 struct和class区别</h3><p>在C++中struct和class唯一的<strong>区别</strong>就在于默认的<strong>访问权限不同</strong>。 </p><p><strong>区别：</strong></p><ul><li>struct 默认权限为公共</li><li>class 默认权限为私有</li></ul><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Func01</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> m_name;  <span class="comment">//默认是公共权限</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Func02</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> m_name;  <span class="comment">//默认是私有权限</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Func01 f1;</span><br><span class="line">    f1.m_name = <span class="string">&quot;默认是公共权限&quot;</span>;    <span class="comment">//正确，默认是公共权限</span></span><br><span class="line"></span><br><span class="line">    Func02 f2;</span><br><span class="line">    <span class="comment">//f2.m_name = &quot;默认是私有权限&quot;;  //错误，默认是私有权限（无法访问）</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识14：类和对象（封装-封装的意义）</title>
      <link href="/post/d60295ce.html"/>
      <url>/post/d60295ce.html</url>
      
        <content type="html"><![CDATA[<h1 id="4、类和对象"><a href="#4、类和对象" class="headerlink" title="4、类和对象"></a>4、类和对象</h1><p>C++面向对象的三大特性为：封装、继承、多态。</p><p>C++认为万事万物都皆为对象，对象上有其属性和行为。</p><p>例如： 人可以作为对象，属性有姓名、年龄、身高、体重…，行为有走、跑、吃饭、唱歌… 车也可以作为对象，属性有轮胎，方向盘、车灯、…,,行为有载人、放音乐、开空调… 具有相同性质的对象，我们可以抽象称为类，人属于人类，车属于车类。</p><h2 id="4-1-封装"><a href="#4-1-封装" class="headerlink" title="4.1 封装"></a>4.1 封装</h2><h3 id="4-1-1-封装的意义"><a href="#4-1-1-封装的意义" class="headerlink" title="4.1.1 封装的意义"></a>4.1.1 封装的意义</h3><p>封闭是C++面向对象三大特性之一。 </p><p><strong>封装的意义：</strong></p><ul><li>将属性和行为作为一个整体，表现生活中的事物。</li><li>将属性和行为加以权限控制。</li></ul><hr><p><strong>封装意义一：</strong> 在设计类的时候，属性和行为写在一起，表现事物。 </p><p><strong>语法：</strong>class 类名{ 访问权限: 属性 &#x2F; 行为 };</p><h3 id="示例1：设计一个圆类，，求出圆的周长。"><a href="#示例1：设计一个圆类，，求出圆的周长。" class="headerlink" title="示例1：设计一个圆类，，求出圆的周长。"></a>示例1：设计一个圆类，，求出圆的周长。</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、设计一个圆类，求出圆的周长（圆求周长的公式：2 * PI * m_r）</span></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> PI = <span class="number">3.14</span>; <span class="comment">//圆周率</span></span><br><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">Circle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//访问权限</span></span><br><span class="line">public:     <span class="comment">//公共权限</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    <span class="type">double</span> m_r;     <span class="comment">//半径</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//行为</span></span><br><span class="line">    <span class="type">double</span> <span class="title function_">CalculateZC</span><span class="params">()</span>    <span class="comment">//获取圆的周长</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * PI * m_r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//实例化（通过一个类，创建一个对象的过程）</span></span><br><span class="line"></span><br><span class="line">    Circle Cir;     <span class="comment">//通过圆类，创建具体的圆（对象）</span></span><br><span class="line">    Cir.m_r = <span class="number">10</span>;   <span class="comment">//给圆赋属性（半径值）</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;圆的周长为：&quot;</span> &lt;&lt; Cir.CalculateZC() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/06/2020060302220086-1024x488.jpg"></p><h3 id="示例2：设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号。"><a href="#示例2：设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号。" class="headerlink" title="示例2：设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号。"></a>示例2：设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号。</h3><p><strong>方法1：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//访问权限</span></span><br><span class="line">public:     <span class="comment">//公共权限</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    <span class="built_in">string</span> m_name=<span class="string">&quot;null&quot;</span>; <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> m_id=<span class="number">-1</span>;            <span class="comment">//学号</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//行为</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">ShowStudent</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;学生的姓名：&quot;</span> &lt;&lt; m_name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;学生的学号：&quot;</span> &lt;&lt; m_id &lt;&lt; <span class="built_in">endl</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//实例化（通过一个类，创建一个对象的过程）</span></span><br><span class="line"></span><br><span class="line">    Student stu;</span><br><span class="line">    stu.m_name = <span class="string">&quot;小二&quot;</span>;</span><br><span class="line">    stu.m_id = <span class="number">1001</span>;</span><br><span class="line">    stu.ShowStudent();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法2：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//访问权限</span></span><br><span class="line">public:     <span class="comment">//公共权限</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    <span class="built_in">string</span> m_name = <span class="string">&quot;null&quot;</span>;   <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> m_id = <span class="number">-1</span>;          <span class="comment">//学号</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//行为</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetName</span><span class="params">(<span class="built_in">string</span> name)</span>   <span class="comment">//姓名赋值</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">SetId</span><span class="params">(<span class="type">int</span> id)</span>      <span class="comment">//学号赋值</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> <span class="title function_">ShowStudent</span><span class="params">()</span>      <span class="comment">//打印显示</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;学生的姓名：&quot;</span> &lt;&lt; m_name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;学生的学号：&quot;</span> &lt;&lt; m_id &lt;&lt; <span class="built_in">endl</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//实例化（通过一个类，创建一个对象的过程）</span></span><br><span class="line">    Student stu01;</span><br><span class="line">    stu01.SetName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    stu01.SetId(<span class="number">1002</span>);</span><br><span class="line">    stu01.ShowStudent();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/06/2020060303133859.jpg"></p><hr><hr><p><strong>封装意义二：</strong> 类在设计时，可以批属性和行为放在不同的权限下，加以控制。 </p><p><strong>访问权限有三种：</strong><br><strong>public</strong>：公共权限（类内可以访问，类外也可以访问）<br><strong>protected</strong>：保护权限（类内可以访问，类外不可以访问）<br><strong>private</strong>：私有权限（类内可以访问，类外不可以访问） </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//访问权限有三种：</span></span><br><span class="line"><span class="comment">//1、public：公共权限（类内可以访问，类外也可以访问）</span></span><br><span class="line"><span class="comment">//2、protected：保护权限（类内可以访问，类外不可以访问）</span></span><br><span class="line"><span class="comment">//3、private：私有权限（类内可以访问，类外不可以访问）</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//访问权限</span></span><br><span class="line">public:     <span class="comment">//公共权限</span></span><br><span class="line">    <span class="built_in">string</span> m_name = <span class="string">&quot;null&quot;</span>;       <span class="comment">//姓名</span></span><br><span class="line"></span><br><span class="line">protected:  <span class="comment">//保护权限</span></span><br><span class="line">    <span class="built_in">string</span> m_Car = <span class="string">&quot;本田&quot;</span>;      <span class="comment">//汽车</span></span><br><span class="line"></span><br><span class="line">private:    <span class="comment">//私有权限</span></span><br><span class="line">    <span class="type">int</span> m_Password = <span class="number">123456</span>;    <span class="comment">//密码</span></span><br><span class="line"></span><br><span class="line">public:     <span class="comment">//公共权限</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">ShowPerson</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; m_name &lt;&lt; <span class="string">&quot;\n汽车：&quot;</span> &lt;&lt; m_Car &lt;&lt; <span class="string">&quot;\n密码：&quot;</span> &lt;&lt; m_Password &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Person p1;</span><br><span class="line">    p1.m_name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//p1.m_Car = &quot;宝马&quot;;        //protected：保护权限（类内可以访问，类外不可以访问）</span></span><br><span class="line">    <span class="comment">//p1.m_Password = 123;      //private：私有权限（类内可以访问，类外不可以访问）</span></span><br><span class="line"></span><br><span class="line">    p1.ShowPerson();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识13：函数提高（函数重载-函数重载注意事项）</title>
      <link href="/post/af4cd469.html"/>
      <url>/post/af4cd469.html</url>
      
        <content type="html"><![CDATA[<h1 id="3、函数提高"><a href="#3、函数提高" class="headerlink" title="3、函数提高"></a>3、函数提高</h1><h2 id="3-3-函数重载"><a href="#3-3-函数重载" class="headerlink" title="3.3 函数重载"></a>3.3 函数重载</h2><h3 id="3-3-2-函数重载注意事项"><a href="#3-3-2-函数重载注意事项" class="headerlink" title="3.3.2 函数重载注意事项"></a>3.3.2 函数重载注意事项</h3><ul><li>引用作为重载条件 </li><li>函数重载碰到函数默认参数</li></ul><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、引用作为重载条件</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func01</span><span class="params">(<span class="type">int</span> &amp;a)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func01(int &amp;a)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">func01</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;a)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func01(const int &amp;a)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、函数重载碰到函数默认参数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func02</span><span class="params">(<span class="type">int</span> a)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func02(int a)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">func02</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b = <span class="number">10</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func02(int a,int b=10)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    func01(a);      <span class="comment">//调用无const</span></span><br><span class="line">    func01(<span class="number">10</span>);     <span class="comment">//调用有const</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//func02(10);       //错误，当函数重载碰到默认参数，出现二义性，报错，尽量避免这种情况</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识12：函数提高（函数重载-函数重载概述）</title>
      <link href="/post/a93a0f90.html"/>
      <url>/post/a93a0f90.html</url>
      
        <content type="html"><![CDATA[<h1 id="3、函数提高"><a href="#3、函数提高" class="headerlink" title="3、函数提高"></a>3、函数提高</h1><h2 id="3-3-函数重载"><a href="#3-3-函数重载" class="headerlink" title="3.3 函数重载"></a>3.3 函数重载</h2><h3 id="3-3-1-函数重载概述"><a href="#3-3-1-函数重载概述" class="headerlink" title="3.3.1 函数重载概述"></a>3.3.1 函数重载概述</h3><p><strong>作用：</strong>函数名可以相同，提高复用性。</p><p><strong>函数重载满足条件：</strong></p><ul><li>同一个作用域下</li><li>函数名称相同</li><li>函数参数</li></ul><p><strong>类型不同</strong> 或者 <strong>个数不同</strong> 或者 <strong>顺序不同</strong>。</p><p><strong>注意：</strong>函数的返回值不可以作为函数重载的条件。</p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数重载需要函数都在同一个作用域下</span></span><br><span class="line"><span class="comment">//1、同一个作用域下</span></span><br><span class="line"><span class="comment">//2、函数名称相同</span></span><br><span class="line"><span class="comment">//3、函数参数类型不同 或者 个数不同 或者 顺序不同</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func 的调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">int</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func(int) 的调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">int</span>,<span class="type">double</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func(int,double) 的调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">double</span>, <span class="type">int</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func(double, int) 的调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注意事项</span></span><br><span class="line"><span class="comment">//函数的返回值不可以作为函数重载的条件</span></span><br><span class="line"><span class="comment">//int func(int)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//  cout &lt;&lt; &quot;func(int) 的调用&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//  return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    func();</span><br><span class="line">    func(<span class="number">10</span>);</span><br><span class="line">    func(<span class="number">10</span>,<span class="number">3.14</span>);</span><br><span class="line">    func(<span class="number">3.1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/06/2020060211224141.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识11：函数提高（函数占位参数）</title>
      <link href="/post/11a68870.html"/>
      <url>/post/11a68870.html</url>
      
        <content type="html"><![CDATA[<h1 id="3、函数提高"><a href="#3、函数提高" class="headerlink" title="3、函数提高"></a>3、函数提高</h1><h2 id="3-2-函数占位参数"><a href="#3-2-函数占位参数" class="headerlink" title="3.2 函数占位参数"></a>3.2 函数占位参数</h2><p>C++中函数的形参列表里可以有占位参数，用来做占位，调用函数时必须填补该位置。 </p><p><strong>语法：</strong>返回值类型 函数名 ( 数据类型 ){ 代码列表 };</p><p>在现阶段函数的占位参数存在的意义不大，但是后面的课程中会用到该技术。 </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数占位参数，占位参数也可以有默认参数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func01</span><span class="params">(<span class="type">int</span> a ,<span class="type">int</span> <span class="comment">/* int =10 */</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;this is func&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    func01(<span class="number">10</span>,<span class="number">10</span>);  <span class="comment">//占位参数必须填补</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识10：函数提高（函数默认参数）</title>
      <link href="/post/742f45c2.html"/>
      <url>/post/742f45c2.html</url>
      
        <content type="html"><![CDATA[<h1 id="3、函数提高"><a href="#3、函数提高" class="headerlink" title="3、函数提高"></a>3、函数提高</h1><h2 id="3-1-函数默认参数"><a href="#3-1-函数默认参数" class="headerlink" title="3.1 函数默认参数"></a>3.1 函数默认参数</h2><p>在C++中，函数的形参列表中的形参是可以有默认值的。 </p><p><strong>语法：</strong>返回值类型 函数名 ( 参数 ＝ 默认值 ) { 代码列表 };</p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、如果某个位置参数有默认值，那么从这个位置往后，从左向右，必须都要有默认值。</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">func01</span><span class="params">(<span class="type">int</span> a = <span class="number">10</span>, <span class="type">int</span> b = <span class="number">20</span>, <span class="type">int</span> c = <span class="number">30</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b + c;   <span class="comment">//返回值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、如果函数声明有默认值，函数实现的时候就不能有默认参数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">func02</span><span class="params">(<span class="type">int</span> a = <span class="number">10</span>, <span class="type">int</span> b = <span class="number">30</span>, <span class="type">int</span> c = <span class="number">50</span>)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">func02</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; func01(<span class="number">20</span>,<span class="number">20</span>) &lt;&lt; <span class="built_in">endl</span>;      <span class="comment">//a=20,b=20</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; func02(<span class="number">100</span>) &lt;&lt; <span class="built_in">endl</span>;        <span class="comment">//a=100</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/06/2020060210221448-1024x515.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识09：引用（常量引用）</title>
      <link href="/post/22ef0d6a.html"/>
      <url>/post/22ef0d6a.html</url>
      
        <content type="html"><![CDATA[<h1 id="2、引用"><a href="#2、引用" class="headerlink" title="2、引用"></a>2、引用</h1><h2 id="2-6-常量引用"><a href="#2-6-常量引用" class="headerlink" title="2.6 常量引用"></a>2.6 常量引用</h2><p><strong>作用：</strong>常量引用主要用来修饰形参，防止误操作。</p><p>在函数形参列表中，可以加const修改形参，防止形参改变实参。 </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、注意：不要返回局部变量引用</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func01</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;ref)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//ref = 100;    //错误，加了const修饰不可修改</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func01 ref= &quot;</span> &lt;&lt; ref &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// int &amp;ref = 10; 错误，引用本身需要一个合法的内存空间。</span></span><br><span class="line">    <span class="comment">//加入const修饰后，编译器优化代码：int tpmp = 10; const int &amp;ref=temp;</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> &amp;ref = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ref = 20;     //错误，加了const修饰不可修改</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;main ref=&quot;</span> &lt;&lt; ref &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//函数中利用常量引用耳闻目染误操作修改实参</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line">    func01(a);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/06/2020060209434671.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识08：引用（引用的本质）</title>
      <link href="/post/54d34880.html"/>
      <url>/post/54d34880.html</url>
      
        <content type="html"><![CDATA[<h1 id="2、引用"><a href="#2、引用" class="headerlink" title="2、引用"></a>2、引用</h1><h2 id="2-4-引用的本质"><a href="#2-4-引用的本质" class="headerlink" title="2.4 引用的本质"></a>2.4 引用的本质</h2><p><strong>本质：</strong>引用的本质在C++内部实现是一个指针常量。 </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、注意：不要返回局部变量引用</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func01</span><span class="params">(<span class="type">int</span> &amp;ref)</span></span><br><span class="line">&#123;</span><br><span class="line">    ref = <span class="number">100</span>;  <span class="comment">//ref是引用，转换为 *ref =100;</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func01 ref= &quot;</span> &lt;&lt; ref &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//编译器自动转换为 int * const ref = &amp;a; 指针常量是指针指向不可改，也说明为什么引用初始化后不可更改。</span></span><br><span class="line">    <span class="type">int</span> &amp;ref = a;   </span><br><span class="line">    ref = <span class="number">20</span>;   <span class="comment">//内部发现ref是引用，自动帮我们转换为：*ref = 20;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;main a= &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;main ref= &quot;</span> &lt;&lt; ref &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    func01(a);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/06/2020060209180053-1024x562.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识07：引用（引用做函数返回值）</title>
      <link href="/post/49e8996a.html"/>
      <url>/post/49e8996a.html</url>
      
        <content type="html"><![CDATA[<h1 id="2、引用"><a href="#2、引用" class="headerlink" title="2、引用"></a>2、引用</h1><h2 id="2-4-引用做函数返回值"><a href="#2-4-引用做函数返回值" class="headerlink" title="2.4 引用做函数返回值"></a>2.4 引用做函数返回值</h2><p><strong>作用：</strong>引用是可以作为函数的返回值存在的。</p><p><strong>注意：</strong>不要返回局部变量引用 </p><p><strong>用法：</strong>函数调用可以作为左值使用。 </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、注意：不要返回局部变量引用</span></span><br><span class="line"><span class="type">int</span> &amp;<span class="title function_">func01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;     <span class="comment">//局部变量存放在栈区，执行函数后将自动释放内存</span></span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、用法：函数调用可以作为左值使用。</span></span><br><span class="line"><span class="type">int</span> &amp;<span class="title function_">func02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> a = <span class="number">20</span>;  <span class="comment">//静态变量存放在全局区，将由操作系统回收</span></span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    int &amp;main_a = func01();</span></span><br><span class="line"><span class="comment">    cout &lt;&lt; main_a &lt;&lt; endl;     //第一次调用成功</span></span><br><span class="line"><span class="comment">    cout &lt;&lt; main_a &lt;&lt; endl;     //错误，局部变量的数据存放在栈区，执行函数后将自动释放内存</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> &amp;main_a = func02();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; main_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; main_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    func02() = <span class="number">50</span>;      <span class="comment">//引用：函数调用可以作为左值使用。</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; main_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; main_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/06/2020060208310850.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识06：引用（引用做函数参数）</title>
      <link href="/post/7c1f4207.html"/>
      <url>/post/7c1f4207.html</url>
      
        <content type="html"><![CDATA[<h1 id="2、引用"><a href="#2、引用" class="headerlink" title="2、引用"></a>2、引用</h1><h2 id="2-3-引用做函数参数"><a href="#2-3-引用做函数参数" class="headerlink" title="2.3 引用做函数参数"></a>2.3 引用做函数参数</h2><p><strong>作用：</strong>函数传参时，可以利用引用的方法让形参修饰实参。 </p><p><strong>优点：</strong>可以简化指针修改实参。 </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap01</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> temp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = temp;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap01 a= &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap01 b= &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap02</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> *b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> tmap = *a;</span><br><span class="line">    *a = *b;</span><br><span class="line">    *b = tmap;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap02 a= &quot;</span> &lt;&lt; *a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap02 b= &quot;</span> &lt;&lt; *b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//引用传递</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap03</span><span class="params">(<span class="type">int</span> &amp;a, <span class="type">int</span> &amp;b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> tmap = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = tmap;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap03 a= &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap03 b= &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//swap01(a, b);     //值传递，形参不修饰实参</span></span><br><span class="line">    <span class="comment">//swap02(&amp;a,&amp;b);    //地址传递，形参修饰实参</span></span><br><span class="line">    swap03(a, b);       <span class="comment">//引用传递，形参修饰实参</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;main a= &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;main b= &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/06/2020060207562775.jpg"></p><p><strong>总结：</strong>通过引用参数产生的效果同按<strong>地址传递</strong>是一样的，引用的语法更简单。</p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识05：引用（引用的注意事项）</title>
      <link href="/post/2c4aca87.html"/>
      <url>/post/2c4aca87.html</url>
      
        <content type="html"><![CDATA[<h1 id="2、引用"><a href="#2、引用" class="headerlink" title="2、引用"></a>2、引用</h1><h2 id="2-2-引用注意事项"><a href="#2-2-引用注意事项" class="headerlink" title="2.2 引用注意事项"></a>2.2 引用注意事项</h2><ul><li>引用必须初始化</li><li>引用在初始化后，不可以改变</li></ul><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//int &amp;b;//错误，引用必须初始化</span></span><br><span class="line"><span class="type">int</span> &amp;b = a;</span><br><span class="line"></span><br><span class="line"><span class="comment">//int &amp;b = c;//错误，引用初始化后，就不可更改</span></span><br><span class="line"></span><br><span class="line">b = c;<span class="comment">//这是赋值操作，不是更改引用</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a= &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b= &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;c= &quot;</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);<span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下：</p><p><img src="http://image.camcad.cn/2020/06/2020060207231871-1024x475.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识04：引用（引用的基本使用）</title>
      <link href="/post/d3d53efc.html"/>
      <url>/post/d3d53efc.html</url>
      
        <content type="html"><![CDATA[<h1 id="2、引用"><a href="#2、引用" class="headerlink" title="2、引用"></a>2、引用</h1><h2 id="2-1-引用的基本使用"><a href="#2-1-引用的基本使用" class="headerlink" title="2.1 引用的基本使用"></a>2.1 引用的基本使用</h2><p><strong>作用：</strong>给变量起别名 </p><p><strong>语法：</strong>数据类型 &amp;别名 &#x3D; 原名; </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义整型</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//引用语法：数据类型 &amp;别名 = 原名;</span></span><br><span class="line">    <span class="type">int</span> &amp;b = a;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;修改前a= &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;修改前b= &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    b = <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;修改后a= &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;修改后b= &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下: <img src="http://image.camcad.cn/2020/06/2020060206591586.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识03：内存分区模型（new操作符）</title>
      <link href="/post/f5a87345.html"/>
      <url>/post/f5a87345.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-核心知识"><a href="#C-核心知识" class="headerlink" title="C++核心知识"></a>C++核心知识</h1><p>本阶段主要针对C++面向对象编程技术做详细讲解，探讨C++中的核心和精髓。</p><h2 id="1、内存分区模型"><a href="#1、内存分区模型" class="headerlink" title="1、内存分区模型"></a>1、内存分区模型</h2><p><strong>C++程序在执行时，将内存大方向划分4个区域：</strong></p><ul><li>代码区：存放函数体的二进制代码，由操作系统进行管理。</li><li>全局区：存放全局变量和静态变量以及常量。</li><li>栈区：由编译器自动分配释放，存放函数的参数的参数值，局部变量等。</li><li>堆区：由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收。</li></ul><p><strong>内存四区意义：</strong> 不同区域存放的数据，赋予不同的生命周期，给我们更大的灵活编程。</p><h3 id="1-3-new操作符"><a href="#1-3-new操作符" class="headerlink" title="1.3 new操作符"></a>1.3 new操作符</h3><p>C++中利用new操作符在堆区开辟数据。 堆区开辟的数据，由程序员手动开辟，手动释放，释放利用操作符delete。 </p><p><strong>语法：</strong>new 数据类型 利用new创建的数据，会返回该数据对应的类型指针。 </p><p><strong>示例1：基本语法</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *<span class="title function_">func</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//利用new关键字，可以将数据开辟到堆区</span></span><br><span class="line">    <span class="comment">//指针 本质也是局部变量放在栈区上，指针保存的 数据 是放在堆区上</span></span><br><span class="line">    <span class="type">int</span> *a = new <span class="type">int</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> a;       <span class="comment">//返回堆区开辟的内存地址</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//接受func函数返回开辟在堆区的数据</span></span><br><span class="line">    <span class="type">int</span> *main_a = func();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *main_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    delete main_a;      <span class="comment">//释放内存</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例2：利用new操作符创建数组（int类型）</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在堆区利用new操作符开辟数组</span></span><br><span class="line"><span class="type">int</span> *<span class="title function_">func</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建10个整型数据的数组在堆区</span></span><br><span class="line">    <span class="type">int</span> *arr = new <span class="type">int</span>[<span class="number">10</span>];     <span class="comment">//10表示数组有10个元素</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//给堆区10个数组赋值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        arr[i] = <span class="number">100</span> + i;       <span class="comment">//给元素赋值 100~109</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印堆区数组里面的值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放内存</span></span><br><span class="line">    delete[] arr;       <span class="comment">//注意：在堆区上的数组，释放内存时需加上[]符号表示数组</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> *main_a = func();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识02：内存分区模型（程序运行后）</title>
      <link href="/post/a9567b5e.html"/>
      <url>/post/a9567b5e.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-核心知识"><a href="#C-核心知识" class="headerlink" title="C++核心知识"></a>C++核心知识</h1><p>本阶段主要针对C++面向对象编程技术做详细讲解，探讨C++中的核心和精髓。</p><h2 id="1、内存分区模型"><a href="#1、内存分区模型" class="headerlink" title="1、内存分区模型"></a>1、内存分区模型</h2><p><strong>C++程序在执行时，将内存大方向划分4个区域：</strong></p><ul><li>代码区：存放函数体的二进制代码，由操作系统进行管理。</li><li>全局区：存放全局变量和静态变量以及常量。</li><li>栈区：由编译器自动分配释放，存放函数的参数的参数值，局部变量等。</li><li>堆区：由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收。</li></ul><p><strong>内存四区意义：</strong> 不同区域存放的数据，赋予不同的生命周期，给我们更大的灵活编程。</p><h3 id="1-2-程序运行后"><a href="#1-2-程序运行后" class="headerlink" title="1.2 程序运行后"></a>1.2 程序运行后</h3><p><strong>栈区：</strong> 由编译器自动分配释放，存放函数的参数值、局部变量等。 </p><p><strong>注意事项：</strong>不要返回局部变量的地址，栈区开辟的数据由编译器自动释放。 </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注意事项：栈区的数据由编译器管理开辟和释放（不要返回局部变量的地址）</span></span><br><span class="line"><span class="type">int</span> *<span class="title function_">func</span><span class="params">(<span class="type">int</span> a<span class="comment">/*形参变量数据存放在栈区，函数执行完后将自动释放内存*/</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;     <span class="comment">//局部变量存放在栈区，栈区的数据在函数执行完后自动释放</span></span><br><span class="line">    <span class="keyword">return</span> &amp;b;      <span class="comment">//返回局部变量的地址</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//接受func函数的返回值</span></span><br><span class="line">    <span class="type">int</span> *main_a = func(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *main_a &lt;&lt; <span class="built_in">endl</span>;    <span class="comment">//第一次可以打印正确的数值是因为编译器做了保留</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *main_a &lt;&lt; <span class="built_in">endl</span>;    <span class="comment">//错误，第二次数据就不再保留（函数执行完后进行了释放）</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/06/2020060202442777-1024x387.jpg"></p><p><strong>堆区：</strong> 由程序员分配释放，若程序员不释放程序结束时由操作系统自动回收。 在C++中主要利用new在堆区开辟内存。 </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *<span class="title function_">func</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//利用new关键字，可以将数据开辟到堆区</span></span><br><span class="line">    <span class="comment">//指针 本质也是局部变量放在栈区上，指针保存的 数据 是放在堆区上</span></span><br><span class="line">    <span class="type">int</span> *a = new <span class="type">int</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> a;       <span class="comment">//返回堆区开辟的内存地址</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//接受func函数返回开辟在堆区的数据</span></span><br><span class="line">    <span class="type">int</span> *main_a = func();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *main_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *main_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    delete main_a;      <span class="comment">//释放内存</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/06/2020060203101752-1024x549.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程</title>
      <link href="/post/b2d53884.html"/>
      <url>/post/b2d53884.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-语言-零基础入门教程"><a href="#C-语言-零基础入门教程" class="headerlink" title="C++语言 零基础入门教程"></a>C++语言 零基础入门教程</h1><h2 id="1、简介："><a href="#1、简介：" class="headerlink" title="1、简介："></a>1、简介：</h2><p>C++ 是一种面向对象的计算机程序设计语言，由美国AT&amp;T贝尔实验室的本贾尼·斯特劳斯特卢普博士在20世纪80年代初期发明并实现（最初这种语言被称作“C with Classes”带类的C）。它是一种静态数据类型检查的、支持多重编程范式的通用程序设计语言。它支持过程化程序设计、数据抽象、面向对象程序设计、泛型程序设计等多种程序设计风格。</p><h3 id="第一章：C-初识"><a href="#第一章：C-初识" class="headerlink" title="第一章：C++初识"></a>第一章：C++初识</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">001</td><td align="left"><a href="https://notes.camcad.cn/post/b896bb48.html">C&#x2F;C++语言 零基础入门教程01：第一个C++程序“HelloWorld”</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=2">08:22</a></td></tr><tr><td align="center">002</td><td align="left"><a href="https://notes.camcad.cn/post/5a50df31.html">C&#x2F;C++语言 零基础入门教程02：单行注释&#x2F;多行注释</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=3">05:41</a></td></tr><tr><td align="center">003</td><td align="left"><a href="https://notes.camcad.cn/post/6e88c124.html">C&#x2F;C++语言 零基础入门教程03：变量的意义&#x2F;变量的使用</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=2">05:17</a></td></tr><tr><td align="center">004</td><td align="left"><a href="https://notes.camcad.cn/post/8fe4479e.html">C&#x2F;C++语言 零基础入门教程04：常量与变量的区别&#x2F;变量的使用</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=5">07:57</a></td></tr><tr><td align="center">005</td><td align="left"><a href="https://notes.camcad.cn/post/b90c4483.html">C&#x2F;C++语言 零基础入门教程05：C&#x2F;C++中常用的编程关键字</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=6">03:43</a></td></tr><tr><td align="center">006</td><td align="left"><a href="https://notes.camcad.cn/post/6cc951e8.html">C&#x2F;C++语言 零基础入门教程06：标识符命名规则</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=7">09:00</a></td></tr></tbody></table><h3 id="第二章：数据类型"><a href="#第二章：数据类型" class="headerlink" title="第二章：数据类型"></a>第二章：数据类型</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">007</td><td align="left"><a href="https://notes.camcad.cn/post/145d1acc.html">C&#x2F;C++语言 零基础入门教程07：数据类型-整型（short、int、long、long long）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=8">11:11</a></td></tr><tr><td align="center">008</td><td align="left"><a href="https://notes.camcad.cn/post/2f84322d.html">C&#x2F;C++语言 零基础入门教程08：sizeof 关键字</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=9">06:54</a></td></tr><tr><td align="center">009</td><td align="left"><a href="https://notes.camcad.cn/post/d4eac064.html">C&#x2F;C++语言 零基础入门教程09：数据类型-实型（float、double）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=10">11:59</a></td></tr><tr><td align="center">010</td><td align="left"><a href="https://notes.camcad.cn/post/29c728fa.html">C&#x2F;C++语言 零基础入门教程10：数据类型-字符型（char）｜ASCII 编码对照表</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=11">10:33</a></td></tr><tr><td align="center">011</td><td align="left"><a href="https://notes.camcad.cn/post/d374177.html">C&#x2F;C++语言 零基础入门教程11：数据类型-转义字符</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=12">07:28</a></td></tr><tr><td align="center">012</td><td align="left"><a href="https://notes.camcad.cn/post/b12d45c4.html">C&#x2F;C++语言 零基础入门教程12：数据类型-字符串型（char、string）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=13">07:35</a></td></tr><tr><td align="center">013</td><td align="left"><a href="https://notes.camcad.cn/post/d38bc2de.html">C&#x2F;C++语言 零基础入门教程13：数据类型-布尔类型（bool）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=14">04:06</a></td></tr><tr><td align="center">014</td><td align="left"><a href="https://notes.camcad.cn/post/fa01f24.html">C&#x2F;C++语言 零基础入门教程14：数据类型-数据的输入</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=15">10:42</a></td></tr></tbody></table><h3 id="第三章：运算符"><a href="#第三章：运算符" class="headerlink" title="第三章：运算符"></a>第三章：运算符</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">015</td><td align="left"><a href="https://notes.camcad.cn/post/f347932f.html">C&#x2F;C++语言 零基础入门教程15：运算符-算术运算符</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=16">10:56</a></td></tr><tr><td align="center">016</td><td align="left"><a href="https://notes.camcad.cn/post/1a1b9d69.html">C&#x2F;C++语言 零基础入门教程16：运算符-赋值运算符</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=17">07:37</a></td></tr><tr><td align="center">017</td><td align="left"><a href="https://notes.camcad.cn/post/ced67161.html">C&#x2F;C++语言 零基础入门教程17：运算符-比较运算符</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=20">05:18</a></td></tr><tr><td align="center">018</td><td align="left"><a href="https://notes.camcad.cn/post/ea417dd8.html">C&#x2F;C++语言 零基础入门教程18：运算符-逻辑运算符</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=21">10:30</a></td></tr></tbody></table><h3 id="第四章：程序流程结构"><a href="#第四章：程序流程结构" class="headerlink" title="第四章：程序流程结构"></a>第四章：程序流程结构</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">019</td><td align="left"><a href="https://notes.camcad.cn/post/f87d550a.html">C&#x2F;C++语言 零基础入门教程19：程序流程结构-选择结构（if语句）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=24">10:41</a></td></tr><tr><td align="center">020</td><td align="left"><a href="https://notes.camcad.cn/post/1e4ffda8.html">C&#x2F;C++语言 零基础入门教程20：程序流程结构-选择结构（三目运算符）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=29">06:31</a></td></tr><tr><td align="center">021</td><td align="left"><a href="https://notes.camcad.cn/post/fd1e91e2.html">C&#x2F;C++语言 零基础入门教程21：程序流程结构-选择结构（switch语句）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=30">06:01</a></td></tr><tr><td align="center">022</td><td align="left"><a href="https://notes.camcad.cn/post/2a571973.html">C&#x2F;C++语言 零基础入门教程22：程序流程结构-循环结构（while循环语句）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=31">09:23</a></td></tr><tr><td align="center">023</td><td align="left"><a href="https://notes.camcad.cn/post/b20f232b.html">C&#x2F;C++语言 零基础入门教程23：程序流程结构-循环结构（do…while循环语句）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=33">06:46</a></td></tr><tr><td align="center">024</td><td align="left"><a href="https://notes.camcad.cn/post/c0f51a0.html">C&#x2F;C++语言 零基础入门教程24：程序流程结构-循环结构（for循环语句）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=35">07:17</a></td></tr><tr><td align="center">025</td><td align="left"><a href="https://notes.camcad.cn/post/fb12f7df.html">C&#x2F;C++语言 零基础入门教程25：程序流程结构-循环结构（嵌套循环）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=36">11:24</a></td></tr><tr><td align="center">026</td><td align="left"><a href="https://notes.camcad.cn/post/ee302b30.html">C&#x2F;C++语言 零基础入门教程26：程序流程结构-跳转语句（break语句）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=39">12:20</a></td></tr><tr><td align="center">027</td><td align="left"><a href="https://notes.camcad.cn/post/7c12f79e.html">C&#x2F;C++语言 零基础入门教程27：程序流程结构-跳转语句（continue语句）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=40">08:38</a></td></tr><tr><td align="center">028</td><td align="left"><a href="https://notes.camcad.cn/post/576f3422.html">C&#x2F;C++语言 零基础入门教程28：程序流程结构-跳转语句（goto语句）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=41">05:23</a></td></tr></tbody></table><h3 id="第五章：数组"><a href="#第五章：数组" class="headerlink" title="第五章：数组"></a>第五章：数组</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">029</td><td align="left"><a href="https://notes.camcad.cn/post/a644770e.html">C&#x2F;C++语言 零基础入门教程29：数组-一维数组（一维数组的定义方式）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=42">18:13</a></td></tr><tr><td align="center">030</td><td align="left"><a href="https://notes.camcad.cn/post/4796245.html">C&#x2F;C++语言 零基础入门教程30：数组-一维数组（一维数组数组名）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=43">14:26</a></td></tr><tr><td align="center">031</td><td align="left"><a href="https://notes.camcad.cn/post/3920124c.html">C&#x2F;C++语言 零基础入门教程31：数组-一维数组（冒泡排序）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=46">18:57</a></td></tr><tr><td align="center">032</td><td align="left"><a href="https://notes.camcad.cn/post/a5caedcb.html">C&#x2F;C++语言 零基础入门教程32：数组-二维数组</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=47">14:30</a></td></tr><tr><td align="center">033</td><td align="left"><a href="https://notes.camcad.cn/post/591da572.html">C&#x2F;C++语言 零基础入门教程33：数组-二维数组数组名</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=48">14:07</a></td></tr><tr><td align="center">034</td><td align="left"><a href="https://notes.camcad.cn/post/94c0b7aa.html">C&#x2F;C++语言 零基础入门教程34：数组-二维数组应用案例</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=49">10:20</a></td></tr><tr><td align="center">035</td><td align="left"><a href="https://notes.camcad.cn/post/245f3a26.html">C&#x2F;C++语言 零基础入门教程35：函数（概述、函数的定义）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=50">11:20</a></td></tr><tr><td align="center">036</td><td align="left"><a href="https://notes.camcad.cn/post/9cc4cf82.html">C&#x2F;C++语言 零基础入门教程36：函数（函数的调用）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=51">07:44</a></td></tr><tr><td align="center">037</td><td align="left"><a href="https://notes.camcad.cn/post/520ef675.html">C&#x2F;C++语言 零基础入门教程37：函数（值传递）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=52">11:54</a></td></tr><tr><td align="center">038</td><td align="left"><a href="https://notes.camcad.cn/post/94cbec15.html">C&#x2F;C++语言 零基础入门教程38：函数（函数的常见样式）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=53">08:57</a></td></tr><tr><td align="center">039</td><td align="left"><a href="https://notes.camcad.cn/post/d249b32b.html">C&#x2F;C++语言 零基础入门教程39：函数（函数的声明）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=54">08:24</a></td></tr><tr><td align="center">040</td><td align="left"><a href="https://notes.camcad.cn/post/3157c3fd.html">C&#x2F;C++语言 零基础入门教程40：函数（函数的分文件编写）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=55">09:49</a></td></tr></tbody></table><h3 id="第六章：指针"><a href="#第六章：指针" class="headerlink" title="第六章：指针"></a>第六章：指针</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">041</td><td align="left"><a href="https://notes.camcad.cn/post/9c0faa35.html">C&#x2F;C++语言 零基础入门教程41：指针（指针的基本概念&#x2F;指针变量的定义和使用）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=56">10:10</a></td></tr><tr><td align="center">042</td><td align="left"><a href="https://notes.camcad.cn/post/985d89af.html">C&#x2F;C++语言 零基础入门教程42：指针（指针所占内存空间）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=57">06:22</a></td></tr><tr><td align="center">043</td><td align="left"><a href="https://notes.camcad.cn/post/96e13ca0.html">C&#x2F;C++语言 零基础入门教程43：指针（空指针&#x2F;野指针）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=58">07:46</a></td></tr><tr><td align="center">044</td><td align="left"><a href="https://notes.camcad.cn/post/587782a3.html">C&#x2F;C++语言 零基础入门教程44：指针（const修饰指针）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=60">15:05</a></td></tr><tr><td align="center">045</td><td align="left"><a href="https://notes.camcad.cn/post/bb3e0de5.html">C&#x2F;C++语言 零基础入门教程45：指针（指针与数组）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=61">07:27</a></td></tr><tr><td align="center">046</td><td align="left"><a href="https://notes.camcad.cn/post/43672f3.html">C&#x2F;C++语言 零基础入门教程46：指针（指针与函数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=62">11:23</a></td></tr><tr><td align="center">047</td><td align="left"><a href="https://notes.camcad.cn/post/924960a9.html">C&#x2F;C++语言 零基础入门教程47：指针（指针配合数组和函数案例）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=63">08:37</a></td></tr></tbody></table><h3 id="第七章：结构体"><a href="#第七章：结构体" class="headerlink" title="第七章：结构体"></a>第七章：结构体</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">048</td><td align="left"><a href="https://notes.camcad.cn/post/4b12509c.html">C&#x2F;C++语言 零基础入门教程48：结构体（结构体基本概念&#x2F;结构体定义和使用）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=64">14:27</a></td></tr><tr><td align="center">049</td><td align="left"><a href="https://notes.camcad.cn/post/5bba5fa.html">C&#x2F;C++语言 零基础入门教程49：结构体（结构体数组）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=65">08:10</a></td></tr><tr><td align="center">050</td><td align="left"><a href="https://notes.camcad.cn/post/a3f94e94.html">C&#x2F;C++语言 零基础入门教程50：结构体（结构体指针）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=66">06:28</a></td></tr><tr><td align="center">051</td><td align="left"><a href="https://notes.camcad.cn/post/3083a4c1.html">C&#x2F;C++语言 零基础入门教程51：结构体（结构体嵌套结构体）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=67">09:28</a></td></tr><tr><td align="center">052</td><td align="left"><a href="https://notes.camcad.cn/post/ac475861.html">C&#x2F;C++语言 零基础入门教程52：结构体（结构体做函数参数）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=68">10:57</a></td></tr><tr><td align="center">053</td><td align="left"><a href="https://notes.camcad.cn/post/798e4a4c.html">C&#x2F;C++语言 零基础入门教程53：结构体（结构体中const使用场景）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=69">11:17</a></td></tr><tr><td align="center">054</td><td align="left"><a href="https://notes.camcad.cn/post/cffa1c48.html">C&#x2F;C++语言 零基础入门教程54：结构体（结构体案例1）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=70">20:36</a></td></tr><tr><td align="center">055</td><td align="left"><a href="https://notes.camcad.cn/post/12d1a46e.html">C&#x2F;C++语言 零基础入门教程55：结构体（结构体案例2）</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=71">12:53</a></td></tr></tbody></table><h3 id="第八章：实战案例（通讯录管理系统）"><a href="#第八章：实战案例（通讯录管理系统）" class="headerlink" title="第八章：实战案例（通讯录管理系统）"></a>第八章：实战案例（通讯录管理系统）</h3><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">视频</th></tr></thead><tbody><tr><td align="center">056</td><td align="left"><a href="https://notes.camcad.cn/post/b95538fe.html">C&#x2F;C++语言 实战案例_通讯录管理系统01：系统需求</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=72">06:44</a></td></tr><tr><td align="center">057</td><td align="left"><a href="https://notes.camcad.cn/post/320e246.html">C&#x2F;C++语言 实战案例_通讯录管理系统02：创建项目</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=73">02:49</a></td></tr><tr><td align="center">058</td><td align="left"><a href="https://notes.camcad.cn/post/cb24df7a.html">C&#x2F;C++语言 实战案例_通讯录管理系统03：菜单功能</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=74">06:03</a></td></tr><tr><td align="center">059</td><td align="left"><a href="https://notes.camcad.cn/post/ab27ab7d.html">C&#x2F;C++语言 实战案例_通讯录管理系统04：退出功能</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=75">08:15</a></td></tr><tr><td align="center">060</td><td align="left"><a href="https://notes.camcad.cn/post/5d03cf40.html">C&#x2F;C++语言 实战案例_通讯录管理系统05：添加联系人</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=76">08:47</a></td></tr><tr><td align="center">061</td><td align="left"><a href="https://notes.camcad.cn/post/70d71dbb.html">C&#x2F;C++语言 实战案例_通讯录管理系统06：显示联系人</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=78">10:26</a></td></tr><tr><td align="center">062</td><td align="left"><a href="https://notes.camcad.cn/post/adb305c2.html">C&#x2F;C++语言 实战案例_通讯录管理系统07：删除联系人</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=79">09:49</a></td></tr><tr><td align="center">063</td><td align="left"><a href="https://notes.camcad.cn/post/def9651.html">C&#x2F;C++语言 实战案例_通讯录管理系统08：查找联系人</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=81">08:36</a></td></tr><tr><td align="center">064</td><td align="left"><a href="https://notes.camcad.cn/post/df98f256.html">C&#x2F;C++语言 实战案例_通讯录管理系统09：修改联系人</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=82">12:26</a></td></tr><tr><td align="center">065</td><td align="left"><a href="https://notes.camcad.cn/post/6e2c4abd.html">C&#x2F;C++语言 实战案例_通讯录管理系统10：清空联系人</a></td><td align="center"><a href="https://www.bilibili.com/video/BV1et411b73Z?p=83">06:14</a></td></tr><tr><td align="center">066</td><td align="left"><a href="https://notes.camcad.cn/post/775fada.html">C&#x2F;C++语言 实战案例_通讯录管理系统11：头文件&#x2F;源文件</a></td><td align="center">00:00</td></tr></tbody></table><h2 id="视频转载-bilibili博主《黑马程序员》"><a href="#视频转载-bilibili博主《黑马程序员》" class="headerlink" title="视频转载 bilibili博主《黑马程序员》"></a>视频转载 bilibili博主《<a href="https://space.bilibili.com/37974444?spm_id_from=333.788.b_765f7570696e666f.2">黑马程序员</a>》</h2>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
          <category> 视频教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++核心知识01：内存分区模型（程序运行前）</title>
      <link href="/post/1f273a4e.html"/>
      <url>/post/1f273a4e.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-核心知识"><a href="#C-核心知识" class="headerlink" title="C++核心知识"></a>C++核心知识</h1><p>本阶段主要针对C++面向对象编程技术做详细讲解，探讨C++中的核心和精髓。</p><h2 id="1、内存分区模型"><a href="#1、内存分区模型" class="headerlink" title="1、内存分区模型"></a>1、内存分区模型</h2><p><strong>C++程序在执行时，将内存大方向划分4个区域：</strong></p><ul><li>代码区：存放函数体的二进制代码，由操作系统进行管理。</li><li>全局区：存放全局变量和静态变量以及常量。</li><li>栈区：由编译器自动分配释放，存放函数的参数的参数值，局部变量等。</li><li>堆区：由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收。</li></ul><p><strong>内存四区意义：</strong> 不同区域存放的数据，赋予不同的生命周期，给我们更大的灵活编程。</p><h3 id="1-1-程序运行前"><a href="#1-1-程序运行前" class="headerlink" title="1.1 程序运行前"></a>1.1 程序运行前</h3><p>在程序编译后，生成了EXE可执行程序，<br><strong>未执行该程序前</strong>分为两个区域。 </p><p><strong>代码区：</strong> 存放CPU执行的机器指令 代码区是<strong>共享</strong>的，共享的目的是对于频繁被执行的程序，只需要在内存中有一份代码即可。 代码区是<strong>只读</strong>的，使其只读的原因是防止程序意外修改了它的指令。 </p><p><strong>全局区：</strong> 全局变量和静态变量存放在此。 全局区还包含了常量区，字符串常量和其他常量也存放在此。 该区域的数据在程序结束后由操作系统释放。 <img src="http://image.camcad.cn/2020/06/2020060111474469-1024x338.jpg"></p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//备注：s--&gt;static(静态)  g--&gt;global(全局)   c--&gt;const(常量)        l--&gt;local(局部)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//全局变量</span></span><br><span class="line"><span class="type">int</span> g_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> g_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰的全局常量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> g_c_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> g_c_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//变量</span></span><br><span class="line">    <span class="comment">//局部变量（在函数体内定义的变量都为局部变量）</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;局部变量a的地址为\t&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;局部变量b的地址为\t&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;b &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//全局变量</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;全局变量g_a的地址为\t&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;全局变量g_b的地址为\t&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态变量</span></span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> s_a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> s_b = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;静态变量s_a的地址为\t&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;静态变量s_b的地址为\t&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_b &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//常量</span></span><br><span class="line">    <span class="comment">//字符串常量</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;字符串常量为\t\t&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;<span class="string">&quot;Hello World&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//const修饰的全局常量</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;const全局常量g_c_a为\t&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_c_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;const全局常量g_c_b为\t&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_c_b &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//const修饰的局部常量</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> c_l_a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> c_l_b = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;const局部常量c_l_a为\t&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;c_l_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;const局部常量c_l_b为\t&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;c_l_b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停（请按任意键继续...）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/06/2020060112475946-1024x589.jpg"></p><p><strong>总结：</strong></p><ul><li>C++中在程序运行前分为全局区和代码区。</li><li>代码区特点是共享和只读。</li><li>全局区中存放全局变量、静态变量和字符串常量。</li><li>常量区中存放const修饰的全局常量和字符串常量。</li></ul>]]></content>
      
      
      <categories>
          
          <category> C++核心知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C++核心知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 实战案例_通讯录管理系统11：头文件/源文件</title>
      <link href="/post/775fada.html"/>
      <url>/post/775fada.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="通讯录管理系统"><a href="#通讯录管理系统" class="headerlink" title="通讯录管理系统"></a>通讯录管理系统</h1><h2 id="头文件（-h）"><a href="#头文件（-h）" class="headerlink" title="头文件（.h）"></a>头文件（.h）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通讯录管理系统 头文件（.h）</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 1000    <span class="comment">//最大人数</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单功能</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMenu</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对象界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ObjectUI</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//联系人结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//姓名</span></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//性别 </span></span><br><span class="line">    <span class="built_in">string</span> m_Sex;   <span class="comment">//性别：1-&gt;男 ,2-&gt;女</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//年龄</span></span><br><span class="line">    <span class="type">int</span> m_Age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//联系电话</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> m_Phone;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//家庭住址</span></span><br><span class="line">    <span class="built_in">string</span> m_Addr;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通讯录结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Addressbooks</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Person</span> <span class="title">PersonArray</span>[<span class="title">MAX</span>];</span>     <span class="comment">//通讯录中保存的联系人数组</span></span><br><span class="line">    <span class="type">int</span> m_Size; <span class="comment">//通讯录中人员个数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AddPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span> )</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测联系人是否存在</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isExist</span><span class="params">(Addressbooks *<span class="built_in">abs</span>, <span class="built_in">string</span> name)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeletePerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查找联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">FindPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ModifyPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="源文件（-cpp）"><a href="#源文件（-cpp）" class="headerlink" title="源文件（.cpp）"></a>源文件（.cpp）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通讯录管理系统 源文件（.cpp）</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;通讯录管理系统.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对象界面</span></span><br><span class="line">    ObjectUI();</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单功能</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMenu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;***************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  1、添加联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  2、显示联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  3、删除联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  4、查找联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  5、修改联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  6、清空联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  0、退出通讯录  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;***************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对象界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ObjectUI</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建通讯录</span></span><br><span class="line">    Addressbooks <span class="built_in">abs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化通讯录中人数</span></span><br><span class="line">    <span class="built_in">abs</span>.m_Size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化选择编号</span></span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ShowMenu(); <span class="comment">//菜单功能</span></span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; select;    <span class="comment">//输入数据</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (select)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:     <span class="comment">//1、添加联系人</span></span><br><span class="line">            AddPerson(&amp;<span class="built_in">abs</span>);    <span class="comment">//利用地址传递，可以修饰实参</span></span><br><span class="line">            <span class="built_in">abs</span>.m_Size++;   <span class="comment">//添加成功+1</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:     <span class="comment">//2、显示联系人</span></span><br><span class="line">            ShowPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:     <span class="comment">//3、删除联系人</span></span><br><span class="line">            DeletePerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:     <span class="comment">//4、查找联系人</span></span><br><span class="line">            FindPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:     <span class="comment">//5、修改联系人</span></span><br><span class="line">            ModifyPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:     <span class="comment">//6、清空联系人</span></span><br><span class="line">            CleanPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:     <span class="comment">//0、退出通讯录</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;欢迎您的下次使用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AddPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//判断电话本是否已满</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">abs</span>-&gt;m_Size == MAX)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通讯录已满，无法添加&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//姓名</span></span><br><span class="line">        <span class="built_in">string</span> name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Name = name;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//性别</span></span><br><span class="line">        <span class="type">int</span> sex = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入性别：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1--&gt;男&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2--&gt;女&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; sex;</span><br><span class="line">            <span class="keyword">if</span> (sex == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Sex = <span class="string">&quot;男&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (sex == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Sex = <span class="string">&quot;女&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入的数据错误，请您重新输入！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//年龄</span></span><br><span class="line">        <span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;年龄值范围：1 &lt;= age &lt;= 200&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; age;</span><br><span class="line">            <span class="keyword">if</span> (age != <span class="number">0</span> &amp;&amp; age &lt;= <span class="number">200</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Age = age;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入的数据错误，请您重新输入！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//联系电话</span></span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> phone = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; phone;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Phone = phone;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//家庭住址</span></span><br><span class="line">        <span class="built_in">string</span> addr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入家庭住址：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; addr;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Addr = addr;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;添加成功&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//请按任意键继续</span></span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);        <span class="comment">//清屏</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">abs</span>-&gt;m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通讯录中没有任何联系人，请添加联系人。&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="built_in">abs</span>-&gt;m_Size; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;编号：&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[i].m_Name &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;性别：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[i].m_Sex &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[i].m_Age &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;电话：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[i].m_Phone &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;住址：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[i].m_Addr &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测联系人是否存在</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isExist</span><span class="params">(Addressbooks *<span class="built_in">abs</span>, <span class="built_in">string</span> name)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="built_in">abs</span>-&gt;m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>-&gt;PersonArray[i].m_Name == name)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;   <span class="comment">//找到需要删除联系人的下标</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;      <span class="comment">//未能找到需要删除的联系人</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeletePerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入需要删除的姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">    <span class="type">int</span> ret = isExist(<span class="built_in">abs</span>, name);   <span class="comment">//检测联系人</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;未能找到需要删除的联系人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> i = ret; i &lt; <span class="built_in">abs</span>-&gt;m_Size; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">abs</span>-&gt;PersonArray[i] = <span class="built_in">abs</span>-&gt;PersonArray[i + <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;m_Size--;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜您，删除成功！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查找联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">FindPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入需要删除的姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">    <span class="type">int</span> ret = isExist(<span class="built_in">abs</span>, name);   <span class="comment">//检测联系人</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;未能找到需要查找的联系人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;编号：&quot;</span> &lt;&lt; ret + <span class="number">1</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Name &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;性别：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Sex &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Age &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;电话：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Phone &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;住址：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Addr &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ModifyPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入需要更改联系人的姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">    <span class="type">int</span> ret = isExist(<span class="built_in">abs</span>, name);   <span class="comment">//检测联系人</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;未能找到需要查找的联系人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//姓名</span></span><br><span class="line">        <span class="built_in">string</span> name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Name = name;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//性别</span></span><br><span class="line">        <span class="type">int</span> sex = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入性别：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1--&gt;男&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2--&gt;女&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; sex;</span><br><span class="line">            <span class="keyword">if</span> (sex == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Sex = <span class="string">&quot;男&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (sex == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Sex = <span class="string">&quot;女&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入的数据错误，请您重新输入！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//年龄</span></span><br><span class="line">        <span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;年龄值范围：1 &lt;= age &lt;= 200&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; age;</span><br><span class="line">            <span class="keyword">if</span> (age != <span class="number">0</span> &amp;&amp; age &lt;= <span class="number">200</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Age = age;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入的数据错误，请您重新输入！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//联系电话</span></span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> phone = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; phone;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Phone = phone;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//家庭住址</span></span><br><span class="line">        <span class="built_in">string</span> addr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入家庭住址：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; addr;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Addr = addr;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> 通讯录管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 实战案例_通讯录管理系统10：清空联系人</title>
      <link href="/post/6e2c4abd.html"/>
      <url>/post/6e2c4abd.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="通讯录管理系统"><a href="#通讯录管理系统" class="headerlink" title="通讯录管理系统"></a>通讯录管理系统</h1><h2 id="10、清空联系人"><a href="#10、清空联系人" class="headerlink" title="10、清空联系人"></a>10、清空联系人</h2><p>功能描述：清空通讯录中所有信息。 清空联系人实现步骤：</p><ul><li>封装清空联系人函数</li><li>测试清空联系人</li></ul><h2 id="10-1-封装清空联系人函数"><a href="#10-1-封装清空联系人函数" class="headerlink" title="10.1 封装清空联系人函数"></a>10.1 封装清空联系人函数</h2><p><strong>实现思路：</strong>将通讯录所有联系人信息清除掉，只要将通讯录记录的联系人数量置为0，做逻辑清空即可。（void Cleanperssbooks(Addressbooks *abs)） </p><p><strong>清空联系人代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">CleanPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">abs</span>-&gt;m_Size = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通讯录已清空&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-2-测试清空联系人"><a href="#10-2-测试清空联系人" class="headerlink" title="10.2 测试清空联系人"></a>10.2 测试清空联系人</h2><p>在switch case语句中，case6里添加：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">6</span>:     <span class="comment">//6、清空联系人</span></span><br><span class="line">    CleanPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> 通讯录管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 实战案例_通讯录管理系统09：修改联系人</title>
      <link href="/post/df98f256.html"/>
      <url>/post/df98f256.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="通讯录管理系统"><a href="#通讯录管理系统" class="headerlink" title="通讯录管理系统"></a>通讯录管理系统</h1><h2 id="9、修改联系人"><a href="#9、修改联系人" class="headerlink" title="9、修改联系人"></a>9、修改联系人</h2><p><strong>功能描述：</strong>按照姓名重新修改指定联系人。 修改联系人实现步骤：</p><ul><li>封装修改联系人函数</li><li>测试修改联系人功能</li></ul><h2 id="9-1-封装修改联系人函数"><a href="#9-1-封装修改联系人函数" class="headerlink" title="9.1 封装修改联系人函数"></a>9.1 封装修改联系人函数</h2><p><strong>实现思路：</strong>查找用户输入的联系人，如果查找成功进行修改操作，查找失败提示无此人。（ModifyPerson(Addressbooks *abs)） 修改联系人代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ModifyPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入需要更改联系人的姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">    <span class="type">int</span> ret = isExist(<span class="built_in">abs</span>, name);   <span class="comment">//检测联系人</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;未能找到需要查找的联系人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//姓名</span></span><br><span class="line">        <span class="built_in">string</span> name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Name = name;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//性别</span></span><br><span class="line">        <span class="type">int</span> sex = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入性别：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1--&gt;男&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2--&gt;女&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; sex;</span><br><span class="line">            <span class="keyword">if</span> (sex == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Sex = <span class="string">&quot;男&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (sex == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Sex = <span class="string">&quot;女&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入的数据错误，请您重新输入！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//年龄</span></span><br><span class="line">        <span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;年龄值范围：1 &lt;= age &lt;= 200&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; age;</span><br><span class="line">            <span class="keyword">if</span> (age != <span class="number">0</span> &amp;&amp; age &lt;= <span class="number">200</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Age = age;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入的数据错误，请您重新输入！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//联系电话</span></span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> phone = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; phone;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Phone = phone;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//家庭住址</span></span><br><span class="line">        <span class="built_in">string</span> addr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入家庭住址：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; addr;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Addr = addr;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-2-测试修改联系人功能"><a href="#9-2-测试修改联系人功能" class="headerlink" title="9.2 测试修改联系人功能"></a>9.2 测试修改联系人功能</h2><p>在switch case语句中，case5里添加：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">5</span>:     <span class="comment">//5、修改联系人</span></span><br><span class="line">    ModifyPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> 通讯录管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 实战案例_通讯录管理系统08：查找联系人</title>
      <link href="/post/def9651.html"/>
      <url>/post/def9651.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="通讯录管理系统"><a href="#通讯录管理系统" class="headerlink" title="通讯录管理系统"></a>通讯录管理系统</h1><h2 id="8、查找联系人"><a href="#8、查找联系人" class="headerlink" title="8、查找联系人"></a>8、查找联系人</h2><p><strong>功能描述：</strong>按照姓名查看指定联系人信息 查找联系人实现步骤：</p><ul><li>封装查找联系人函数</li><li>测试查找指定联系人</li></ul><h2 id="8-1-封装查找联系人函数"><a href="#8-1-封装查找联系人函数" class="headerlink" title="8.1 封装查找联系人函数"></a>8.1 封装查找联系人函数</h2><p>实现思路：判断用户指定的联系人是否存在，如果存在显示信息，不存在则提示查无此人。（void FindPerson(Addressbooks *abs)） </p><p><strong>查找联系人代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">FindPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入需要删除的姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">    <span class="type">int</span> ret = isExist(<span class="built_in">abs</span>, name);   <span class="comment">//检测联系人</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;未能找到需要查找的联系人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;编号：&quot;</span> &lt;&lt; ret + <span class="number">1</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Name &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;性别：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Sex &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Age &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;电话：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Phone &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;住址：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[ret].m_Addr &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-2-测试查找指定联系人"><a href="#8-2-测试查找指定联系人" class="headerlink" title="8.2 测试查找指定联系人"></a>8.2 测试查找指定联系人</h2><p>在switch case语句中，case4里添加：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">4</span>:     <span class="comment">//4、查找联系人</span></span><br><span class="line">    FindPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> 通讯录管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 实战案例_通讯录管理系统07：删除联系人</title>
      <link href="/post/adb305c2.html"/>
      <url>/post/adb305c2.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="通讯录管理系统"><a href="#通讯录管理系统" class="headerlink" title="通讯录管理系统"></a>通讯录管理系统</h1><h2 id="7、删除联系人"><a href="#7、删除联系人" class="headerlink" title="7、删除联系人"></a>7、删除联系人</h2><p><strong>功能描述：</strong>按照姓名进行删除指定联系人。</p><p>删除联系人现步骤：</p><ul><li>封装检测联系人是否存在</li><li>封装删除联系人函数</li><li>测试删除联系人功能</li></ul><h2 id="7-1-封装检测联系人是否存在"><a href="#7-1-封装检测联系人是否存在" class="headerlink" title="7.1 封装检测联系人是否存在"></a>7.1 封装检测联系人是否存在</h2><p><strong>设计思路：</strong></p><p>删除联系人前，我们需要先判断用户输入的联系人是否存在，如果存在删除，不存在就提示用户没有要删除的联系人。因此我们可以把检测联系人是否存在封闭成一个函数中，如果存在返回联系人在通讯中的位置，不存在返回-1。（int isExist(Addressbooks *abs , string name)） </p><p><strong>代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检测联系人是否存在</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isExist</span><span class="params">(Addressbooks *<span class="built_in">abs</span>, <span class="built_in">string</span> name)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="built_in">abs</span>-&gt;m_Size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>-&gt;PersonArray[i].m_Name == name)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;   <span class="comment">//找到需要删除联系人的下标</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;      <span class="comment">//未能找到需要删除的联系人</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-2-封闭删除联系人函数"><a href="#7-2-封闭删除联系人函数" class="headerlink" title="7.2 封闭删除联系人函数"></a>7.2 封闭删除联系人函数</h2><p>根据用户输入的联系人判断该通讯录中是否有此人，查找到进行删除，并提示删除成功，查不到提示查无此人。 </p><p><strong>代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeletePerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入需要删除的姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">    <span class="type">int</span> ret = isExist(<span class="built_in">abs</span>, name);   <span class="comment">//检测联系人</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;未能找到需要删除的联系人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> i = ret; i &lt; <span class="built_in">abs</span>-&gt;m_Size; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">abs</span>-&gt;PersonArray[i] = <span class="built_in">abs</span>-&gt;PersonArray[i + <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;m_Size--;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜您，删除成功！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> 通讯录管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 实战案例_通讯录管理系统06：显示联系人</title>
      <link href="/post/70d71dbb.html"/>
      <url>/post/70d71dbb.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="通讯录管理系统"><a href="#通讯录管理系统" class="headerlink" title="通讯录管理系统"></a>通讯录管理系统</h1><h2 id="显示联系人"><a href="#显示联系人" class="headerlink" title="显示联系人"></a>显示联系人</h2><p><strong>功能描述：</strong>显示通讯录中已有的联系人信息。3</p><p>显示联系人实现步骤：</p><ul><li>封装显示联系人函数</li><li>测试显示联系人功能</li></ul><h2 id="封装显示联系人函数"><a href="#封装显示联系人函数" class="headerlink" title="封装显示联系人函数"></a>封装显示联系人函数</h2><p><strong>思路：</strong>判断如果当前通讯录中没有人员，就提示记录为空，人数大于0，显示通讯中信息。（void ShowPerson(Addressbooks *abs)）</p><p><strong>显示联系人代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">abs</span>-&gt;m_Size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通讯录中没有任何联系人，请添加联系人。&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="built_in">abs</span>-&gt;m_Size; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;编号：&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[i].m_Name &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;性别：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[i].m_Sex &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[i].m_Age &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;电话：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[i].m_Phone &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;住址：&quot;</span> &lt;&lt; <span class="built_in">abs</span>-&gt;PersonArray[i].m_Addr &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-2-测试显示联系人功能"><a href="#6-2-测试显示联系人功能" class="headerlink" title="6.2 测试显示联系人功能"></a>6.2 测试显示联系人功能</h2><p>在switch case语句中，case2里添加：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">2</span>:     <span class="comment">//2、显示联系人</span></span><br><span class="line">    ShowPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>测试效果如图： <img src="http://image.camcad.cn/2020/05/2020052708504052-1024x297.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> 通讯录管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 实战案例_通讯录管理系统05：添加联系人</title>
      <link href="/post/5d03cf40.html"/>
      <url>/post/5d03cf40.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="通讯录管理系统"><a href="#通讯录管理系统" class="headerlink" title="通讯录管理系统"></a>通讯录管理系统</h1><h2 id="5、添加联系人"><a href="#5、添加联系人" class="headerlink" title="5、添加联系人"></a>5、添加联系人</h2><p><strong>功能描述：</strong> 实现添加降价功能，联系人上限为1000人，联系人信息包括（姓名、性别、年龄、联系电话以及家庭住址）。</p><p><strong>添加联系人实现步骤：</strong></p><ul><li>设计联系人结构体</li><li>设计通讯录结构体</li><li>main函数中创建通讯录</li><li>封装添加联系人函数</li><li>测试添加联系人功能</li></ul><h2 id="5-1-设计联系人结构体"><a href="#5-1-设计联系人结构体" class="headerlink" title="5.1 设计联系人结构体"></a>5.1 设计联系人结构体</h2><p>联系人信息包括：姓名、性别、年龄、联系电话、家庭住址。（struct Person） 设计如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//联系人结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//姓名</span></span><br><span class="line">    <span class="built_in">string</span> m_Name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//性别 </span></span><br><span class="line">    <span class="built_in">string</span> m_Sex;   <span class="comment">//性别：1-&gt;男 ,2-&gt;女</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//年龄</span></span><br><span class="line">    <span class="type">int</span> m_Age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//联系电话</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> m_Phone;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//家庭住址</span></span><br><span class="line">    <span class="built_in">string</span> m_Addr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="5-2-设计通讯录结构体"><a href="#5-2-设计通讯录结构体" class="headerlink" title="5.2 设计通讯录结构体"></a>5.2 设计通讯录结构体</h2><p>设计时候可以在通讯录结构体中，维护一个容量为1000的存放联系人的数组，并记录当前通讯录中联系人数量。（struct Addressbooks） 设计如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通讯录结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Addressbooks</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Person</span> <span class="title">PersonArray</span>[<span class="title">MAX</span>];</span>     <span class="comment">//通讯录中保存的联系人数组</span></span><br><span class="line">    <span class="type">int</span> m_Size; <span class="comment">//通讯录中人员个数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="5-3-ObjectUI函数中创建通讯录"><a href="#5-3-ObjectUI函数中创建通讯录" class="headerlink" title="5.3 ObjectUI函数中创建通讯录"></a>5.3 ObjectUI函数中创建通讯录</h2><p>添加联系人函数封装好后，在main函数中创建一个通讯录变量，这个就是我们需要一直维护的通讯录。（Addressbooks abs） 设计如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ObjectUI函数起始位置添加：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建通讯录</span></span><br><span class="line">    Addressbooks <span class="built_in">abs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化通讯录中人数</span></span><br><span class="line">    <span class="built_in">abs</span>.m_Size = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h2 id="5-4-封装添加联系人函数"><a href="#5-4-封装添加联系人函数" class="headerlink" title="5.4 封装添加联系人函数"></a>5.4 封装添加联系人函数</h2><p><strong>思路：</strong>添加联系人前先判断通讯录是否已满，如果满了就不再添加，未满情况将新联系人信息逐个加入到通讯录。（void AddPerson(Addressbooks *abs)）</p><p><strong>代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加联系人</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AddPerson</span><span class="params">(Addressbooks *<span class="built_in">abs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//判断电话本是否已满</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">abs</span>-&gt;m_Size == MAX)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通讯录已满，无法添加&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//姓名</span></span><br><span class="line">        <span class="built_in">string</span> name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Name = name;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//性别</span></span><br><span class="line">        <span class="type">int</span> sex = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入性别：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1--&gt;男&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2--&gt;女&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; sex;</span><br><span class="line">            <span class="keyword">if</span> (sex == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Sex = <span class="string">&quot;男&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (sex == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Sex = <span class="string">&quot;女&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入的数据错误，请您重新输入！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//年龄</span></span><br><span class="line">        <span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;年龄值范围：1 &lt;= age &lt;= 200&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; age;</span><br><span class="line">            <span class="keyword">if</span> (age != <span class="number">0</span> &amp;&amp; age &lt;= <span class="number">200</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Age = age;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入的数据错误，请您重新输入！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//联系电话</span></span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> phone = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; phone;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Phone = phone;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//家庭住址</span></span><br><span class="line">        <span class="built_in">string</span> addr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入家庭住址：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; addr;</span><br><span class="line">        <span class="built_in">abs</span>-&gt;PersonArray[<span class="built_in">abs</span>-&gt;m_Size].m_Addr = addr;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;添加成功&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//请按任意键继续</span></span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);        <span class="comment">//清屏</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试添加联系人功能"><a href="#测试添加联系人功能" class="headerlink" title="测试添加联系人功能"></a>测试添加联系人功能</h2><p>选择界面中，如果玩家选择了1，代表添加联系人，我们可以测试下该功能。 在swith case语句中，case1里添加：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">1</span>:     <span class="comment">//1、添加联系人</span></span><br><span class="line">            AddPerson(&amp;<span class="built_in">abs</span>);    <span class="comment">//利用地址传递，可以修饰实参</span></span><br><span class="line">            <span class="built_in">abs</span>.m_Size++;   <span class="comment">//添加成功+1</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>测试效果如图： <img src="http://image.camcad.cn/2020/05/2020052707273583-1024x877.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> 通讯录管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 实战案例_通讯录管理系统04：退出功能</title>
      <link href="/post/ab27ab7d.html"/>
      <url>/post/ab27ab7d.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="通讯录管理系统"><a href="#通讯录管理系统" class="headerlink" title="通讯录管理系统"></a>通讯录管理系统</h1><h2 id="4、退出功能"><a href="#4、退出功能" class="headerlink" title="4、退出功能"></a>4、退出功能</h2><p><strong>功能描述：</strong>退出通讯录系统<br><strong>思路：</strong>根据用户不同的选择，进入不同的功能，可以选择switch分支结构，将整个架构进行搭建。</p><p>当用户选择0的时候，执行退出，选择其他先不做任何操作不会退出程序。</p><p><strong>代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//退出功能</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">EscKey</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ShowMenu(); <span class="comment">//菜单功能</span></span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; select;    <span class="comment">//输入数据</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (select)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:     <span class="comment">//1、添加联系人</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:     <span class="comment">//2、显示联系人</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:     <span class="comment">//3、删除联系人</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:     <span class="comment">//4、查找联系人</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:     <span class="comment">//5、修改联系人</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:     <span class="comment">//6、清空联系人</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:     <span class="comment">//0、退出通讯录</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;欢迎您的下次使用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> 通讯录管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 实战案例_通讯录管理系统03：菜单功能</title>
      <link href="/post/cb24df7a.html"/>
      <url>/post/cb24df7a.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="通讯录管理系统"><a href="#通讯录管理系统" class="headerlink" title="通讯录管理系统"></a>通讯录管理系统</h1><h2 id="3、菜单功能"><a href="#3、菜单功能" class="headerlink" title="3、菜单功能"></a>3、菜单功能</h2><p><strong>功能描述：</strong>用户选择功能的界面<br><strong>步骤：</strong></p><ul><li>封装函数显示该UI界面，如void ShowMenu(); 。</li><li>在main函数中调用封闭好的函数。</li></ul><p><strong>代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//菜单功能</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMenu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;***************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  1、添加联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  2、显示联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  3、删除联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  4、查找联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  5、修改联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  6、清空联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  0、退出通讯录  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;***************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>菜单UI界面效果如下图： <img src="http://image.camcad.cn/2020/05/202005261412398.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> 通讯录管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 实战案例_通讯录管理系统02：创建项目</title>
      <link href="/post/320e246.html"/>
      <url>/post/320e246.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="通讯录管理系统"><a href="#通讯录管理系统" class="headerlink" title="通讯录管理系统"></a>通讯录管理系统</h1><h2 id="2、创建项目"><a href="#2、创建项目" class="headerlink" title="2、创建项目"></a>2、创建项目</h2><p>编写一个C++程序总共分为2个步骤</p><ul><li>创建项目</li><li>创建文件</li></ul><h3 id="2-1-创建项目"><a href="#2-1-创建项目" class="headerlink" title="2.1 创建项目"></a>2.1 创建项目</h3><p>Visual Studio 是我们用来编写C&#x2F;C++程序的主要工具，我们先将它打开。</p><p><a href="http://image.camcad.cn/2020/05/2020051702465231.jpg"><img src="http://image.camcad.cn/2020/05/2020051702465231-1024x739.jpg"></a><a href="http://image.camcad.cn/2020/05/2020051702461712.jpg"><img src="http://image.camcad.cn/2020/05/2020051702461712-1024x760.jpg"></a></p><h3 id="2-2-创建文件"><a href="#2-2-创建文件" class="headerlink" title="2.2 创建文件"></a>2.2 创建文件</h3><p>点击”源文件“–&gt;右键”源文件“–&gt;选择”添加“–&gt;点击“新建项”</p><p><a href="http://image.camcad.cn/2020/05/2020051703011331.jpg"><img src="http://image.camcad.cn/2020/05/2020051703011331-1024x593.jpg"></a></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> 通讯录管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 实战案例_通讯录管理系统01：系统需求</title>
      <link href="/post/b95538fe.html"/>
      <url>/post/b95538fe.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="通讯录管理系统"><a href="#通讯录管理系统" class="headerlink" title="通讯录管理系统"></a>通讯录管理系统</h1><h2 id="1、系统需求"><a href="#1、系统需求" class="headerlink" title="1、系统需求"></a>1、系统需求</h2><p>通讯录是一个可以记录新人、好友信息的工具。 系统中需要实现的功能如下：</p><ul><li>添加联系人：向通讯录中添加新人，信息包括（姓名、性别、年龄、联系电话以及家庭住址）最多记录1000人。</li><li>显示联系人：显示通讯录中所有联系人信息。</li><li>删除联系人：按照姓名进行删除指定联系人。</li><li>查找联系人：按照姓名查看指定联系人信息。</li><li>修改联系人：按照姓名重新修改指定联系人。</li><li>清空联系人：清空通讯录中所有信息。</li><li>退出通讯录：退出当前使用的通讯录。</li></ul>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> 通讯录管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程55：结构体（结构体案例2）</title>
      <link href="/post/12d1a46e.html"/>
      <url>/post/12d1a46e.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第八章：结构体"><a href="#第八章：结构体" class="headerlink" title="第八章：结构体"></a>第八章：结构体</h1><h2 id="8-8-1-结构体案例2"><a href="#8-8-1-结构体案例2" class="headerlink" title="8.8.1 结构体案例2"></a>8.8.1 结构体案例2</h2><p><strong>案例描述：</strong> 设计一个英雄的结构体，包括成员姓名、年龄、性别 。创建的结构体数组，数组中存放5名英雄。通过冒泡排序的算法，将数组中的英雄按照年龄进行排序，最终打印排序的结果。 </p><p><strong>五名英雄信息如下：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span> &#125;,</span><br><span class="line">&#123; <span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span> &#125;,</span><br><span class="line">&#123; <span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span> &#125;,</span><br><span class="line">&#123; <span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span> &#125;,</span><br><span class="line">&#123; <span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span> &#125;;</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//英雄结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">heroes</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> name;    <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> age;        <span class="comment">//年龄</span></span><br><span class="line">    <span class="built_in">string</span> sex;     <span class="comment">//性别</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>  <span class="title function_">BubbleSort</span><span class="params">(heroes *FiceHeroes ,<span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; len-i<span class="number">-1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (FiceHeroes[j].age &gt; FiceHeroes[j + <span class="number">1</span>].age)</span><br><span class="line">            &#123;</span><br><span class="line">                heroes temp = &#123; FiceHeroes[j].name,FiceHeroes[j].age,FiceHeroes[j].sex &#125;;</span><br><span class="line">                FiceHeroes[j] = &#123; FiceHeroes[j + <span class="number">1</span>].name,FiceHeroes[j + <span class="number">1</span>].age,FiceHeroes[j + <span class="number">1</span>].sex &#125;;</span><br><span class="line">                FiceHeroes[j + <span class="number">1</span>] = &#123; temp.name,temp.age,temp.sex &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印所有信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintfArray</span><span class="params">(heroes FiceHeroes[], <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; FiceHeroes[i].name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> </span><br><span class="line">            &lt;&lt; FiceHeroes[i].age &lt;&lt; <span class="string">&quot; 性别：&quot;</span> &lt;&lt; FiceHeroes[i].sex &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">     heroes FiceHeroes[<span class="number">5</span>] = &#123;&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span> &#125;,</span><br><span class="line">                            &#123; <span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span> &#125;,</span><br><span class="line">                            &#123; <span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span> &#125;,</span><br><span class="line">                            &#123; <span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span> &#125;,</span><br><span class="line">                            &#123; <span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span> &#125;&#125;;</span><br><span class="line"></span><br><span class="line">     <span class="comment">//遍历次数</span></span><br><span class="line">     <span class="type">int</span> len = <span class="keyword">sizeof</span>(FiceHeroes) / <span class="keyword">sizeof</span>(FiceHeroes[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">     <span class="comment">//冒泡排序</span></span><br><span class="line">     BubbleSort(FiceHeroes, len);</span><br><span class="line"></span><br><span class="line">     <span class="comment">//打印所有信息</span></span><br><span class="line">     PrintfArray(FiceHeroes, len);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052610234159.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程54：结构体（结构体案例1）</title>
      <link href="/post/cffa1c48.html"/>
      <url>/post/cffa1c48.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第八章：结构体"><a href="#第八章：结构体" class="headerlink" title="第八章：结构体"></a>第八章：结构体</h1><h2 id="8-8-1-结构体案例1"><a href="#8-8-1-结构体案例1" class="headerlink" title="8.8.1 结构体案例1"></a>8.8.1 结构体案例1</h2><p><strong>案例描述：</strong> 学校正在做毕设项目，每名老师领5名学生，总共有3名老师，需求如下： 设计学生和老师是结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员。学生的成员数组有姓名、考试分数。创建数组存放3名老师，通过函数给每个老师及所带的学生赋值最终 打印出老师数据以及老师所带的学生数据。</p><h2 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h2><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//school.h 头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、创建学生结构体数组</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> sName;   <span class="comment">//学生姓名</span></span><br><span class="line">    <span class="type">int</span> iScores;    <span class="comment">//学生分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、创建老师结构体数组</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Teacher</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> tName;       <span class="comment">//老师姓名</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>[5];</span>  <span class="comment">//学生数据数组</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、给老师学生赋值函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">assign</span><span class="params">(<span class="keyword">struct</span> Teacher tArray[], <span class="type">int</span> len)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、打印输出函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintArrey</span><span class="params">(<span class="keyword">struct</span> Teacher tArray[], <span class="type">int</span> len)</span>;</span><br></pre></td></tr></table></figure><h3 id="源文件"><a href="#源文件" class="headerlink" title="源文件"></a>源文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//school.cpp 源文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;school.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//添加随机数种子，利用当前系统时间生成随机数，防止每次随机数都一样</span></span><br><span class="line">    srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1、创建3名老师数组</span></span><br><span class="line">    Teacher tArray[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、获取老师数组长度</span></span><br><span class="line">    <span class="type">int</span> len = <span class="keyword">sizeof</span>(tArray) / <span class="keyword">sizeof</span>(tArray[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、给老师学生赋值函数</span></span><br><span class="line">    assign(tArray, len);    </span><br><span class="line"></span><br><span class="line">    <span class="comment">//4、打印输出所有数据</span></span><br><span class="line">    PrintArrey(tArray, len);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、给老师学生赋值函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">assign</span><span class="params">(<span class="keyword">struct</span> Teacher tArray[], <span class="type">int</span> len)</span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="comment">//编号</span></span><br><span class="line">    <span class="built_in">string</span> number = <span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//老师姓名</span></span><br><span class="line">        tArray[i].tName = <span class="string">&quot;老师&quot;</span>;</span><br><span class="line">        tArray[i].tName += number[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//学生姓名</span></span><br><span class="line">            tArray[i].stu[j].sName = <span class="string">&quot;学生&quot;</span>;</span><br><span class="line">            tArray[i].stu[j].sName += number[j];</span><br><span class="line"></span><br><span class="line">            <span class="comment">//学生分数</span></span><br><span class="line">            <span class="comment">//系统生成随机数</span></span><br><span class="line">            <span class="type">int</span> iNum = rand() % <span class="number">61</span> + <span class="number">40</span>;    <span class="comment">//最底：40 ，最高：61+40-1</span></span><br><span class="line">            tArray[i].stu[j].iScores = iNum;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、打印输出函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintArrey</span><span class="params">(<span class="keyword">struct</span> Teacher tArray[], <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;老师：&quot;</span> &lt;&lt; tArray[i].tName &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t学生：&quot;</span> &lt;&lt; tArray[i].stu[j].sName </span><br><span class="line">                &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; tArray[i].stu[j].iScores &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052608284824-1024x767.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程53：结构体（结构体中const使用场景）</title>
      <link href="/post/798e4a4c.html"/>
      <url>/post/798e4a4c.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第八章：结构体"><a href="#第八章：结构体" class="headerlink" title="第八章：结构体"></a>第八章：结构体</h1><h2 id="8-7-结构体中const使用场景"><a href="#8-7-结构体中const使用场景" class="headerlink" title="8.7 结构体中const使用场景"></a>8.7 结构体中const使用场景</h2><p><strong>作用：</strong>用const来防止误操作。<br><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">GroupLeader</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//成员列表</span></span><br><span class="line">    <span class="type">int</span> iNo;            <span class="comment">//工号</span></span><br><span class="line">    <span class="built_in">string</span> sName;       <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> iAge;           <span class="comment">//年龄</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintGroupLeader02</span><span class="params">(<span class="type">const</span> GroupLeader *p)</span>   <span class="comment">//加const防止函数体中的误操作</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//p-&gt;sName = &quot;李四&quot;;  //操作失败，；因为加了const修饰</span></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;02子函数\n&quot;</span> &lt;&lt; <span class="string">&quot;组长工号：&quot;</span> &lt;&lt; p-&gt;iNo &lt;&lt; <span class="string">&quot; 组长姓名：&quot;</span> </span><br><span class="line">        &lt;&lt; p-&gt;sName &lt;&lt; <span class="string">&quot; 组长年龄：&quot;</span> &lt;&lt; p-&gt;iAge &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义组长参数列表</span></span><br><span class="line">    GroupLeader s1;</span><br><span class="line">    s1.iNo = <span class="number">0001</span>;</span><br><span class="line">    s1.sName = <span class="string">&quot;黄家驹&quot;</span>;</span><br><span class="line">    s1.iAge = <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    PrintGroupLeader02(&amp;s1);        <span class="comment">//地址传递</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;main\n&quot;</span> &lt;&lt; <span class="string">&quot;组长工号：&quot;</span> &lt;&lt; s1.iNo &lt;&lt; <span class="string">&quot; 组长姓名：&quot;</span></span><br><span class="line">        &lt;&lt; s1.sName &lt;&lt; <span class="string">&quot; 组长年龄：&quot;</span> &lt;&lt; s1.iAge &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程52：结构体（结构体做函数参数）</title>
      <link href="/post/ac475861.html"/>
      <url>/post/ac475861.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第八章：结构体"><a href="#第八章：结构体" class="headerlink" title="第八章：结构体"></a>第八章：结构体</h1><h2 id="8-6-结构体做函数参数"><a href="#8-6-结构体做函数参数" class="headerlink" title="8.6 结构体做函数参数"></a>8.6 结构体做函数参数</h2><p><strong>作用：</strong>将结构体作为参数向函数中传递</p><p>传递方式有两种：</p><ul><li>值传递</li><li>地址传递</li></ul><p><strong>示例：</strong></p><pre><code class="c++">#include &lt;iostream&gt;using namespace std;#include &lt;string&gt;//定义结构体struct GroupLeader&#123;//成员列表int iNo;//工号string sName;//姓名int iAge;//年龄&#125;;//值传递void PrintGroupLeader01(GroupLeader s1)&#123;s1.sName = &quot;黄民&quot;;//打印显示cout &lt;&lt; &quot;01子函数\\n&quot; &lt;&lt; &quot;组长工号：&quot; &lt;&lt; s1.iNo &lt;&lt; &quot; 组长姓名：&quot; &lt;&lt; s1.sName &lt;&lt; &quot; 组长年龄：&quot; &lt;&lt; s1.iAge &lt;&lt; endl &lt;&lt; endl;&#125; //地址传递 void PrintGroupLeader02(GroupLeader \*p)&#123; p-&gt;sName = &quot;李四&quot;;//打印显示cout &lt;&lt; &quot;02子函数\\n&quot; &lt;&lt; &quot;组长工号：&quot; &lt;&lt; p-&gt;iNo &lt;&lt; &quot; 组长姓名：&quot; &lt;&lt; p-&gt;sName &lt;&lt; &quot; 组长年龄：&quot; &lt;&lt; p-&gt;iAge &lt;&lt; endl &lt;&lt; endl;&#125;int main()&#123;//定义组长参数列表GroupLeader s1;s1.iNo = 0001;s1.sName = &quot;黄家驹&quot;;s1.iAge = 60;PrintGroupLeader01(s1);//值传递PrintGroupLeader02(&amp;s1);//地址传递//打印显示cout &lt;&lt; &quot;main\\n&quot; &lt;&lt; &quot;组长工号：&quot; &lt;&lt; s1.iNo &lt;&lt; &quot; 组长姓名：&quot; &lt;&lt; s1.sName &lt;&lt; &quot; 组长年龄：&quot; &lt;&lt; s1.iAge &lt;&lt; endl;system(&quot;pause&quot;);return 0;&#125;</code></pre><p>以上代码编译执行结果如下：<img src="http://image.camcad.cn/2020/05/2020052604183148.jpg"></p><h3 id="总结：如果不想修改主函数中的数据用值传递，反之使用地址传递。"><a href="#总结：如果不想修改主函数中的数据用值传递，反之使用地址传递。" class="headerlink" title="总结：如果不想修改主函数中的数据用值传递，反之使用地址传递。"></a>总结：如果不想修改主函数中的数据用值传递，反之使用地址传递。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程51：结构体（结构体嵌套结构体）</title>
      <link href="/post/3083a4c1.html"/>
      <url>/post/3083a4c1.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第八章-结构体"><a href="#第八章-结构体" class="headerlink" title="第八章 结构体"></a>第八章 结构体</h1><h2 id="8-5-结构体嵌套结构体"><a href="#8-5-结构体嵌套结构体" class="headerlink" title="8.5 结构体嵌套结构体"></a>8.5 结构体嵌套结构体</h2><p><strong>作用：</strong>结构体中的成员可以是另一个结构体。<br><strong>例如：</strong>一名组长管理一名员工，一个组长的结构体中，记录一名员工的结构体。<br> <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义员工结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Staff</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//成员列表</span></span><br><span class="line">    <span class="type">int</span> iNo;            <span class="comment">//工号</span></span><br><span class="line">    <span class="built_in">string</span> sName;       <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> iAge;           <span class="comment">//年龄</span></span><br><span class="line">    <span class="type">int</span> iBasicSalary;   <span class="comment">//底薪</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义组长结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">GroupLeader</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//成员列表</span></span><br><span class="line">    <span class="type">int</span> iNo;            <span class="comment">//工号</span></span><br><span class="line">    <span class="built_in">string</span> sName;       <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> iAge;           <span class="comment">//年龄</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Staff</span> <span class="title">Sta</span>;</span>   <span class="comment">//员工结构体</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义组长参数列表</span></span><br><span class="line">    GroupLeader s1;</span><br><span class="line">    s1.iNo = <span class="number">0001</span>;</span><br><span class="line">    s1.sName = <span class="string">&quot;黄家驹&quot;</span>;</span><br><span class="line">    s1.iAge = <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义员工参数列表</span></span><br><span class="line">    s1.Sta.iNo = <span class="number">0203</span>;</span><br><span class="line">    s1.Sta.sName = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">    s1.Sta.iAge = <span class="number">22</span>;</span><br><span class="line">    s1.Sta.iBasicSalary = <span class="number">2300</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印显示</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;组长工号：&quot;</span> &lt;&lt; s1.iNo &lt;&lt; <span class="string">&quot; 组长姓名：&quot;</span> &lt;&lt; s1.sName &lt;&lt; <span class="string">&quot; 组长年龄：&quot;</span> &lt;&lt; s1.iAge &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">        &lt;&lt; <span class="string">&quot;员工工号：&quot;</span> &lt;&lt; s1.Sta.iNo &lt;&lt; <span class="string">&quot; 员工姓名：&quot;</span> &lt;&lt; s1.Sta.sName &lt;&lt; <span class="string">&quot; 员工年龄：&quot;</span> &lt;&lt; s1.Sta.iAge &lt;&lt; <span class="string">&quot; 员工底薪：&quot;</span> &lt;&lt; s1.Sta.iBasicSalary &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：在结构体中可以定义另一个结构体作为成员，用来解决实际问题。"><a href="#总结：在结构体中可以定义另一个结构体作为成员，用来解决实际问题。" class="headerlink" title="总结：在结构体中可以定义另一个结构体作为成员，用来解决实际问题。"></a>总结：在结构体中可以定义另一个结构体作为成员，用来解决实际问题。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程50：结构体（结构体指针）</title>
      <link href="/post/a3f94e94.html"/>
      <url>/post/a3f94e94.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第八章-结构体"><a href="#第八章-结构体" class="headerlink" title="第八章 结构体"></a>第八章 结构体</h1><h2 id="8-4-结构体指针"><a href="#8-4-结构体指针" class="headerlink" title="8.4 结构体指针"></a>8.4 结构体指针</h2><p><strong>作用：</strong>通过指针访问结构体中的成员。</p><ul><li>利用操作符 “-&gt;” 可以通过结构体指针访问结构体属性。<br><strong>示例：</strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//结构体定义</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">  <span class="comment">//成员列表</span></span><br><span class="line">  <span class="built_in">string</span> sName;<span class="comment">//姓名</span></span><br><span class="line">  <span class="type">int</span> iAge;<span class="comment">//年龄</span></span><br><span class="line">  <span class="type">int</span> iScore;<span class="comment">//分数</span></span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="comment">//struct 结构体名 数组名\[ 元素个数 \] = &#123; &#123; &#125;,&#123; &#125;,.. &#123; &#125; &#125;;</span></span><br><span class="line">  student arr\[<span class="number">4</span>\] = &#123; &#123;<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">89</span>&#125;,</span><br><span class="line">  &#123;<span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">65</span>&#125;,</span><br><span class="line">  &#123;<span class="string">&quot;王五&quot;</span>,<span class="number">20</span>,<span class="number">100</span>&#125;,</span><br><span class="line">  &#123;<span class="string">&quot;小二&quot;</span>,<span class="number">17</span>,<span class="number">50</span>&#125; &#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//创建结构体指针</span></span><br><span class="line">  student \*p2 = &amp;arr\[<span class="number">2</span>\];</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p2-&gt;sName &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; p2-&gt;iAge &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; p2-&gt;iScore &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//创建结构体指针</span></span><br><span class="line">  student \*p = arr;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//遍历结构体指针里面的所有数据</span></span><br><span class="line">  <span class="keyword">for</span> (size\<span class="type">_t</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr\[<span class="number">0</span>\]); i++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;sName</span><br><span class="line">  &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; p-&gt;iAge </span><br><span class="line">  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; p-&gt;iScore &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  p++;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>以上代码编译执行结果如下：<img src="http://image.camcad.cn/2020/05/2020052409450077.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程49：结构体（结构体数组）</title>
      <link href="/post/5bba5fa.html"/>
      <url>/post/5bba5fa.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第八章-结构体"><a href="#第八章-结构体" class="headerlink" title="第八章 结构体"></a>第八章 结构体</h1><h2 id="8-3-结构体数组"><a href="#8-3-结构体数组" class="headerlink" title="8.3 结构体数组"></a>8.3 结构体数组</h2><p><strong>作用：</strong>将自定义的结构体放入到数组中方便维护。<br><strong>语法：</strong>struct 结构体名 数组名[ 元素个数 ] &#x3D; { { },{ },.. { } }; </p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//成员列表</span></span><br><span class="line">    <span class="built_in">string</span> sName;   <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> iAge;       <span class="comment">//年龄</span></span><br><span class="line">    <span class="type">int</span> iScore;     <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//struct 结构体名 数组名[ 元素个数 ] = &#123; &#123; &#125;,&#123; &#125;,.. &#123; &#125; &#125;;</span></span><br><span class="line">    student arr[<span class="number">4</span>] = &#123; &#123;<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">89</span>&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">65</span>&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;王五&quot;</span>,<span class="number">20</span>,<span class="number">100</span>&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;小二&quot;</span>,<span class="number">17</span>,<span class="number">50</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历结构体里面的所有数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; arr[i].sName &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; arr[i].iAge &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; arr[i].iScore &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052408594883-1024x478.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程48：结构体（结构体基本概念/结构体定义和使用）</title>
      <link href="/post/4b12509c.html"/>
      <url>/post/4b12509c.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第八章-结构体"><a href="#第八章-结构体" class="headerlink" title="第八章 结构体"></a>第八章 结构体</h1><h2 id="8-1-结构体基本概念"><a href="#8-1-结构体基本概念" class="headerlink" title="8.1 结构体基本概念"></a>8.1 结构体基本概念</h2><p>结构体属于用户自定义的数据类型，允许用户存储不同的数据类型。</p><h2 id="8-2-结构体定义和使用"><a href="#8-2-结构体定义和使用" class="headerlink" title="8.2 结构体定义和使用"></a>8.2 结构体定义和使用</h2><p><strong>语法：</strong>struct 结构体名 { 结构体成员列表 }; 通过结构体创建变量的方式有三种：</p><ul><li>struct结构体名 变量名</li><li>struct结构体名 变量名&#x3D;{ 成员1值 , 成员2值… };</li><li>定义结构体时顺便创建变量</li></ul><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//成员列表</span></span><br><span class="line">    <span class="built_in">string</span> sName;   <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> iAge;       <span class="comment">//年龄</span></span><br><span class="line">    <span class="type">int</span> iScore;     <span class="comment">//分数</span></span><br><span class="line"></span><br><span class="line">&#125;s3;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1、struct结构体名 变量名</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s1</span>;</span></span><br><span class="line">    s1.sName = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">    s1.iAge = <span class="number">18</span>;</span><br><span class="line">    s1.iScore = <span class="number">80</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s1.sName &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; s1.iAge &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; s1.iScore &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、struct结构体名 变量名=&#123; 成员1值 , 成员2值... &#125;;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s2</span>  =</span> &#123; <span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">65</span> &#125;;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s2.sName &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; s2.iAge &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; s2.iScore &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、定义结构体时顺便创建变量</span></span><br><span class="line">    s3.sName = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line">    s3.iAge = <span class="number">16</span>;</span><br><span class="line">    s3.iScore = <span class="number">99</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s3.sName &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; s3.iAge &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; s3.iScore &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052408222480.jpg"></p><h3 id="总结1：定义结构体时，关键字struct不可省略。"><a href="#总结1：定义结构体时，关键字struct不可省略。" class="headerlink" title="总结1：定义结构体时，关键字struct不可省略。"></a>总结1：定义结构体时，关键字struct不可省略。</h3><h3 id="总结2：创建结构体变量时，关键字struct可以省略。"><a href="#总结2：创建结构体变量时，关键字struct可以省略。" class="headerlink" title="总结2：创建结构体变量时，关键字struct可以省略。"></a>总结2：创建结构体变量时，关键字struct可以省略。</h3><h3 id="总结3：结构体变量利用操作符-“-”-访问成员。"><a href="#总结3：结构体变量利用操作符-“-”-访问成员。" class="headerlink" title="总结3：结构体变量利用操作符 “.” 访问成员。"></a>总结3：结构体变量利用操作符 “.” 访问成员。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程47：指针（指针配合数组和函数案例）</title>
      <link href="/post/924960a9.html"/>
      <url>/post/924960a9.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第七章：指针"><a href="#第七章：指针" class="headerlink" title="第七章：指针"></a>第七章：指针</h1><h2 id="7-8-指针、数组、函数"><a href="#7-8-指针、数组、函数" class="headerlink" title="7.8 指针、数组、函数"></a>7.8 指针、数组、函数</h2><p><strong>案例描述：</strong><br>封装一个函数，利用冒泡排序，实现对整型数组的升序排序。 例如数组：int arr[10] &#x3D; { 4,3,6,9,1,2,10,8,7,5 };<br><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建冒泡排序函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubblesort</span><span class="params">(<span class="type">int</span> *arr,<span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; len-i<span class="number">-1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j+<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历打印输出</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubbleprintf</span><span class="params">(<span class="type">int</span> *arr, <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建数组</span></span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">5</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//循环次数</span></span><br><span class="line">    <span class="type">int</span> len = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用冒泡排序函数</span></span><br><span class="line">    bubblesort(arr, len);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历打印输出</span></span><br><span class="line">    bubbleprintf(arr, len);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程46：指针（指针与函数）</title>
      <link href="/post/43672f3.html"/>
      <url>/post/43672f3.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第七章：指针"><a href="#第七章：指针" class="headerlink" title="第七章：指针"></a>第七章：指针</h1><h2 id="7-7-指针与函数"><a href="#7-7-指针与函数" class="headerlink" title="7.7 指针与函数"></a>7.7 指针与函数</h2><p><strong>作用：</strong>利用指针作函数参数，可以修改实参的值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap01</span><span class="params">(<span class="type">int</span> iNum01, <span class="type">int</span> iNum02)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;传递之前&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap01 iNum01= &quot;</span> &lt;&lt; iNum01 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap01 iNum02= &quot;</span> &lt;&lt; iNum02 &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> temp = iNum01;</span><br><span class="line">    iNum01 = iNum02;</span><br><span class="line">    iNum02 = temp;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;传递之后&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap01 iNum01= &quot;</span> &lt;&lt; iNum01 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap01 iNum02= &quot;</span> &lt;&lt; iNum02 &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap02</span><span class="params">(<span class="type">int</span> *iNum01,<span class="type">int</span> *iNum02)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//地址传递之前</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;地址传递之前&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap02 iNum01= &quot;</span> &lt;&lt; *iNum01 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap02 iNum02= &quot;</span> &lt;&lt; *iNum02 &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> temp = *iNum01;</span><br><span class="line">    *iNum01 = *iNum02;</span><br><span class="line">    *iNum02 = temp;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//地址传递之后</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;地址传递之后&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap02 iNum01= &quot;</span> &lt;&lt; *iNum01 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;swap02 iNum02= &quot;</span> &lt;&lt; *iNum02 &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> iNum01 = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> iNum02 = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//值传递</span></span><br><span class="line">    <span class="comment">//swap01(iNum01,iNum02);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//地址传递</span></span><br><span class="line">    swap02(&amp;iNum01, &amp;iNum02);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;main iNum01= &quot;</span> &lt;&lt; iNum01 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;main iNum02= &quot;</span> &lt;&lt; iNum02 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：如果不想修改实参，就用值传递，如果想修改实参，就用地址传递。"><a href="#总结：如果不想修改实参，就用值传递，如果想修改实参，就用地址传递。" class="headerlink" title="总结：如果不想修改实参，就用值传递，如果想修改实参，就用地址传递。"></a>总结：如果不想修改实参，就用值传递，如果想修改实参，就用地址传递。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程45：指针（指针与数组）</title>
      <link href="/post/bb3e0de5.html"/>
      <url>/post/bb3e0de5.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第七章：指针"><a href="#第七章：指针" class="headerlink" title="第七章：指针"></a>第七章：指针</h1><h2 id="7-6-指针与数组"><a href="#7-6-指针与数组" class="headerlink" title="7.6 指针与数组"></a>7.6 指针与数组</h2><p><strong>作用：</strong>利用指针访问数组中的元素。<br><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义整型数组</span></span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">21</span>,<span class="number">88</span>,<span class="number">64</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义指针</span></span><br><span class="line">    <span class="type">int</span> *p = arr;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过指针遍历所有元素里的值</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通过指针遍历所有元素里的值&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程44：指针（const修饰指针）</title>
      <link href="/post/587782a3.html"/>
      <url>/post/587782a3.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第七章：指针"><a href="#第七章：指针" class="headerlink" title="第七章：指针"></a>第七章：指针</h1><h2 id="7-5-const修饰指针"><a href="#7-5-const修饰指针" class="headerlink" title="7.5 const修饰指针"></a>7.5 const修饰指针</h2><p><strong>const修饰指针有三种情况：</strong><br>1、const修饰指针（常量指针）<br>2、const修饰常量（指针常量）<br>3、const即修饰指针，又修饰常量</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="常量指针"><a href="#常量指针" class="headerlink" title="常量指针"></a>常量指针</h3><p><img src="http://image.camcad.cn/2020/05/2020052403143177-1024x513.jpg"></p><h3 id="指针常量"><a href="#指针常量" class="headerlink" title="指针常量"></a>指针常量</h3><p><img src="http://image.camcad.cn/2020/05/2020052403150147-1024x505.jpg"></p><h3 id="即修饰指针，又修饰常量"><a href="#即修饰指针，又修饰常量" class="headerlink" title="即修饰指针，又修饰常量"></a>即修饰指针，又修饰常量</h3><p><img src="http://image.camcad.cn/2020/05/2020052403160080-1024x493.jpg"></p><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义整型变量</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1、const修饰的是指针，指针指向的地址可以修改，指针指向的值不可以修改（常量指针）</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> *p11 = &amp;a;</span><br><span class="line">    p11 = &amp;b;       <span class="comment">//正确</span></span><br><span class="line">    <span class="comment">//*p11 = 20;    //错误</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、const修饰的是常量，指针指向的地址不可以修改，指针指向的值可以修改（指针常量）</span></span><br><span class="line">    <span class="type">int</span> *<span class="type">const</span> p21 = &amp;a;</span><br><span class="line">    <span class="comment">//p21 = &amp;b; //错误</span></span><br><span class="line">    *p21 = <span class="number">20</span>;  <span class="comment">//正确</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、const即修饰指针，又修饰常量，两者都不可以修改</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> *<span class="type">const</span> p31 = &amp;a;</span><br><span class="line">    <span class="comment">//p31 = &amp;b;     //错误</span></span><br><span class="line">    <span class="comment">//*p31 = 20;    //错误</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：看const右侧紧跟着的是指针还是常量，是指针就是常量指针，是常量就是指针常量。"><a href="#总结：看const右侧紧跟着的是指针还是常量，是指针就是常量指针，是常量就是指针常量。" class="headerlink" title="总结：看const右侧紧跟着的是指针还是常量，是指针就是常量指针，是常量就是指针常量。"></a>总结：看const右侧紧跟着的是指针还是常量，是指针就是常量指针，是常量就是指针常量。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程43：指针（空指针/野指针）</title>
      <link href="/post/96e13ca0.html"/>
      <url>/post/96e13ca0.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第七章：指针"><a href="#第七章：指针" class="headerlink" title="第七章：指针"></a>第七章：指针</h1><h2 id="7-4-空指针-x2F-野指针"><a href="#7-4-空指针-x2F-野指针" class="headerlink" title="7.4 空指针&#x2F;野指针"></a>7.4 空指针&#x2F;野指针</h2><p><strong>空指针：</strong>指针变量指向内存中编号0（NULL）的空间。<br><strong>用途：</strong>初始化指针变量。<br><strong>示例1：</strong>空指针</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//指针的定义</span></span><br><span class="line">    <span class="type">int</span> *p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//错误，*（解引用）不可访问</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意：空指针指向的内存是不可以访问。"><a href="#注意：空指针指向的内存是不可以访问。" class="headerlink" title="注意：空指针指向的内存是不可以访问。"></a>注意：空指针指向的内存是不可以访问。</h3><p><strong>野指针：</strong>指针变量指向非法的内存空间。<br><strong>示例2：</strong>野指针</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//指针变量p指向内存地址编号为0x1100的内存空间</span></span><br><span class="line">    <span class="type">int</span> *p = (<span class="type">int</span> *)<span class="number">0x1100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//错误，*（解引用）不可访问野指针</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：空指针和野指针都不是我们申请的内存空间，因此不要访问，否则出错。"><a href="#总结：空指针和野指针都不是我们申请的内存空间，因此不要访问，否则出错。" class="headerlink" title="总结：空指针和野指针都不是我们申请的内存空间，因此不要访问，否则出错。"></a>总结：空指针和野指针都不是我们申请的内存空间，因此不要访问，否则出错。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程42：指针（指针所占内存空间）</title>
      <link href="/post/985d89af.html"/>
      <url>/post/985d89af.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第七章：指针"><a href="#第七章：指针" class="headerlink" title="第七章：指针"></a>第七章：指针</h1><h2 id="7-3-指针所占内存空间"><a href="#7-3-指针所占内存空间" class="headerlink" title="7.3 指针所占内存空间"></a>7.3 指针所占内存空间</h2><p><strong>提问：</strong>指针也是数据类型，那么这些数据类型占用多少内存空间？ <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义整型变量</span></span><br><span class="line">    <span class="type">int</span> iNum = <span class="number">10</span>;  </span><br><span class="line"></span><br><span class="line">    <span class="comment">//指针的定义</span></span><br><span class="line">    <span class="type">int</span> *p = &amp;iNum;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;sizeof(p) 占用内存空间\t&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(p) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;sizeof(int *) 占用内存空间\t&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="type">int</span> *) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;sizeof(char *) 占用内存空间\t&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="type">char</span> *) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;sizeof(double *) 占用内存空间\t&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="type">double</span> *) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;sizeof(long *) 占用内存空间\t&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="type">long</span> *) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052311460692-1024x476.jpg"></p><h3 id="总结1：在32位操作系统下，指针占4个字节空间大小，不管是什么类型。"><a href="#总结1：在32位操作系统下，指针占4个字节空间大小，不管是什么类型。" class="headerlink" title="总结1：在32位操作系统下，指针占4个字节空间大小，不管是什么类型。"></a>总结1：在32位操作系统下，指针占4个字节空间大小，不管是什么类型。</h3><h3 id="总结2：在64位操作系统下，指针占8个字节空间大小，不管是什么类型。"><a href="#总结2：在64位操作系统下，指针占8个字节空间大小，不管是什么类型。" class="headerlink" title="总结2：在64位操作系统下，指针占8个字节空间大小，不管是什么类型。"></a>总结2：在64位操作系统下，指针占8个字节空间大小，不管是什么类型。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程41：指针（指针的基本概念/指针变量的定义和使用）</title>
      <link href="/post/9c0faa35.html"/>
      <url>/post/9c0faa35.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第七章：指针"><a href="#第七章：指针" class="headerlink" title="第七章：指针"></a>第七章：指针</h1><h2 id="7-1-指针的基本概念"><a href="#7-1-指针的基本概念" class="headerlink" title="7.1 指针的基本概念"></a>7.1 指针的基本概念</h2><p><strong>指针的作用：</strong>可以通过指针间接访问修改内存里的值。</p><ul><li>内存编号是0开始记录，一般用十六进制数字表示。</li><li>可以利用指针变量保存地址。</li></ul><h2 id="7-2指针变量的定义和使用"><a href="#7-2指针变量的定义和使用" class="headerlink" title="7.2指针变量的定义和使用"></a>7.2指针变量的定义和使用</h2><p>指针变量定义语法：数据类型 * 变量名; <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//指针的定义</span></span><br><span class="line">    <span class="type">int</span> iNum = <span class="number">10</span>;  <span class="comment">//定义整型变量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//指针定义语法：数据类型 *变量名;</span></span><br><span class="line">    <span class="type">int</span> *p;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//指针变量赋值</span></span><br><span class="line">    p = &amp;iNum;  <span class="comment">//指针指向变量iNum的内存地址</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;iNum的内存地址为：\t&quot;</span> &lt;&lt; &amp;iNum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;指针p的内存地址为：\t&quot;</span> &lt;&lt; p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//指针的使用</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;指针*p内存里面的值为：\t&quot;</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//（* 解引用） 通过 * 操作访问指针指向内存地址里面的值</span></span><br><span class="line"></span><br><span class="line">    *p = <span class="number">20</span>;    <span class="comment">//修改指针指向内存地址里面的值</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; iNum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052311183414.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程40：函数（函数的分文件编写）</title>
      <link href="/post/3157c3fd.html"/>
      <url>/post/3157c3fd.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第六章：函数"><a href="#第六章：函数" class="headerlink" title="第六章：函数"></a>第六章：函数</h1><h2 id="6-7-函数的分文件编写"><a href="#6-7-函数的分文件编写" class="headerlink" title="6.7 函数的分文件编写"></a>6.7 函数的分文件编写</h2><p>函数分文件编写一般有4个步骤：<br>1、创建后缀名为.h的头文件<br>2、创建后缀名为.cpp的源文件<br>3、在头文件中写函数的声明<br>4、在源文件中写函数的定义</p><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><p><strong>头文件（.h）</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap. 头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现两个数字交换的函数声明</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> iNum01, <span class="type">int</span> iNum02)</span>;</span><br></pre></td></tr></table></figure><p><strong>源文件（.cpp）</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap.cpp 源文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> iNum01, <span class="type">int</span> iNum02)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;交换之前&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;iNum01= &quot;</span>&lt;&lt;iNum01&lt;&lt;<span class="string">&quot;\n&quot;</span>&lt;&lt;<span class="string">&quot;iNum02= &quot;</span>&lt;&lt;iNum02 &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数值交换</span></span><br><span class="line">    <span class="type">int</span> temp = iNum01;</span><br><span class="line">    iNum01 = iNum02;</span><br><span class="line">    iNum02 = temp;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;交换之后&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;iNum01= &quot;</span> &lt;&lt; iNum01 &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;iNum02= &quot;</span> &lt;&lt; iNum02 &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    swap(<span class="number">20</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052309354974.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程39：函数（函数的声明）</title>
      <link href="/post/d249b32b.html"/>
      <url>/post/d249b32b.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第六章：函数"><a href="#第六章：函数" class="headerlink" title="第六章：函数"></a>第六章：函数</h1><h2 id="6-6-函数的声明"><a href="#6-6-函数的声明" class="headerlink" title="6.6 函数的声明"></a>6.6 函数的声明</h2><p><strong>作用：</strong>告诉编译器函数名称及如何调用函数，函数的实际主体可以单独定义。</p><ul><li>函数的声明可以多次，但是函数的定义只能有一次。 <strong>示例：</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//声明函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">test04</span><span class="params">(<span class="type">int</span> iNum01, <span class="type">int</span> iNum02)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">test04</span><span class="params">(<span class="type">int</span> iNum01, <span class="type">int</span> iNum02)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">test04</span><span class="params">(<span class="type">int</span> iNum01,<span class="type">int</span> iNum02)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> iNum01 &gt; iNum02 ? iNum01 + iNum02 : iNum01 \* iNum02;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">40</span>, b = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; test04(a, b) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程38：函数（函数的常见样式）</title>
      <link href="/post/94cbec15.html"/>
      <url>/post/94cbec15.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第六章：函数"><a href="#第六章：函数" class="headerlink" title="第六章：函数"></a>第六章：函数</h1><h2 id="6-5-函数的常见样式"><a href="#6-5-函数的常见样式" class="headerlink" title="6.5 函数的常见样式"></a>6.5 函数的常见样式</h2><p>常见的函数样式有4种： 1、无参无返 2、有参无返 3、无参有返 4、有参有返 <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//常见函数样式</span></span><br><span class="line"><span class="comment">//1、无参无返</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;test01：无参无返&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、有参无返</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test02</span><span class="params">(<span class="type">int</span> iNum1,<span class="type">int</span> iNum2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sum = iNum1 + iNum2;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;test02：有参无返 sum= &quot;</span> &lt;&lt; sum &lt;&lt;<span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、无参有返</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">test03</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;test03：无参有返&quot;</span>  &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、有参有返</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">test04</span><span class="params">(<span class="type">int</span> iNum01,<span class="type">int</span> iNum02)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> iSum = iNum01 + iNum02;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;test04：有参有返&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> iSum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test01();           <span class="comment">//无参无返</span></span><br><span class="line"></span><br><span class="line">    test02(<span class="number">20</span>, <span class="number">30</span>);     <span class="comment">//有参无返</span></span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> a = test03();          <span class="comment">//无参有返</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> sum= test04(<span class="number">54</span>,<span class="number">23</span>);     <span class="comment">//有参有返</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052308351624.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程37：函数（值传递）</title>
      <link href="/post/520ef675.html"/>
      <url>/post/520ef675.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第六章：函数"><a href="#第六章：函数" class="headerlink" title="第六章：函数"></a>第六章：函数</h1><h2 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h2><p><strong>作用：</strong>将一段经常使用的代码封装起来，减少重复代码。 一个较大的程序项目，一般分为若干个程序块，每个模块实现特定的功能。</p><h2 id="6-4-值传递"><a href="#6-4-值传递" class="headerlink" title="6.4 值传递"></a>6.4 值传递</h2><ul><li>所谓值传递，就是函数调用时实参将数值传入给形参。</li><li>值传递时，如果形参发生变化，并不会影响实参。 <strong>示例：</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> iNum1,<span class="type">int</span> iNum2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;交换之前&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;iNum1= &quot;</span> &lt;&lt; iNum1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;iNum2= &quot;</span> &lt;&lt; iNum2 &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> iTemp = iNum1;</span><br><span class="line">iNum1 = iNum2;</span><br><span class="line">iNum2 = iTemp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;交换之后&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;iNum1= &quot;</span> &lt;&lt; iNum1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;iNum2= &quot;</span> &lt;&lt; iNum2 &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return; 当函数声明void(空的)的时候，可以不写return（返回值）。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">swap(a,b);<span class="comment">//调用函数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;mian中 a= &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;mian中 b= &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052303352768.jpg"></p><h3 id="总结：值传递时，形参是修饰不了实参。"><a href="#总结：值传递时，形参是修饰不了实参。" class="headerlink" title="总结：值传递时，形参是修饰不了实参。"></a>总结：值传递时，形参是修饰不了实参。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程36：函数（函数的调用）</title>
      <link href="/post/9cc4cf82.html"/>
      <url>/post/9cc4cf82.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第六章：函数"><a href="#第六章：函数" class="headerlink" title="第六章：函数"></a>第六章：函数</h1><h2 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h2><p><strong>作用：</strong>将一段经常使用的代码封装起来，减少重复代码。 一个较大的程序项目，一般分为若干个程序块，每个模块实现特定的功能。</p><h2 id="6-3-函数的调用"><a href="#6-3-函数的调用" class="headerlink" title="6.3 函数的调用"></a>6.3 函数的调用</h2><p><strong>功能：</strong>使用定义好的函数。 <strong>语法：</strong>函数名 (参数); <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="type">int</span><span class="comment">/*1、返回值类型*/</span> Mod<span class="comment">/*2、函数名*/</span>(<span class="type">int</span> iNumber01, <span class="type">int</span> iNumber02<span class="comment">/*3、参数列表*/</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> iMod = iNumber01 % iNumber02;<span class="comment">/*4、函数体语句*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> iMod;<span class="comment">/*5、return表达式（返回值）*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//调用取模函数</span></span><br><span class="line">    <span class="type">int</span> iMod = Mod(<span class="number">9</span>,<span class="number">7</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; iMod &lt;&lt; <span class="built_in">endl</span>;   <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程35：函数（概述、函数的定义）</title>
      <link href="/post/245f3a26.html"/>
      <url>/post/245f3a26.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第六章：函数"><a href="#第六章：函数" class="headerlink" title="第六章：函数"></a>第六章：函数</h1><h2 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h2><p><strong>作用：</strong>将一段经常使用的代码封装起来，减少重复代码。 一个较大的程序项目，一般分为若干个程序块，每个模块实现特定的功能。</p><h2 id="6-2-函数的定义"><a href="#6-2-函数的定义" class="headerlink" title="6.2 函数的定义"></a>6.2 函数的定义</h2><p>函数的定义一般主要有5个步骤： 1、返回值类型 2、函数名 3、参数列表 4、函数体语句 5、return表达式（返回值）</p><h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">返回值类型 函数名 ( 参数列表 )</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    函数体语句;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> 表达式;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>返回值类型：一个函数可以返回一个值，在函数定义中。</li><li>函数名：给函数起个名称。</li><li>参数列表：使用该函数时，传入的数据。</li><li>函数体语句：花括号内的代码，函数内需要执行的语句。</li><li>return表达式：和<strong>返回值类型</strong>挂钩，函数执行完后，返回相应的数据。</li></ul><p><strong>示例：</strong>定义一个取模函数，实现两个数取模运算。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span><span class="comment">/*1、返回值类型*/</span> Mod<span class="comment">/*2、函数名*/</span>(<span class="type">int</span> iNumber01, <span class="type">int</span> iNumber02<span class="comment">/*3、参数列表*/</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> iMod = iNumber01 % iNumber02;<span class="comment">/*4、函数体语句*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> iMod;<span class="comment">/*5、return表达式（返回值）*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程34：数组-二维数组应用案例</title>
      <link href="/post/94c0b7aa.html"/>
      <url>/post/94c0b7aa.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第五章：数组"><a href="#第五章：数组" class="headerlink" title="第五章：数组"></a>第五章：数组</h1><h2 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h2><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素。</p><h3 id="特点1：数组中的每个数据元素都是相同的数据类型。"><a href="#特点1：数组中的每个数据元素都是相同的数据类型。" class="headerlink" title="特点1：数组中的每个数据元素都是相同的数据类型。"></a>特点1：数组中的每个数据元素都是相同的数据类型。</h3><h3 id="特点2：数组是由连续的内存位置组成。"><a href="#特点2：数组是由连续的内存位置组成。" class="headerlink" title="特点2：数组是由连续的内存位置组成。"></a>特点2：数组是由连续的内存位置组成。</h3><hr><h2 id="5-3-二维数组"><a href="#5-3-二维数组" class="headerlink" title="5.3 二维数组"></a>5.3 二维数组</h2><p>二维数组就是在一维数组上，多加一个维度。</p><h3 id="5-3-3-二维数组应用案例"><a href="#5-3-3-二维数组应用案例" class="headerlink" title="5.3.3 二维数组应用案例"></a>5.3.3 二维数组应用案例</h3><p><strong>考试成绩统计表：</strong><br><strong>案例描述：</strong>有三名同学（张三、李四、王五），在一次考试中的成绩分别如下表，请分别输出三名同学的总成绩。</p><table><thead><tr><th align="center">姓名</th><th align="center">语言</th><th align="center">数学</th><th align="center">英语</th></tr></thead><tbody><tr><td align="center">张三</td><td align="center">100</td><td align="center">100</td><td align="center">100</td></tr><tr><td align="center">李四</td><td align="center">85</td><td align="center">75</td><td align="center">88</td></tr><tr><td align="center">王五</td><td align="center">45</td><td align="center">85</td><td align="center">77</td></tr></tbody></table><p><strong>代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//二维数组数组名</span></span><br><span class="line">    <span class="type">int</span> iArray[<span class="number">3</span>][<span class="number">3</span>] = &#123; &#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">                        &#123;<span class="number">85</span>,<span class="number">75</span>,<span class="number">88</span>&#125;,</span><br><span class="line">                        &#123;<span class="number">45</span>,<span class="number">85</span>,<span class="number">77</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> sName[<span class="number">3</span>] = &#123; <span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(iArray) / <span class="keyword">sizeof</span>(iArray[<span class="number">0</span>]); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> iAdd = <span class="number">0</span>;   <span class="comment">//总分变量定义</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; sName[i]&lt;&lt;<span class="string">&quot; 总分=&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;      <span class="comment">//姓名变量取值</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="keyword">sizeof</span>(iArray[<span class="number">0</span>]) / <span class="keyword">sizeof</span>(iArray[<span class="number">0</span>][<span class="number">0</span>]); j++)</span><br><span class="line">        &#123;</span><br><span class="line">            iAdd += iArray[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; iAdd &lt;&lt; <span class="built_in">endl</span>;   <span class="comment">//总分打印</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下: <img src="http://image.camcad.cn/2020/05/2020052210420047.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程33：数组-二维数组数组名</title>
      <link href="/post/591da572.html"/>
      <url>/post/591da572.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第五章：数组"><a href="#第五章：数组" class="headerlink" title="第五章：数组"></a>第五章：数组</h1><h2 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h2><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素。</p><h3 id="特点1：数组中的每个数据元素都是相同的数据类型。"><a href="#特点1：数组中的每个数据元素都是相同的数据类型。" class="headerlink" title="特点1：数组中的每个数据元素都是相同的数据类型。"></a>特点1：数组中的每个数据元素都是相同的数据类型。</h3><h3 id="特点2：数组是由连续的内存位置组成。"><a href="#特点2：数组是由连续的内存位置组成。" class="headerlink" title="特点2：数组是由连续的内存位置组成。"></a>特点2：数组是由连续的内存位置组成。</h3><hr><h2 id="5-3-二维数组"><a href="#5-3-二维数组" class="headerlink" title="5.3 二维数组"></a>5.3 二维数组</h2><p>二维数组就是在一维数组上，多加一个维度。</p><h3 id="5-3-2-二维数组数组名"><a href="#5-3-2-二维数组数组名" class="headerlink" title="5.3.2 二维数组数组名"></a>5.3.2 二维数组数组名</h3><p>· 查看二维数组所占内存空间 · 获取二维数组首地址 <strong>示例</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//二维数组数组名</span></span><br><span class="line">    <span class="type">int</span> iArray[<span class="number">2</span>][<span class="number">4</span>] = &#123; &#123;<span class="number">21</span>,<span class="number">23</span>,<span class="number">45</span>,<span class="number">87</span>&#125;,</span><br><span class="line">                        &#123;<span class="number">64</span>,<span class="number">31</span>,<span class="number">64</span>,<span class="number">54</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组总占空间：&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(iArray) &lt;&lt; <span class="built_in">endl</span>;  </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组一行占用空间：&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(iArray[<span class="number">0</span>]) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组元素大小：&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(iArray[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组行数：&quot;</span>&lt;&lt; <span class="keyword">sizeof</span>(iArray)/ <span class="keyword">sizeof</span>(iArray[<span class="number">0</span>]) &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组列数：&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(iArray[<span class="number">0</span>])/<span class="keyword">sizeof</span>(iArray[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//取地址符</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组首地址 十进制：&quot;</span> &lt;&lt; (<span class="type">int</span>)iArray&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组第一行地址 十进制：&quot;</span> &lt;&lt; (<span class="type">int</span>)iArray[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组第二行地址 十进制：&quot;</span> &lt;&lt; (<span class="type">int</span>)iArray[<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意：获取元素地址需加 取值符 &amp;</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组第一个元素地址 十进制：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;iArray[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组第二个元素地址 十进制：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;iArray[<span class="number">0</span>][<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>以上代码编译执行结果如下：</strong> <img src="http://image.camcad.cn/2020/05/202005220946248-1024x409.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程32：数组-二维数组</title>
      <link href="/post/a5caedcb.html"/>
      <url>/post/a5caedcb.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第五章：数组"><a href="#第五章：数组" class="headerlink" title="第五章：数组"></a>第五章：数组</h1><h2 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h2><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素。</p><h3 id="特点1：数组中的每个数据元素都是相同的数据类型。"><a href="#特点1：数组中的每个数据元素都是相同的数据类型。" class="headerlink" title="特点1：数组中的每个数据元素都是相同的数据类型。"></a>特点1：数组中的每个数据元素都是相同的数据类型。</h3><h3 id="特点2：数组是由连续的内存位置组成。"><a href="#特点2：数组是由连续的内存位置组成。" class="headerlink" title="特点2：数组是由连续的内存位置组成。"></a>特点2：数组是由连续的内存位置组成。</h3><hr><h2 id="5-3-二维数组"><a href="#5-3-二维数组" class="headerlink" title="5.3 二维数组"></a>5.3 二维数组</h2><p>二维数组就是在一维数组上，多加一个维度。</p><h3 id="5-3-1-二维数组定义方式"><a href="#5-3-1-二维数组定义方式" class="headerlink" title="5.3.1 二维数组定义方式"></a>5.3.1 二维数组定义方式</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">二维数组定义的四种方式： </span><br><span class="line"><span class="number">1</span>、数据类型 数组名\[ 行数 \]\[ 列数 \]; </span><br><span class="line"><span class="number">2</span>、数据类型 数据名\[ \]\[ 列数 \] = &#123;数据<span class="number">1</span>,数据<span class="number">2</span>数据<span class="number">3</span>,数据<span class="number">4</span>&#125;; </span><br><span class="line"><span class="number">3</span>、数据类型 数组名\[ 行数 \]\[ 列数 \]=&#123; 数据<span class="number">1</span>,数据<span class="number">2</span>,数据<span class="number">3</span>,数据<span class="number">4</span>,&#125;; </span><br><span class="line"><span class="number">4</span>、数据类型 数组名\[ 行数 \]\[ 列数 \]=&#123;&#123;数据<span class="number">1</span>,数据<span class="number">2</span>&#125;,&#123;数据<span class="number">3</span>,数据<span class="number">4</span>&#125;&#125;;</span><br></pre></td></tr></table></figure><h3 id="建议：以上4种定义方式，利用第四种更加直观，提高代码的可读性。"><a href="#建议：以上4种定义方式，利用第四种更加直观，提高代码的可读性。" class="headerlink" title="建议：以上4种定义方式，利用第四种更加直观，提高代码的可读性。"></a>建议：以上4种定义方式，利用第四种更加直观，提高代码的可读性。</h3><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1、数据类型 数组名[行数][列数];</span></span><br><span class="line">    <span class="type">int</span> iArray01[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">    iArray01[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">    iArray01[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">20</span>;</span><br><span class="line">    iArray01[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    iArray01[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">40</span>;</span><br><span class="line">    iArray01[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">50</span>;</span><br><span class="line">    iArray01[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//总数 = sizeof(iArray01)/sizeof(int) </span></span><br><span class="line">    <span class="comment">//行数 = (sizeof(iArray01) / sizeof(int))/ (sizeof(iArray01[0]) / sizeof(int))    </span></span><br><span class="line">    <span class="comment">//列数 = sizeof(iArray01[0]) / sizeof(int)    </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//循环打印所有元素值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; (<span class="built_in">sizeof</span>(iArray01) / <span class="built_in">sizeof</span>(<span class="type">int</span>)) / (<span class="built_in">sizeof</span>(iArray01[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(<span class="type">int</span>)); i++)      <span class="comment">//行数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="built_in">sizeof</span>(iArray01[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(<span class="type">int</span>); j++)       <span class="comment">//列数</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; iArray01[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、数据类型 数据名[][列数] = &#123; 数据1,数据2数据3,数据4 &#125;;</span></span><br><span class="line">    <span class="type">int</span> iArray02[][<span class="number">4</span>] = &#123; <span class="number">11</span>,<span class="number">23</span>,<span class="number">52</span>,<span class="number">36</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//循环打印所有元素值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; (<span class="built_in">sizeof</span>(iArray02) / <span class="built_in">sizeof</span>(<span class="type">int</span>)) / (<span class="built_in">sizeof</span>(iArray02[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(<span class="type">int</span>)); i++)      <span class="comment">//行数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="built_in">sizeof</span>(iArray02[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(<span class="type">int</span>); j++)       <span class="comment">//列数</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; iArray02[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、数据类型 数组名[行数][列数] = &#123; 数据1,数据2,数据3,数据4, &#125;;</span></span><br><span class="line">    <span class="type">int</span> iArray03[<span class="number">2</span>][<span class="number">2</span>] = &#123; <span class="number">21</span>,<span class="number">23</span>,<span class="number">84</span>,<span class="number">78</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//循环打印所有元素值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; (<span class="built_in">sizeof</span>(iArray03) / <span class="built_in">sizeof</span>(<span class="type">int</span>)) / (<span class="built_in">sizeof</span>(iArray03[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(<span class="type">int</span>)); i++)      <span class="comment">//行数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="built_in">sizeof</span>(iArray03[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(<span class="type">int</span>); j++)       <span class="comment">//列数</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; iArray03[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4、数据类型 数组名[行数][列数] = &#123; &#123;数据1,数据2&#125;,&#123;数据3,数据4&#125; &#125;;</span></span><br><span class="line">    <span class="type">int</span> iArray04[<span class="number">2</span>][<span class="number">4</span>] = &#123; &#123;<span class="number">78</span>,<span class="number">21</span>,<span class="number">45</span>,<span class="number">232</span>&#125; ,</span><br><span class="line">                            &#123;<span class="number">56</span>,<span class="number">32</span>,<span class="number">78</span>,<span class="number">54</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//循环打印所有元素值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; (<span class="built_in">sizeof</span>(iArray04) / <span class="built_in">sizeof</span>(<span class="type">int</span>)) / (<span class="built_in">sizeof</span>(iArray04[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(<span class="type">int</span>)); i++)      <span class="comment">//行数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="built_in">sizeof</span>(iArray04[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(<span class="type">int</span>); j++)       <span class="comment">//列数</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; iArray04[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程31：数组-一维数组（冒泡排序）</title>
      <link href="/post/3920124c.html"/>
      <url>/post/3920124c.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第五章：数组"><a href="#第五章：数组" class="headerlink" title="第五章：数组"></a>第五章：数组</h1><h2 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h2><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素。</p><h3 id="特点1：数组中的每个数据元素都是相同的数据类型。"><a href="#特点1：数组中的每个数据元素都是相同的数据类型。" class="headerlink" title="特点1：数组中的每个数据元素都是相同的数据类型。"></a>特点1：数组中的每个数据元素都是相同的数据类型。</h3><h3 id="特点2：数组是由连续的内存位置组成。"><a href="#特点2：数组是由连续的内存位置组成。" class="headerlink" title="特点2：数组是由连续的内存位置组成。"></a>特点2：数组是由连续的内存位置组成。</h3><hr><h2 id="5-2-一维数组"><a href="#5-2-一维数组" class="headerlink" title="5.2 一维数组"></a>5.2 一维数组</h2><h3 id="5-2-3-冒泡排序"><a href="#5-2-3-冒泡排序" class="headerlink" title="5.2.3 冒泡排序"></a>5.2.3 冒泡排序</h3><p><strong>作用：</strong>最常用的排序算法，对数组内元素进行排序。 1、比较相邻的元素，如果第一比第二个大，就交换他们两个。 2、对每一对相邻元素做风一样的工作，执行完毕后，就许多的他们两个。 3、重复以上步骤，每次比较次数-1，直到不需要比较。 <strong>示例：</strong>将数组{ 4，2，8，0，5，7，1，3，9 }进行升序排序。 <strong>原理：</strong> <img src="http://image.camcad.cn/2020/05/202005220428049-1024x370.jpg"> <strong>代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//将数组&#123; 4，2，8，0，5，7，1，3，9 &#125;进行升序排序。</span></span><br><span class="line">    <span class="type">int</span> arr[<span class="number">9</span>] = &#123; <span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//外层循环轮数为: 元素总数-1</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(<span class="type">int</span>)<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//内层循环轮数为： 元素总数-外层循环数-1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(<span class="type">int</span>)-i<span class="number">-1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j]&gt;arr[j+<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//如果第一个元素大于第二个元素，交换两个数字</span></span><br><span class="line">                <span class="type">int</span> temp = arr[j];      <span class="comment">//临时储存</span></span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印最后结果</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程30：数组-一维数组（一维数组数组名）</title>
      <link href="/post/4796245.html"/>
      <url>/post/4796245.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第五章：数组"><a href="#第五章：数组" class="headerlink" title="第五章：数组"></a>第五章：数组</h1><h2 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h2><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素。</p><h3 id="特点1：数组中的每个数据元素都是相同的数据类型。"><a href="#特点1：数组中的每个数据元素都是相同的数据类型。" class="headerlink" title="特点1：数组中的每个数据元素都是相同的数据类型。"></a>特点1：数组中的每个数据元素都是相同的数据类型。</h3><h3 id="特点2：数组是由连续的内存位置组成。"><a href="#特点2：数组是由连续的内存位置组成。" class="headerlink" title="特点2：数组是由连续的内存位置组成。"></a>特点2：数组是由连续的内存位置组成。</h3><hr><h2 id="5-2-一维数组"><a href="#5-2-一维数组" class="headerlink" title="5.2 一维数组"></a>5.2 一维数组</h2><h3 id="5-2-2-一维数组数组名"><a href="#5-2-2-一维数组数组名" class="headerlink" title="5.2.2 一维数组数组名"></a>5.2.2 一维数组数组名</h3><p>一维数组名称的<strong>用途：</strong> 1、可以统计整个数组在内存中的长度。 2、可以获取数组在内存中的首地址。</p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 1、可以统计整个数组在内存中的长度。</span></span><br><span class="line">    <span class="type">int</span> iNum01[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;整个数组占用内存空间为：&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(iNum01) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;每个元素占用内存空间为：&quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(iNum01[<span class="number">0</span>]) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;数组中元素个数为：&quot;</span>&lt;&lt; <span class="keyword">sizeof</span>(iNum01) / <span class="keyword">sizeof</span>(<span class="type">int</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2、可以获取数组在内存中的首地址。</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;数组内存首地址为：&quot;</span> &lt;&lt; (<span class="type">int</span>)iNum01 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意：获取数组中指定元素地址需加取值符 &amp; 符号。</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;数组中第一元素地址为：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;iNum01[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组名是常量，不可以进行赋值操作。</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意1：获取数组中指定元素地址需加取值符-amp-符号。"><a href="#注意1：获取数组中指定元素地址需加取值符-amp-符号。" class="headerlink" title="注意1：获取数组中指定元素地址需加取值符 &amp; 符号。"></a>注意1：获取数组中指定元素地址需加取值符 &amp; 符号。</h3><h3 id="注意2：数组名是常量，不可以进行赋值操作。"><a href="#注意2：数组名是常量，不可以进行赋值操作。" class="headerlink" title="注意2：数组名是常量，不可以进行赋值操作。"></a>注意2：数组名是常量，不可以进行赋值操作。</h3><h2 id="练习案例："><a href="#练习案例：" class="headerlink" title="练习案例："></a>练习案例：</h2><h3 id="练习案例1：五只小猪称体重"><a href="#练习案例1：五只小猪称体重" class="headerlink" title="练习案例1：五只小猪称体重"></a>练习案例1：五只小猪称体重</h3><p><strong>案例描述：</strong> 在一个数组中记录了五只小猪的体重，如：int arr[5]&#x3D;{300,350,200,400,250}; 找出并打印最重的小猪体重。 <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">5</span>] = &#123; <span class="number">300</span>,<span class="number">350</span>,<span class="number">200</span>,<span class="number">400</span>,<span class="number">250</span> &#125;;</span><br><span class="line">    <span class="type">int</span> iNum = <span class="number">0</span>,iNumber=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i]&gt;iNum)</span><br><span class="line">        &#123;</span><br><span class="line">            iNum = arr[i];</span><br><span class="line">            iNumber = i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;小猪&quot;</span>&lt;&lt; iNumber &lt;&lt;<span class="string">&quot;号 = &quot;</span>&lt;&lt;iNum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="练习案例2：数组元素逆置"><a href="#练习案例2：数组元素逆置" class="headerlink" title="练习案例2：数组元素逆置"></a>练习案例2：数组元素逆置</h3><p><strong>案例描述：</strong>请声明5个元素的数组，并且将元素逆置。 （如原数组元素为：11，21，31，41，51；逆置后输出结果为：51，41，31，21，11）</p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">5</span>] = &#123; <span class="number">11</span>,<span class="number">21</span>,<span class="number">31</span>,<span class="number">41</span>,<span class="number">51</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> iStart = <span class="number">0</span>;     <span class="comment">//起始下标</span></span><br><span class="line">    <span class="type">int</span> iEnd = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]) - <span class="number">1</span>;    <span class="comment">//结束下标</span></span><br><span class="line">    <span class="type">int</span> iNum = <span class="number">0</span>;       <span class="comment">//元素暂存</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (iStart &lt; iEnd)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//实现元素互换</span></span><br><span class="line">        iNum = arr[iEnd];</span><br><span class="line">        arr[iEnd] = arr[iStart];</span><br><span class="line">        arr[iStart] = iNum;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//下标更新</span></span><br><span class="line">        iStart++;</span><br><span class="line">        iEnd--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印输出</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程29：数组-一维数组（一维数组的定义方式）</title>
      <link href="/post/a644770e.html"/>
      <url>/post/a644770e.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第五章：数组"><a href="#第五章：数组" class="headerlink" title="第五章：数组"></a>第五章：数组</h1><h2 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h2><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素。</p><h3 id="特点1：数组中的每个数据元素都是相同的数据类型。"><a href="#特点1：数组中的每个数据元素都是相同的数据类型。" class="headerlink" title="特点1：数组中的每个数据元素都是相同的数据类型。"></a>特点1：数组中的每个数据元素都是相同的数据类型。</h3><h3 id="特点2：数组是由连续的内存位置组成。"><a href="#特点2：数组是由连续的内存位置组成。" class="headerlink" title="特点2：数组是由连续的内存位置组成。"></a>特点2：数组是由连续的内存位置组成。</h3><hr><h2 id="5-2-一维数组"><a href="#5-2-一维数组" class="headerlink" title="5.2 一维数组"></a>5.2 一维数组</h2><h3 id="5-2-1-一维数组"><a href="#5-2-1-一维数组" class="headerlink" title="5.2.1 一维数组"></a>5.2.1 一维数组</h3><p>一维数组定义的三种方式： 1、数据类型 数组名[ 数组长度 ]; 2、数据类型 数组名[ 数组长度 ] &#x3D; { 值1, 值2…}; 3、数据类型 数组名[ ] &#x3D; { 值1,值2…}; <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1、数据类型 数组名[数组长度];</span></span><br><span class="line">    <span class="type">int</span> iNum01[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给数组中的元素进行赋值</span></span><br><span class="line">    <span class="comment">//注意：数组元素的下标是从0开始索引</span></span><br><span class="line">    iNum01[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">    iNum01[<span class="number">1</span>] = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问数组里面的元素</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; iNum01[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; iNum01[<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2、数据类型 数组名[数组长度] = &#123; 值1, 值2... &#125;;</span></span><br><span class="line">    <span class="type">int</span> iNum02[<span class="number">2</span>] = &#123;<span class="number">20</span>,<span class="number">30</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问数组里面的元素</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; iNum02[<span class="number">0</span>] &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; iNum02[<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3、数据类型 数组名[] = &#123; 值1,值2... &#125;;</span></span><br><span class="line">    <span class="type">int</span> iNum03[] = &#123; <span class="number">50</span>,<span class="number">60</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问数组里面的元素</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; iNum03[<span class="number">0</span>] &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; iNum03[<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结1：数组名的命名规范与变量名命名规范一致，不要和变量名重名。"><a href="#总结1：数组名的命名规范与变量名命名规范一致，不要和变量名重名。" class="headerlink" title="总结1：数组名的命名规范与变量名命名规范一致，不要和变量名重名。"></a>总结1：数组名的命名规范与变量名命名规范一致，不要和变量名重名。</h3><h3 id="总结2：数组元素的下标是从0开始索引。"><a href="#总结2：数组元素的下标是从0开始索引。" class="headerlink" title="总结2：数组元素的下标是从0开始索引。"></a>总结2：数组元素的下标是从0开始索引。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程28：程序流程结构-跳转语句（goto语句）</title>
      <link href="/post/576f3422.html"/>
      <url>/post/576f3422.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第四章：程序流程结构"><a href="#第四章：程序流程结构" class="headerlink" title="第四章：程序流程结构"></a>第四章：程序流程结构</h1><h2 id="4-3-跳转结构"><a href="#4-3-跳转结构" class="headerlink" title="4.3 跳转结构"></a>4.3 跳转结构</h2><h3 id="4-3-3-goto语句"><a href="#4-3-3-goto语句" class="headerlink" title="4.3.3 goto语句"></a>4.3.3 goto语句</h3><p><strong>作用：</strong>可以无条件跳转语句。 <strong>语法：</strong>goto 标记; 标记:</p><p><strong>解释：</strong>如果标记的名称存在，执行到goto语句时，会跳转标记的位置。</p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">goto</span> out;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    out:</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意：在程序中不建议使用goto语句，以免造成程序流程混乱。"><a href="#注意：在程序中不建议使用goto语句，以免造成程序流程混乱。" class="headerlink" title="注意：在程序中不建议使用goto语句，以免造成程序流程混乱。"></a>注意：在程序中不建议使用goto语句，以免造成程序流程混乱。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程27：程序流程结构-跳转语句（continue语句）</title>
      <link href="/post/7c12f79e.html"/>
      <url>/post/7c12f79e.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第四章：程序流程结构"><a href="#第四章：程序流程结构" class="headerlink" title="第四章：程序流程结构"></a>第四章：程序流程结构</h1><h2 id="4-3-跳转结构"><a href="#4-3-跳转结构" class="headerlink" title="4.3 跳转结构"></a>4.3 跳转结构</h2><h3 id="4-3-2-continue语句"><a href="#4-3-2-continue语句" class="headerlink" title="4.3.2 continue语句"></a>4.3.2 continue语句</h3><p><strong>作用：</strong>在循环语句中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环。 <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//continue语句</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//如果是奇数输出。偶数不输出</span></span><br><span class="line">        <span class="keyword">if</span> (i%<span class="number">2</span> == <span class="number">0</span>)   </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意：continue并没有使整个循环终止，面break会跳出循环。"><a href="#注意：continue并没有使整个循环终止，面break会跳出循环。" class="headerlink" title="注意：continue并没有使整个循环终止，面break会跳出循环。"></a>注意：continue并没有使整个循环终止，面break会跳出循环。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程26：程序流程结构-跳转语句（break语句）</title>
      <link href="/post/ee302b30.html"/>
      <url>/post/ee302b30.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第四章：程序流程结构"><a href="#第四章：程序流程结构" class="headerlink" title="第四章：程序流程结构"></a>第四章：程序流程结构</h1><h2 id="4-3-跳转语句"><a href="#4-3-跳转语句" class="headerlink" title="4.3 跳转语句"></a>4.3 跳转语句</h2><h3 id="4-3-1-break语句"><a href="#4-3-1-break语句" class="headerlink" title="4.3.1 break语句"></a>4.3.1 break语句</h3><p><strong>作用：</strong>用于跳出选择结构或者循环结构。 <strong>break使用的时机：</strong></p><ul><li>出现switch条件语句中，作用是终止case并跳出switch。</li><li>出现在循环语句中，作用是跳出当前的循环语句。</li><li>出现在嵌套循环中，跳出最近的内层循环语句。 <strong>示例1：</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//1、出现switch条件语句中，作用是终止case并跳出switch。</span></span><br><span class="line"><span class="type">int</span> icont = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入座位号：&quot;</span> &lt;&lt; <span class="built_in">endl</span>; <span class="built_in">cin</span> &gt;&gt; icont;<span class="comment">//等待用户输入</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (icont)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">85</span>: <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;张三&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//退出switch语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">75</span>: <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;李四&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">65</span>: <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;王五&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">60</span>: <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;小三&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>: <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;大一&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例2：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//2、出现在循环语句中，作用是跳出当前的循环语句。</span></span><br><span class="line"><span class="keyword">for</span> (size\<span class="type">_t</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( i==<span class="number">2</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//跳出循环</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例3：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//3、出现在嵌套循环中，跳出最近的内层循环语句。</span></span><br><span class="line"><span class="keyword">for</span> (size\<span class="type">_t</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (size\<span class="type">_t</span> j = <span class="number">1</span>; j &lt; i+<span class="number">1</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (j==<span class="number">6</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//跳出循环</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; j &lt;&lt; <span class="string">&quot;\*&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; j \* i &lt;&lt; <span class="string">&quot;\\t&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程25：程序流程结构-循环结构（嵌套循环）</title>
      <link href="/post/fb12f7df.html"/>
      <url>/post/fb12f7df.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第四章：程序流程结构"><a href="#第四章：程序流程结构" class="headerlink" title="第四章：程序流程结构"></a>第四章：程序流程结构</h1><h2 id="4-2-循环结构"><a href="#4-2-循环结构" class="headerlink" title="4.2 循环结构"></a>4.2 循环结构</h2><h3 id="4-2-4-嵌套循环"><a href="#4-2-4-嵌套循环" class="headerlink" title="4.2.4 嵌套循环"></a>4.2.4 嵌套循环</h3><p><strong>作用：</strong>在循环体中再嵌套一层循环，解决一些实际问题。</p><h3 id="练习案例："><a href="#练习案例：" class="headerlink" title="练习案例："></a>练习案例：</h3><h3 id="案例一："><a href="#案例一：" class="headerlink" title="案例一："></a>案例一：</h3><p>例如我们在屏幕中打印如下所示，就需要利用嵌套循环。 <img src="http://image.camcad.cn/2020/05/2020052107523014.jpg"></p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="总结：外层执行一次，内层执行一轮。"><a href="#总结：外层执行一次，内层执行一轮。" class="headerlink" title="总结：外层执行一次，内层执行一轮。"></a>总结：外层执行一次，内层执行一轮。</h4><h3 id="案例二："><a href="#案例二：" class="headerlink" title="案例二："></a>案例二：</h3><p><strong>练习案例：</strong>乘法口诀表 <strong>案例描述：</strong>利用嵌套循环，实现九九乘法表。 <img src="http://image.camcad.cn/2020/05/2020052108111218-1024x447.jpg"></p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">1</span>; j &lt; i+<span class="number">1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; j &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; j * i &lt;&lt; <span class="string">&quot;\t&quot;</span> ;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程24：程序流程结构-循环结构（for循环语句）</title>
      <link href="/post/c0f51a0.html"/>
      <url>/post/c0f51a0.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第四章：程序流程结构"><a href="#第四章：程序流程结构" class="headerlink" title="第四章：程序流程结构"></a>第四章：程序流程结构</h1><h2 id="4-2-循环结构"><a href="#4-2-循环结构" class="headerlink" title="4.2 循环结构"></a>4.2 循环结构</h2><h3 id="4-2-3-for循环语句"><a href="#4-2-3-for循环语句" class="headerlink" title="4.2.3 for循环语句"></a>4.2.3 for循环语句</h3><p><strong>作用：</strong>满足循环条件，执行循环语句。 <strong>语法：</strong>for( 起始表达式; 条件表达式; 未尾循环体 ) { 循环语句; }</p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt;<span class="string">&quot;循环= &quot;</span>&lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052106450421.jpg"></p><h4 id="注意：for循环中的表达式，要用分号进行分隔。"><a href="#注意：for循环中的表达式，要用分号进行分隔。" class="headerlink" title="注意：for循环中的表达式，要用分号进行分隔。"></a>注意：for循环中的表达式，要用分号进行分隔。</h4><h4 id="总结：while-do…while-for都是开发中常用的循环语句，for循环结构比较清晰，比较常用。"><a href="#总结：while-do…while-for都是开发中常用的循环语句，for循环结构比较清晰，比较常用。" class="headerlink" title="总结：while,do…while,for都是开发中常用的循环语句，for循环结构比较清晰，比较常用。"></a>总结：while,do…while,for都是开发中常用的循环语句，for循环结构比较清晰，比较常用。</h4><h3 id="练习案例："><a href="#练习案例：" class="headerlink" title="练习案例："></a>练习案例：</h3><p><strong>练习案例：敲桌子</strong> 案例描述：从1开始数到数字100，如果数字个位含有7，或者数字十位含有7，或者该数字是7的倍数，我们打印敲桌子，其余数字直接打印输出。 <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = i % <span class="number">10</span>;     <span class="comment">//个位含有7</span></span><br><span class="line">        <span class="type">int</span> b = i%<span class="number">7</span>;        <span class="comment">//数字7倍数</span></span><br><span class="line">        <span class="type">int</span> c = i / <span class="number">10</span>;     <span class="comment">//十位含有7</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a==<span class="number">7</span>  b==<span class="number">0</span>  c==<span class="number">7</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt;<span class="string">&quot;敲桌子&quot;</span>&lt;&lt; <span class="built_in">endl</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程23：程序流程结构-循环结构（do...while循环语句）</title>
      <link href="/post/b20f232b.html"/>
      <url>/post/b20f232b.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第四章：程序流程结构"><a href="#第四章：程序流程结构" class="headerlink" title="第四章：程序流程结构"></a>第四章：程序流程结构</h1><h2 id="4-2-循环结构"><a href="#4-2-循环结构" class="headerlink" title="4.2 循环结构"></a>4.2 循环结构</h2><h3 id="4-2-2-do…while循环语句"><a href="#4-2-2-do…while循环语句" class="headerlink" title="4.2.2 do…while循环语句"></a>4.2.2 do…while循环语句</h3><p><strong>作用：</strong>满足循环条件，执行循环语句。 <strong>语法：</strong>do{ 循环语句 } while( 循环条件 ); <strong>注意：</strong>与while循环语句的区别在于do..while循环会先执行一次循环语句，再判断循环条件。 <img src="http://image.camcad.cn/2020/05/2020052102013271.jpg"> <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> iNum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;循环=&quot;</span> &lt;&lt; iNum + <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        iNum++;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">while</span> (iNum &lt; <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="练习案例："><a href="#练习案例：" class="headerlink" title="练习案例："></a>练习案例：</h3><h4 id="练习案例：水仙花数"><a href="#练习案例：水仙花数" class="headerlink" title="练习案例：水仙花数"></a>练习案例：水仙花数</h4><p><strong>案例描述：</strong>水仙花数是指一个3位数，它的每个位上的数字的3次幂之和等于它本身。 例如：1^3 + 5^3 + 3^3 &#x3D; 153 请利用do…while循环语句，求出所有3位数中的水仙花数。 <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义三位数字</span></span><br><span class="line">    <span class="type">int</span> iNum = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//从所有三位数字中找到水仙花数输出打印</span></span><br><span class="line">        <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        a = iNum % <span class="number">10</span>;          <span class="comment">//获取数字的个位</span></span><br><span class="line">        b = iNum / <span class="number">10</span> % <span class="number">10</span>;     <span class="comment">//获取数字的十位</span></span><br><span class="line">        c = iNum / <span class="number">100</span>;         <span class="comment">//获取数控的百位</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a*a*a + b*b*b + c*c* c == iNum)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; iNum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        iNum++;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">while</span> (iNum &lt; <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052102473739.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程22：程序流程结构-循环结构（while循环语句）</title>
      <link href="/post/2a571973.html"/>
      <url>/post/2a571973.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第四章：程序流程结构"><a href="#第四章：程序流程结构" class="headerlink" title="第四章：程序流程结构"></a>第四章：程序流程结构</h1><h2 id="4-2-循环结构"><a href="#4-2-循环结构" class="headerlink" title="4.2 循环结构"></a>4.2 循环结构</h2><h3 id="4-2-1-while循环语句"><a href="#4-2-1-while循环语句" class="headerlink" title="4.2.1 while循环语句"></a>4.2.1 while循环语句</h3><p><strong>作用：</strong>满足循环条件，执行循环语句。 <strong>语法：</strong>while(循环条件){循环语句}; <strong>解释：</strong>只要循环条件的结果为真，就执行循环语句。 <img src="http://image.camcad.cn/2020/05/2020052014393427.jpg"> <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> iNum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (iNum &lt; <span class="number">5</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt;<span class="string">&quot;循环= &quot;</span>&lt;&lt; iNum + <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        iNum++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环。"><a href="#注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环。" class="headerlink" title="注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环。"></a>注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环。</h4><p>将代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052014511315.jpg"></p><h2 id="练习案例："><a href="#练习案例：" class="headerlink" title="练习案例："></a>练习案例：</h2><h3 id="while-循环练习案例：猜数字"><a href="#while-循环练习案例：猜数字" class="headerlink" title="while 循环练习案例：猜数字"></a>while 循环练习案例：猜数字</h3><p><strong>案例描述：</strong>系统随机生成一个1~100之间的数字，玩家进行猜测，如果猜错，提示玩家数字过大或过小，如果猜对恭喜玩家胜利，并且退出游戏。 <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span>  <span class="comment">//time系统时间头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//添加随机数种子，利用当前系统时间生成随机数，防止每次随机数都一样</span></span><br><span class="line">    srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1、系统生成随机数</span></span><br><span class="line">    <span class="type">int</span> iNum = rand() % <span class="number">100</span> + <span class="number">1</span>;    <span class="comment">//rand() % 100 + 1 生成 0 + 1 ~ 99 + 1 随机数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、玩家进行猜测</span></span><br><span class="line">    <span class="type">int</span> iVal = <span class="number">0</span>;       <span class="comment">//玩家输入的数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; iVal;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (iVal &gt; iNum)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;您输入的数值过大，请重新输入！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (iVal &lt; iNum)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;您输入的数值过小，请重新输入！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜您成功晋级！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;      <span class="comment">//break 可以利用该关键字来退出当前while循环</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程21：程序流程结构-选择结构（switch语句）</title>
      <link href="/post/fd1e91e2.html"/>
      <url>/post/fd1e91e2.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第四章：程序流程结构"><a href="#第四章：程序流程结构" class="headerlink" title="第四章：程序流程结构"></a>第四章：程序流程结构</h1><h2 id="4-1-选择结构"><a href="#4-1-选择结构" class="headerlink" title="4.1 选择结构"></a>4.1 选择结构</h2><h3 id="4-1-3-switch语句"><a href="#4-1-3-switch语句" class="headerlink" title="4.1.3 switch语句"></a>4.1.3 switch语句</h3><p><strong>作用：</strong>执行多条件分支语句 <strong>语法：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> 结果<span class="number">1</span>:  执行语句; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> 结果<span class="number">2</span>:  执行语句; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> 结果<span class="number">3</span>:  执行语句; <span class="keyword">break</span>;</span><br><span class="line">    ... ... </span><br><span class="line">        <span class="keyword">default</span>: 执行语句; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//点号入座</span></span><br><span class="line">    <span class="comment">// 85号          张三</span></span><br><span class="line">    <span class="comment">// 75号          李四</span></span><br><span class="line">    <span class="comment">// 65号          王五</span></span><br><span class="line">    <span class="comment">// 60号          小三</span></span><br><span class="line">    <span class="comment">// 其他           大一</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入座位号：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="type">int</span> Score = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; Score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (Score)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">85</span>: <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;张三&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> <span class="number">75</span>: <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;李四&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> <span class="number">65</span>: <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;王五&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> <span class="number">60</span>: <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;小三&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">default</span>: <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;大一&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程20：程序流程结构-选择结构（三目运算符）</title>
      <link href="/post/1e4ffda8.html"/>
      <url>/post/1e4ffda8.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第四章：程序流程结构"><a href="#第四章：程序流程结构" class="headerlink" title="第四章：程序流程结构"></a>第四章：程序流程结构</h1><h2 id="4-1-选择结构"><a href="#4-1-选择结构" class="headerlink" title="4.1 选择结构"></a>4.1 选择结构</h2><h3 id="4-1-2-三目运算符"><a href="#4-1-2-三目运算符" class="headerlink" title="4.1.2 三目运算符"></a>4.1.2 三目运算符</h3><p><strong>作用：</strong>通过三目运算符实现简单的判断。 <strong>语法：</strong>表达式1 ？表达式2 : 表达式3;</p><p><strong>解释：</strong> 如果表达式1的值为真，执行表达式2，并返回表达式2的结果。 如果表达式1的值为假，执行表达式3，并返回表达式3的结果。</p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> A = <span class="number">70</span>, C = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> cCh1 = <span class="string">&#x27;a&#x27;</span>;  <span class="comment">//ASCII码十进制 = 97</span></span><br><span class="line">    <span class="type">char</span> cCh2 = <span class="string">&#x27;A&#x27;</span>;  <span class="comment">//ASCII码十进制 = 65</span></span><br><span class="line"></span><br><span class="line">    C = A &gt; cCh2 ? cCh1 : cCh2;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;字符ASCII码十进制 = &quot;</span> &lt;&lt; C &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// C++ 中三目运算符返回的是变量还可以继续赋值。</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line">    (a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052012434125.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程19：程序流程结构-选择结构（if语句）</title>
      <link href="/post/f87d550a.html"/>
      <url>/post/f87d550a.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第四章：程序流程结构"><a href="#第四章：程序流程结构" class="headerlink" title="第四章：程序流程结构"></a>第四章：程序流程结构</h1><p>C&#x2F;C++ 支持最基本的三种程序运行结构 ：顺序结构、选择结构、循环结构。</p><ul><li>顺序结构：程序按顺序执行，不改造跳转。</li><li>选择结构：依据条件是否满足，有选择的执行相应的功能。</li><li>循环结构：依据条件是否满足，循环多次执行某段代码。</li></ul><h2 id="4-1-选择结构"><a href="#4-1-选择结构" class="headerlink" title="4.1 选择结构"></a>4.1 选择结构</h2><h3 id="4-1-1-if语句"><a href="#4-1-1-if语句" class="headerlink" title="4.1.1 if语句"></a>4.1.1 if语句</h3><p><strong>作用：</strong>执行满足条件的语句。</p><ul><li>单行格式if语句</li><li>多选格式if语句</li><li>多条件的if语句</li></ul><p><strong>1、单行格式if语句：</strong>if(条件){ 条件满足执行的语句 }; <img src="http://image.camcad.cn/2020/05/2020052005262241.jpg"> <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> inum01 = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入分数：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; inum01;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (inum01&gt;=<span class="number">600</span>) <span class="comment">//注意：条件后面不要加分号</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜您考入清华大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020052005382711.jpg"></p><hr><hr><p><strong>2、多选格式if语句：</strong>if(条件){ 条件满足执行的语句 }else{ 条件不满足执行的语句 }; <img src="http://image.camcad.cn/2020/05/2020052005445277.jpg"> <strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> inum01 = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入分数：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; inum01;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意：条件后面不要加分号</span></span><br><span class="line">    <span class="keyword">if</span> (inum01&gt;=<span class="number">600</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜您考入清华大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;抱歉，未被录取，请再接再厉&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><hr><p><strong>3、嵌套if语句：</strong>在if语句中，可以嵌套使用if语句，达到更精确的条件判断。</p><ul><li>提示用户输入一个高考考试分数，根据分数做如下判断。</li><li>分数如果大于600分视为考上一本大学，大于500分考上二本大学，大于400分考上三本大学，其余视为未考上本科；</li><li>在一本分数中，如果大于700分，考入北大，大于650分，考入清华，大于600分考入人大。 示例：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">  using namespace <span class="built_in">std</span>;</span><br><span class="line">  </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//提示用户输入一个高考考试分数。</span></span><br><span class="line">  <span class="type">int</span> iNum01 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入分数：&quot;</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">          <span class="built_in">cin</span> &gt;&gt; iNum01;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//分数如果大于 600 分视为考上一本大学，大于 500 分考上二本大学，大于 400 分考上三本大学，其余视为未考上本科；</span></span><br><span class="line">  <span class="keyword">if</span> (iNum01 &gt; <span class="number">600</span>)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜您，成功考入 一本 大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">                  <span class="comment">//在一本分数中，如果大于 700 分，考入北大，大于 650 分，考入清华，大于 600 分考入人大。 </span></span><br><span class="line">                  <span class="keyword">if</span> (iNum01 &gt; <span class="number">700</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜您，成功获取 北大 录取通知书！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                  <span class="keyword">else</span> <span class="keyword">if</span> (iNum01 &gt; <span class="number">650</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜您，成功获取 清华 录取通知书！&quot;</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">                  <span class="keyword">else</span> <span class="keyword">if</span> (iNum01 &gt; <span class="number">600</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜您，成功获取 人大 录取通知书！&quot;</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">          &#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (iNum01 &gt; <span class="number">500</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜您，成功考入 二本 大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (iNum01 &gt; <span class="number">400</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜您，成功考入 三本 大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;抱歉，未考入本科，请再接再厉！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  </span><br><span class="line">  system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h3 id="练习案例："><a href="#练习案例：" class="headerlink" title="练习案例："></a>练习案例：</h3><p><strong>练习案例：</strong>三只小狗称体重</p><p>有三只小猪ABC，请分别输入三只小猪的体重，并且判断哪只小猪最重。</p><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//有三只小猪ABC，请分别输入三只小猪的体重，并且判断哪只小猪最重。</span></span><br><span class="line"><span class="type">int</span> A = <span class="number">0</span>, B = <span class="number">0</span>, C = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入小猪A的体重：&quot;</span> &lt;&lt; <span class="built_in">endl</span>; <span class="built_in">cin</span> &gt;&gt; A;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入小猪B的体重：&quot;</span> &lt;&lt; <span class="built_in">endl</span>; <span class="built_in">cin</span> &gt;&gt; B;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入小猪C的体重：&quot;</span> &lt;&lt; <span class="built_in">endl</span>; <span class="built_in">cin</span> &gt;&gt; C;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>      (A &gt; B &amp;&amp; A &gt; C) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;小猪A最重&quot;</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (B &gt; A &amp;&amp; B &gt; C) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;小猪B最重&quot;</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (C &gt; A &amp;&amp; C &gt; B) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;小猪C最重&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;三只小猪体重相同 或 输入的数值有误！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程18：运算符-逻辑运算符</title>
      <link href="/post/ea417dd8.html"/>
      <url>/post/ea417dd8.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第三章：运算符"><a href="#第三章：运算符" class="headerlink" title="第三章：运算符"></a>第三章：运算符</h1><h2 id="3-4-逻辑运算符"><a href="#3-4-逻辑运算符" class="headerlink" title="3.4 逻辑运算符"></a>3.4 逻辑运算符</h2><p><strong>作用：</strong>用于根据表达式的值返回真值或假值。 逻辑运算符包括以下几个符号：</p><p>假设变量 A 的值为 1，变量 B 的值为 0，则：</p><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">&amp;&amp;</td><td align="center">称为逻辑与运算符。如果两个操作数都非零，则条件为真。</td><td align="center">(A &amp;&amp; B) 为假。</td></tr><tr><td align="center">||</td><td align="center">称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。</td><td align="center">(A B) 为真。</td></tr><tr><td align="center">!</td><td align="center">称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。</td><td align="center">!(A &amp;&amp; B) 为真。</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> iA = <span class="number">1</span>, iB = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &amp;&amp;（与）</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;(iA &amp;&amp; iB)\t&quot;</span> &lt;&lt; (iA &amp;&amp; iB) &lt;&lt; <span class="built_in">endl</span>;       <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// （或）</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;(iA  iB)\t&quot;</span> &lt;&lt; (iA  iB) &lt;&lt; <span class="built_in">endl</span>;       <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// !（非）</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;!(iA &amp;&amp; iB)\t&quot;</span> &lt;&lt; !(iA &amp;&amp; iB) &lt;&lt; <span class="built_in">endl</span>;     <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生以下结果： <img src="http://image.camcad.cn/2020/05/2020052002380079.jpg"></p><h3 id="总结：真变假，假变真。"><a href="#总结：真变假，假变真。" class="headerlink" title="总结：真变假，假变真。"></a>总结：真变假，假变真。</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程17：运算符-比较运算符</title>
      <link href="/post/ced67161.html"/>
      <url>/post/ced67161.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第三章：运算符"><a href="#第三章：运算符" class="headerlink" title="第三章：运算符"></a>第三章：运算符</h1><h2 id="3-3-比较运算符"><a href="#3-3-比较运算符" class="headerlink" title="3.3 比较运算符"></a>3.3 比较运算符</h2><p><strong>作用：</strong>用于表达式的比较，并返回一个真值或假值。 比较运算符有以下符号：</p><p>假设变量 A 的值为 10，变量 B 的值为 20，则：</p><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">=&#x3D;</td><td align="center">检查两个操作数的值是否相等，如果相等则条件为真。</td><td align="center">(A &#x3D;&#x3D; B) 不为真。</td></tr><tr><td align="center">!&#x3D;</td><td align="center">检查两个操作数的值是否相等，如果不相等则条件为真。</td><td align="center">(A !&#x3D; B) 为真。</td></tr><tr><td align="center">&gt;</td><td align="center">检查左操作数的值是否大于右操作数的值，如果是则条件为真。</td><td align="center">(A &gt; B) 不为真。</td></tr><tr><td align="center">&lt;</td><td align="center">检查左操作数的值是否小于右操作数的值，如果是则条件为真。</td><td align="center">(A &lt; B) 为真。</td></tr><tr><td align="center">&gt;&#x3D;</td><td align="center">检查左操作数的值是否大于或等于右操作数的值，如果是则条件为真。</td><td align="center">(A &gt;&#x3D; B) 不为真。</td></tr><tr><td align="center">&lt;&#x3D;</td><td align="center">检查左操作数的值是否小于或等于右操作数的值，如果是则条件为真。</td><td align="center">(A &lt;&#x3D; B) 为真。</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> iA = <span class="number">10</span>, iB = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ==</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（iA == iB）\t&quot;</span> &lt;&lt; (iA == iB) &lt;&lt; endl;       <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// !=</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（iA != iB）\t&quot;</span> &lt;&lt; (iA != iB) &lt;&lt; endl;       <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &gt;</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（iA &gt; iB）\t&quot;</span> &lt;&lt; (iA &gt; iB) &lt;&lt; endl;       <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &lt;</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（iA &lt; iB）\t&quot;</span> &lt;&lt; (iA &lt; iB) &lt;&lt; endl;       <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &gt;=</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（iA &gt;= iB）\t&quot;</span> &lt;&lt; (iA &gt;= iB) &lt;&lt; endl;     <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &lt;=</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;（iA &lt;= iB）\t&quot;</span> &lt;&lt; (iA &lt;= iB) &lt;&lt; endl;     <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生以下结果： <img src="http://image.camcad.cn/2020/05/2020052002153182.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程16：运算符-赋值运算符</title>
      <link href="/post/1a1b9d69.html"/>
      <url>/post/1a1b9d69.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第三章：运算符"><a href="#第三章：运算符" class="headerlink" title="第三章：运算符"></a>第三章：运算符</h1><h2 id="3-2-赋值运算符"><a href="#3-2-赋值运算符" class="headerlink" title="3.2 赋值运算符"></a>3.2 赋值运算符</h2><p><strong>作用：</strong>用于将表达式的值赋给变量 赋值运算符包括以下几个符号：</p><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">=</td><td align="center">简单的赋值运算符，把右边操作数的值赋给左边操作数</td><td align="center">C &#x3D; A + B 将把 A + B 的值赋给 C</td></tr><tr><td align="center">+&#x3D;</td><td align="center">加且赋值运算符，把右边操作数加上左边操作数的结果赋值给左边操作数</td><td align="center">C +&#x3D; A 相当于 C &#x3D; C + A</td></tr><tr><td align="center">-&#x3D;</td><td align="center">减且赋值运算符，把左边操作数减去右边操作数的结果赋值给左边操作数</td><td align="center">C -&#x3D; A 相当于 C &#x3D; C - A</td></tr><tr><td align="center">*&#x3D;</td><td align="center">乘且赋值运算符，把右边操作数乘以左边操作数的结果赋值给左边操作数</td><td align="center">C *&#x3D; A 相当于 C &#x3D; C * A</td></tr><tr><td align="center">&#x2F;&#x3D;</td><td align="center">除且赋值运算符，把左边操作数除以右边操作数的结果赋值给左边操作数</td><td align="center">C &#x2F;&#x3D; A 相当于 C &#x3D; C &#x2F; A</td></tr><tr><td align="center">%&#x3D;</td><td align="center">求模且赋值运算符，求两个操作数的模赋值给左边操作数</td><td align="center">C %&#x3D; A 相当于 C &#x3D; C % A</td></tr><tr><td align="center">&lt;&lt;&#x3D;</td><td align="center">左移且赋值运算符</td><td align="center">C &lt;&lt;&#x3D; 2 等同于 C &#x3D; C &lt;&lt; 2</td></tr><tr><td align="center">&gt;&gt;&#x3D;</td><td align="center">右移且赋值运算符</td><td align="center">C &gt;&gt;&#x3D; 2 等同于 C &#x3D; C &gt;&gt; 2</td></tr><tr><td align="center">&amp;&#x3D;</td><td align="center">按位与且赋值运算符</td><td align="center">C &amp;&#x3D; 2 等同于 C &#x3D; C &amp; 2</td></tr><tr><td align="center">^&#x3D;</td><td align="center">按位异或且赋值运算符</td><td align="center">C ^&#x3D; 2 等同于 C &#x3D; C ^ 2</td></tr><tr><td align="center">|&#x3D;</td><td align="center">按位或且赋值运算符</td><td align="center">C &#x3D; 2 等同于 C &#x3D; C 2</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// +=</span></span><br><span class="line">    <span class="type">int</span> iNum01 = <span class="number">10</span>;</span><br><span class="line">    iNum01 += <span class="number">1</span>;</span><br><span class="line">    cout &lt;&lt;<span class="string">&quot;运算符加等于：\t&quot;</span>&lt;&lt;iNum01 &lt;&lt; endl; <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// -=</span></span><br><span class="line">    <span class="type">int</span> iNum02 = <span class="number">10</span>;</span><br><span class="line">    iNum02 -= <span class="number">1</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;运算符减等于：\t&quot;</span> &lt;&lt; iNum02 &lt;&lt; endl;  <span class="comment">// 9</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// *=</span></span><br><span class="line">    <span class="type">int</span> iNum03 = <span class="number">10</span>;</span><br><span class="line">    iNum03 *= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;运算符乘等于：\t&quot;</span> &lt;&lt; iNum03 &lt;&lt; endl;  <span class="comment">// 20</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// /=</span></span><br><span class="line">    <span class="type">int</span> iNum04 = <span class="number">10</span>;</span><br><span class="line">    iNum04 /= <span class="number">5</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;运算符除等于：\t&quot;</span> &lt;&lt; iNum04 &lt;&lt; endl;  <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// %=</span></span><br><span class="line">    <span class="type">int</span> iNum05 = <span class="number">10</span>;</span><br><span class="line">    iNum05 %= <span class="number">3</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;运算取模等于：\t&quot;</span> &lt;&lt; iNum05 &lt;&lt; endl;  <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &lt;&lt;=</span></span><br><span class="line">    <span class="type">int</span> iNum06=<span class="number">1</span>;   <span class="comment">//数字一的二进制等于：    00110001</span></span><br><span class="line">    iNum06 &lt;&lt;= <span class="number">1</span>; <span class="comment">//左移一位二进制等于：    00110010</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;左移运算等于：\t&quot;</span> &lt;&lt; iNum06 &lt;&lt; endl;  <span class="comment">// 2 </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &gt;&gt;=</span></span><br><span class="line">    <span class="type">int</span> iNum07 = <span class="number">6</span>; <span class="comment">//数字六的二进制等于：    00110110</span></span><br><span class="line">    iNum07 &gt;&gt;= <span class="number">1</span>; <span class="comment">//左移一位二进制等于：    00110011</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;右移运算等于：\t&quot;</span> &lt;&lt; iNum07 &lt;&lt; endl;  <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &amp;=</span></span><br><span class="line">    <span class="type">int</span> iNum08 = <span class="number">1</span>;</span><br><span class="line">    iNum08 &amp;= <span class="number">1</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n位与 iNum08 &amp; 1 = &quot;</span> &lt;&lt; iNum08 &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ^=</span></span><br><span class="line">    <span class="type">int</span> iNum09 = <span class="number">2</span>;</span><br><span class="line">    iNum09 ^= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n位异 iNum09 ^ 2 = &quot;</span> &lt;&lt; iNum09 &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// =</span></span><br><span class="line">    <span class="type">int</span> iNum10 = <span class="number">3</span>;</span><br><span class="line">    iNum10 ^= <span class="number">3</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n位或 iNum10 ^ 9 = &quot;</span> &lt;&lt; iNum10 &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生以下结果： <img src="http://image.camcad.cn/2020/05/2020052001462558.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程15：运算符-算术运算符</title>
      <link href="/post/f347932f.html"/>
      <url>/post/f347932f.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第三章：运算符"><a href="#第三章：运算符" class="headerlink" title="第三章：运算符"></a>第三章：运算符</h1><h2 id="3-运算符"><a href="#3-运算符" class="headerlink" title="3 运算符"></a>3 运算符</h2><p><strong>作用：</strong>用于执行代码的运算。</p><table><thead><tr><th>运算符类型</th><th>作用</th></tr></thead><tbody><tr><td>算术运算符</td><td>用于处理四则运算</td></tr><tr><td>赋值运算符</td><td>用于将表达式的值赋给变量</td></tr><tr><td>比较运算符</td><td>用于表达式的比较，并返回一个真值或假值</td></tr><tr><td>逻辑运算符</td><td>用于根据表达式的值返回真值或假值</td></tr></tbody></table><h2 id="3-1-算术运算符"><a href="#3-1-算术运算符" class="headerlink" title="3.1 算术运算符"></a>3.1 算术运算符</h2><p><strong>作用：</strong>用于处理四则运算。</p><p><strong>算术运算符包括以下符号：</strong></p><p>下表显示了 C 语言支持的所有算术运算符。假设变量 <strong>A</strong> 的值为 10，变量 <strong>B</strong> 的值为 20，则：</p><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">把两个操作数相加</td><td align="center">A + B 将得到 30</td></tr><tr><td align="center">-</td><td align="center">从第一个操作数中减去第二个操作数</td><td align="center">A - B 将得到 -10</td></tr><tr><td align="center">*</td><td align="center">把两个操作数相乘</td><td align="center">A * B 将得到 200</td></tr><tr><td align="center">&#x2F;</td><td align="center">分子除以分母</td><td align="center">B &#x2F; A 将得到 2</td></tr><tr><td align="center">%</td><td align="center">取模运算符，整除后的余数</td><td align="center">B % A 将得到 0</td></tr><tr><td align="center">++</td><td align="center">自增运算符，整数值增加 1</td><td align="center">A++ 将得到 11</td></tr><tr><td align="center">--</td><td align="center">自减运算符，整数值减少 1</td><td align="center">A– 将得到 9</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> A = <span class="number">10</span>, B = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加减乘除</span></span><br><span class="line">cout &lt;&lt; A + B &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; A - B &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; A \* B &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; B / A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取模</span></span><br><span class="line">cout &lt;&lt; B % A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自增</span></span><br><span class="line">A++;</span><br><span class="line">cout &lt;&lt; A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自减</span></span><br><span class="line">A = <span class="number">10</span>;</span><br><span class="line">A--;</span><br><span class="line">cout &lt;&lt; A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>1、前置递增：先让变量+1，然后进行表达式运算。<br>++A;  &#x2F;&#x2F;让变量+1;</p><p>2、后置递增：先进行表达式运算，然后让变量+1。<br>A++;  &#x2F;&#x2F;让变量+1;</p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程14：数据类型-数据的输入</title>
      <link href="/post/fa01f24.html"/>
      <url>/post/fa01f24.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第二章：数据类型"><a href="#第二章：数据类型" class="headerlink" title="第二章：数据类型"></a>第二章：数据类型</h1><h2 id="2-8-数据的输入"><a href="#2-8-数据的输入" class="headerlink" title="2.8 数据的输入"></a>2.8 数据的输入</h2><p><strong>作用：</strong>用于从键盘获取数据。</p><p><strong>关键字：</strong>cin</p><p><strong>语法：</strong>cin &gt;&gt; 变量名;</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//整型输入</span></span><br><span class="line"><span class="type">int</span> iNum = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入整型变量值：&quot;</span>&lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; iNum;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;整型 iNum01= &quot;</span>&lt;&lt;iNum &lt;&lt;<span class="string">&quot;\\n&quot;</span>&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//浮点型输入</span></span><br><span class="line"><span class="type">double</span> dNum = <span class="number">0.0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入浮点型变量值：&quot;</span> &lt;&lt; endl; </span><br><span class="line">        cin &gt;&gt; dNum;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;浮点型 dNum= &quot;</span> &lt;&lt; dNum &lt;&lt; <span class="string">&quot;\\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符型输入</span></span><br><span class="line"><span class="type">char</span> cCh;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入字符型变量值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; cCh;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;字符型 cCh= &quot;</span> &lt;&lt; cCh &lt;&lt; <span class="string">&quot;\\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串型输入</span></span><br><span class="line">string sStr=<span class="string">&quot;&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入字符串型变量值：&quot;</span> &lt;&lt; endl; </span><br><span class="line">        cin &gt;&gt; sStr;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;字符串型 sStr= &quot;</span> &lt;&lt; sStr &lt;&lt; <span class="string">&quot;\\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程13：数据类型-布尔类型（bool）</title>
      <link href="/post/d38bc2de.html"/>
      <url>/post/d38bc2de.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第二章：数据类型"><a href="#第二章：数据类型" class="headerlink" title="第二章：数据类型"></a>第二章：数据类型</h1><h2 id="2-7-布尔类型-bool"><a href="#2-7-布尔类型-bool" class="headerlink" title="2.7 布尔类型 bool"></a>2.7 布尔类型 bool</h2><p><strong>作用：</strong>布尔数据类型代表真或假的值。</p><p>bool类型只有两个值：</p><ul><li>true~真（本质是1）</li><li>false~假（本质是0）</li></ul><p><strong>注意：bool类型 只要是非0的值都为真。</strong></p><p><strong>boo类型占用1个字节大小</strong></p><p><strong>示例:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl;<span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl;<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt;<span class="string">&quot;bool 占用内存空间：&quot;</span>&lt;&lt; (<span class="type">int</span>)<span class="built_in">sizeof</span>(<span class="type">bool</span>) &lt;&lt; <span class="string">&quot; 字节&quot;</span> &lt;&lt; endl;  <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下： <img src="http://image.camcad.cn/2020/05/2020051906195943.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程12：数据类型-字符串型（char、string）</title>
      <link href="/post/b12d45c4.html"/>
      <url>/post/b12d45c4.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第二章：数据类型"><a href="#第二章：数据类型" class="headerlink" title="第二章：数据类型"></a>第二章：数据类型</h1><h2 id="2-6-字符串型"><a href="#2-6-字符串型" class="headerlink" title="2.6 字符串型"></a>2.6 字符串型</h2><p><strong>作用：</strong>用于表示 一串字符</p><p><strong>两种风格:</strong></p><h3 id="1、C语言风格字符串：char-变量名-x3D-“字符串值”"><a href="#1、C语言风格字符串：char-变量名-x3D-“字符串值”" class="headerlink" title="1、C语言风格字符串：char 变量名[ ] &#x3D; “字符串值”;"></a>1、C语言风格字符串：char 变量名[ ] &#x3D; “字符串值”;</h3><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1、C语言风格字符串：char 变量名\[ \] = &quot;字符串值&quot;;</span></span><br><span class="line"><span class="type">char</span> cChar01\[ \] = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">cout &lt;&lt; cChar01 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：C风格的字符串需要用双引号括起来。</strong></p><h3 id="2、C-风格字符串：string-变量名-x3D-“字符串值”"><a href="#2、C-风格字符串：string-变量名-x3D-“字符串值”" class="headerlink" title="2、C++风格字符串：string 变量名 &#x3D; “字符串值”;"></a>2、C++风格字符串：string 变量名 &#x3D; “字符串值”;</h3><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span><span class="comment">//string字符串使用时，需加头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//2、C++风格字符串：string 变量名 = &quot;字符串值&quot;;</span></span><br><span class="line">string sString01 = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; sString01 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：C++风格字符串，需要加入头文件 #include <string></strong></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程11：数据类型-转义字符</title>
      <link href="/post/d374177.html"/>
      <url>/post/d374177.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第二章：数据类型"><a href="#第二章：数据类型" class="headerlink" title="第二章：数据类型"></a>第二章：数据类型</h1><h2 id="2-5-转义字符"><a href="#2-5-转义字符" class="headerlink" title="2.5 转义字符"></a>2.5 转义字符</h2><h3 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h3><p>所有的ASCII码都可以用“\”加数字（一般是8进制数字）来表示。而C中定义了一些字母前加”\“来表示常见的那些不能显示的ASCII字符，如\0,\t,\n等，就称为转义字符，因为后面的字符，都不是它本来的ASCII字符意思了。</p><h3 id="转义字符表"><a href="#转义字符表" class="headerlink" title="转义字符表"></a>转义字符表</h3><p>所有的转义字符和所对应的意义：</p><table><thead><tr><th>转义字符</th><th>意义</th><th>ASCII 码值（十进制）</th></tr></thead><tbody><tr><td>\a</td><td>响铃(BEL)</td><td>007</td></tr><tr><td>\b</td><td>退格(BS) ，将当前位置移到前一列</td><td>008</td></tr><tr><td>\f</td><td>换页(FF)，将当前位置移到下页开头</td><td>012</td></tr><tr><td>\n</td><td>换行(LF) ，将当前位置移到下一行开头</td><td>010</td></tr><tr><td>\r</td><td>回车(CR) ，将当前位置移到本行开头</td><td>013</td></tr><tr><td>\t</td><td>水平制表(HT) （跳到下一个 TAB 位置）</td><td>009</td></tr><tr><td>\v</td><td>垂直制表(VT)</td><td>011</td></tr><tr><td>\\</td><td>代表一个反斜线字符’&#39;</td><td>092</td></tr><tr><td>\‘</td><td>代表一个单引号（撇号）字符</td><td>039</td></tr><tr><td>\“</td><td>代表一个双引号字符</td><td>034</td></tr><tr><td>\?</td><td>代表一个问号</td><td>063</td></tr><tr><td>\0</td><td>空字符(NUL)</td><td>000</td></tr><tr><td>\ddd</td><td>1 到 3 位八进制数所代表的任意字符</td><td>三位八进制</td></tr><tr><td>\xhh</td><td>十六进制所代表的任意字符</td><td>十六进制</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// \\n 换行(LF) ，将当前位置移到下一行开头</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Hello World\\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// \\\\ 代表一个反斜线字符&#x27;\\&#x27;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Hello\\\\World&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// \\t 水平制表(HT) （跳到下一个TAB位置）</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Hello\\tWorld&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译执行结果如下：</p><p><img src="http://image.camcad.cn/2020/05/2020051903314817.jpg"></p><p>在传值前 通过 java.net.URLEncoder.encode(param1) 编码处理后，可将转义字符转为16进制;</p><table><thead><tr><th>特殊字符</th><th>URL中用途</th><th>转义方式</th></tr></thead><tbody><tr><td>+</td><td>表示空格</td><td>%2B</td></tr><tr><td>(空格)</td><td>应换用加号 + 或%20 表示</td><td>%20</td></tr><tr><td>&#x2F;</td><td>分隔目录和子目录</td><td>%2F</td></tr><tr><td>?</td><td>分隔实际的 URL 和参数</td><td>%3F</td></tr><tr><td>%</td><td>指定特殊字符</td><td>%25</td></tr><tr><td>#</td><td>表示书签</td><td>%23</td></tr><tr><td>&amp;</td><td>URL中指定的参数间的分隔符</td><td>%26</td></tr><tr><td>=</td><td>URL中指定参数的值</td><td>%3D</td></tr><tr><td>!</td><td>URL中指定参数的值</td><td>%21</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程10：数据类型-字符型（char）｜ASCII 编码对照表</title>
      <link href="/post/29c728fa.html"/>
      <url>/post/29c728fa.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第二章：数据类型"><a href="#第二章：数据类型" class="headerlink" title="第二章：数据类型"></a>第二章：数据类型</h1><h2 id="2-4-字符型"><a href="#2-4-字符型" class="headerlink" title="2.4 字符型"></a>2.4 字符型</h2><p><strong>作用：</strong>字符型变量用于显示单个字符</p><p><strong>语法：</strong>char 变量名 &#x3D; ‘初始值’;</p><h3 id="注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引导。"><a href="#注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引导。" class="headerlink" title="注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引导。"></a>注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引导。</h3><h3 id="注意2：单引号内只能有一个字符，不可以是字符串。"><a href="#注意2：单引号内只能有一个字符，不可以是字符串。" class="headerlink" title="注意2：单引号内只能有一个字符，不可以是字符串。"></a>注意2：单引号内只能有一个字符，不可以是字符串。</h3><ul><li>C&#x2F;C++中字符型变量只占用空间1个字节。</li><li>字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCL编码放入到存储单元。</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1、字符型变量创建方式</span></span><br><span class="line"><span class="type">char</span> cChar01 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cout &lt;&lt; cChar01 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、字符型变量所占用内存空间大小</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;char字符型变量所占用内存：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、字符型变量常见错误</span></span><br><span class="line"><span class="comment">//char cChar02 = &quot;b&quot;;//创建字符型变量时候，要用单引号</span></span><br><span class="line"><span class="comment">//char cChar02 = &#x27;abcdefg&#x27;;//创建字符型变量时候，单引号内只能有一个字符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4、字符型变量对应的ASCII编码</span></span><br><span class="line"><span class="comment">// a = 97;</span></span><br><span class="line"><span class="comment">// A = 65;</span></span><br><span class="line"><span class="type">char</span> cChar03 = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>)cChar03 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2020/05/2020051901242386.jpg"></p><h3 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h3><p>  ASCII（American Standard Code for Information Interchange，美国信息互换标准代码，ASCⅡ）是基于拉丁字母的一套电脑编码系统。它主要用于显示现代英语和其他西欧语言。它是现今最通用的单字节编码系统，并等同于国际标准ISO&#x2F;IEC 646。</p><p>ASCII第一次以规范标准的型态发表是在1967年，最后一次更新则是在1986年，至今为止共定义了128个字符，其中33个字符无法显示（这是以现今操作系统为依归，但在DOS模式下可显示出一些诸如笑脸、扑克牌花式等8-bit符号），且这33个字符多数都已是陈废的控制字符，控制字符的用途主要是用来操控已经处理过的文字，在33个字符之外的是95个可显示的字符，包含用键盘敲下空白键所产生的空白字符也算1个可显示字符（显示为空白）。</p><hr><p><strong>ASCII控制字符</strong></p><table><thead><tr><th>二进制</th><th>十进制</th><th>十六进制</th><th>缩写</th><th>名称&#x2F;意义</th></tr></thead><tbody><tr><td>0000 0000</td><td>0</td><td>00</td><td>NUL</td><td>空字符（Null）</td></tr><tr><td>0000 0001</td><td>1</td><td>01</td><td>SOH</td><td>标题开始</td></tr><tr><td>0000 0010</td><td>2</td><td>02</td><td>STX</td><td>本文开始</td></tr><tr><td>0000 0011</td><td>3</td><td>03</td><td>ETX</td><td>本文结束</td></tr><tr><td>0000 0100</td><td>4</td><td>04</td><td>EOT</td><td>传输结束</td></tr><tr><td>0000 0101</td><td>5</td><td>05</td><td>ENQ</td><td>请求</td></tr><tr><td>0000 0110</td><td>6</td><td>06</td><td>ACK</td><td>确认回应</td></tr><tr><td>0000 0111</td><td>7</td><td>07</td><td>BEL</td><td>响铃</td></tr><tr><td>0000 1000</td><td>8</td><td>08</td><td>BS</td><td>退格</td></tr><tr><td>0000 1001</td><td>9</td><td>09</td><td>HT</td><td>水平定位符号</td></tr><tr><td>0000 1010</td><td>10</td><td>0A</td><td>LF</td><td>换行键</td></tr><tr><td>0000 1011</td><td>11</td><td>0B</td><td>VT</td><td>垂直定位符号</td></tr><tr><td>0000 1100</td><td>12</td><td>0C</td><td>FF</td><td>换页键</td></tr><tr><td>0000 1101</td><td>13</td><td>0D</td><td>CR</td><td>归位键</td></tr><tr><td>0000 1110</td><td>14</td><td>0E</td><td>SO</td><td>取消变换（Shift out）</td></tr><tr><td>0000 1111</td><td>15</td><td>0F</td><td>SI</td><td>启用变换（Shift in）</td></tr><tr><td>0001 0000</td><td>16</td><td>10</td><td>DLE</td><td>跳出数据通讯</td></tr><tr><td>0001 0001</td><td>17</td><td>11</td><td>DC1</td><td>设备控制一（XON 启用软件速度控制）</td></tr><tr><td>0001 0010</td><td>18</td><td>12</td><td>DC2</td><td>设备控制二</td></tr><tr><td>0001 0011</td><td>19</td><td>13</td><td>DC3</td><td>设备控制三（XOFF 停用软件速度控制）</td></tr><tr><td>0001 0100</td><td>20</td><td>14</td><td>DC4</td><td>设备控制四</td></tr><tr><td>0001 0101</td><td>21</td><td>15</td><td>NAK</td><td>确认失败回应</td></tr><tr><td>0001 0110</td><td>22</td><td>16</td><td>SYN</td><td>同步用暂停</td></tr><tr><td>0001 0111</td><td>23</td><td>17</td><td>ETB</td><td>区块传输结束</td></tr><tr><td>0001 1000</td><td>24</td><td>18</td><td>CAN</td><td>取消</td></tr><tr><td>0001 1001</td><td>25</td><td>19</td><td>EM</td><td>连接介质中断</td></tr><tr><td>0001 1010</td><td>26</td><td>1A</td><td>SUB</td><td>替换</td></tr><tr><td>0001 1011</td><td>27</td><td>1B</td><td>ESC</td><td>跳出</td></tr><tr><td>0001 1100</td><td>28</td><td>1C</td><td>FS</td><td>文件分割符</td></tr><tr><td>0001 1101</td><td>29</td><td>1D</td><td>GS</td><td>组群分隔符</td></tr><tr><td>0001 1110</td><td>30</td><td>1E</td><td>RS</td><td>记录分隔符</td></tr><tr><td>0001 1111</td><td>31</td><td>1F</td><td>US</td><td>单元分隔符</td></tr><tr><td>0111 1111</td><td>127</td><td>7F</td><td>DEL</td><td>删除</td></tr></tbody></table><p><strong>ASCII可显示字符</strong></p><table><thead><tr><th>二进制</th><th>十进制</th><th>十六进制</th><th>图形</th></tr></thead><tbody><tr><td>0010 0000</td><td>32</td><td>20</td><td>（空格）(␠)</td></tr><tr><td>0010 0001</td><td>33</td><td>21</td><td>!</td></tr><tr><td>0010 0010</td><td>34</td><td>22</td><td>“</td></tr><tr><td>0010 0011</td><td>35</td><td>23</td><td>#</td></tr><tr><td>0010 0100</td><td>36</td><td>24</td><td>$</td></tr><tr><td>0010 0101</td><td>37</td><td>25</td><td>%</td></tr><tr><td>0010 0110</td><td>38</td><td>26</td><td>&amp;</td></tr><tr><td>0010 0111</td><td>39</td><td>27</td><td>‘</td></tr><tr><td>0010 1000</td><td>40</td><td>28</td><td>(</td></tr><tr><td>0010 1001</td><td>41</td><td>29</td><td>)</td></tr><tr><td>0010 1010</td><td>42</td><td>2A</td><td>*</td></tr><tr><td>0010 1011</td><td>43</td><td>2B</td><td>+</td></tr><tr><td>0010 1100</td><td>44</td><td>2C</td><td>,</td></tr><tr><td>0010 1101</td><td>45</td><td>2D</td><td>-</td></tr><tr><td>0010 1110</td><td>46</td><td>2E</td><td>.</td></tr><tr><td>0010 1111</td><td>47</td><td>2F</td><td>&#x2F;</td></tr><tr><td>0011 0000</td><td>48</td><td>30</td><td>0</td></tr><tr><td>0011 0001</td><td>49</td><td>31</td><td>1</td></tr><tr><td>0011 0010</td><td>50</td><td>32</td><td>2</td></tr><tr><td>0011 0011</td><td>51</td><td>33</td><td>3</td></tr><tr><td>0011 0100</td><td>52</td><td>34</td><td>4</td></tr><tr><td>0011 0101</td><td>53</td><td>35</td><td>5</td></tr><tr><td>0011 0110</td><td>54</td><td>36</td><td>6</td></tr><tr><td>0011 0111</td><td>55</td><td>37</td><td>7</td></tr><tr><td>0011 1000</td><td>56</td><td>38</td><td>8</td></tr><tr><td>0011 1001</td><td>57</td><td>39</td><td>9</td></tr><tr><td>0011 1010</td><td>58</td><td>3A</td><td>:</td></tr><tr><td>0011 1011</td><td>59</td><td>3B</td><td>;</td></tr><tr><td>0011 1100</td><td>60</td><td>3C</td><td>&lt;</td></tr><tr><td>0011 1101</td><td>61</td><td>3D</td><td>&#x3D;</td></tr><tr><td>0011 1110</td><td>62</td><td>3E</td><td>&gt;</td></tr><tr><td>0011 1111</td><td>63</td><td>3F</td><td>?</td></tr></tbody></table><table><thead><tr><th>二进制</th><th>十进制</th><th>十六进制</th><th>图形</th></tr></thead><tbody><tr><td>0100 0000</td><td>64</td><td>40</td><td>@</td></tr><tr><td>0100 0001</td><td>65</td><td>41</td><td>A</td></tr><tr><td>0100 0010</td><td>66</td><td>42</td><td>B</td></tr><tr><td>0100 0011</td><td>67</td><td>43</td><td>C</td></tr><tr><td>0100 0100</td><td>68</td><td>44</td><td>D</td></tr><tr><td>0100 0101</td><td>69</td><td>45</td><td>E</td></tr><tr><td>0100 0110</td><td>70</td><td>46</td><td>F</td></tr><tr><td>0100 0111</td><td>71</td><td>47</td><td>G</td></tr><tr><td>0100 1000</td><td>72</td><td>48</td><td>H</td></tr><tr><td>0100 1001</td><td>73</td><td>49</td><td>I</td></tr><tr><td>0100 1010</td><td>74</td><td>4A</td><td>J</td></tr><tr><td>0100 1011</td><td>75</td><td>4B</td><td>K</td></tr><tr><td>0100 1100</td><td>76</td><td>4C</td><td>L</td></tr><tr><td>0100 1101</td><td>77</td><td>4D</td><td>M</td></tr><tr><td>0100 1110</td><td>78</td><td>4E</td><td>N</td></tr><tr><td>0100 1111</td><td>79</td><td>4F</td><td>O</td></tr><tr><td>0101 0000</td><td>80</td><td>50</td><td>P</td></tr><tr><td>0101 0001</td><td>81</td><td>51</td><td>Q</td></tr><tr><td>0101 0010</td><td>82</td><td>52</td><td>R</td></tr><tr><td>0101 0011</td><td>83</td><td>53</td><td>S</td></tr><tr><td>0101 0100</td><td>84</td><td>54</td><td>T</td></tr><tr><td>0101 0101</td><td>85</td><td>55</td><td>U</td></tr><tr><td>0101 0110</td><td>86</td><td>56</td><td>V</td></tr><tr><td>0101 0111</td><td>87</td><td>57</td><td>W</td></tr><tr><td>0101 1000</td><td>88</td><td>58</td><td>X</td></tr><tr><td>0101 1001</td><td>89</td><td>59</td><td>Y</td></tr><tr><td>0101 1010</td><td>90</td><td>5A</td><td>Z</td></tr><tr><td>0101 1011</td><td>91</td><td>5B</td><td>[</td></tr><tr><td>0101 1100</td><td>92</td><td>5C</td><td>|</td></tr><tr><td>0101 1101</td><td>93</td><td>5D</td><td>]</td></tr><tr><td>0101 1110</td><td>94</td><td>5E</td><td>^</td></tr><tr><td>0101 1111</td><td>95</td><td>5F</td><td>_</td></tr></tbody></table><table><thead><tr><th>二进制</th><th>十进制</th><th>十六进制</th><th>图形</th></tr></thead><tbody><tr><td>0110 0000</td><td>96</td><td>60</td><td>&#96;</td></tr><tr><td>0110 0001</td><td>97</td><td>61</td><td>a</td></tr><tr><td>0110 0010</td><td>98</td><td>62</td><td>b</td></tr><tr><td>0110 0011</td><td>99</td><td>63</td><td>c</td></tr><tr><td>0110 0100</td><td>100</td><td>64</td><td>d</td></tr><tr><td>0110 0101</td><td>101</td><td>65</td><td>e</td></tr><tr><td>0110 0110</td><td>102</td><td>66</td><td>f</td></tr><tr><td>0110 0111</td><td>103</td><td>67</td><td>g</td></tr><tr><td>0110 1000</td><td>104</td><td>68</td><td>h</td></tr><tr><td>0110 1001</td><td>105</td><td>69</td><td>i</td></tr><tr><td>0110 1010</td><td>106</td><td>6A</td><td>j</td></tr><tr><td>0110 1011</td><td>107</td><td>6B</td><td>k</td></tr><tr><td>0110 1100</td><td>108</td><td>6C</td><td>l</td></tr><tr><td>0110 1101</td><td>109</td><td>6D</td><td>m</td></tr><tr><td>0110 1110</td><td>110</td><td>6E</td><td>n</td></tr><tr><td>0110 1111</td><td>111</td><td>6F</td><td>o</td></tr><tr><td>0111 0000</td><td>112</td><td>70</td><td>p</td></tr><tr><td>0111 0001</td><td>113</td><td>71</td><td>q</td></tr><tr><td>0111 0010</td><td>114</td><td>72</td><td>r</td></tr><tr><td>0111 0011</td><td>115</td><td>73</td><td>s</td></tr><tr><td>0111 0100</td><td>116</td><td>74</td><td>t</td></tr><tr><td>0111 0101</td><td>117</td><td>75</td><td>u</td></tr><tr><td>0111 0110</td><td>118</td><td>76</td><td>v</td></tr><tr><td>0111 0111</td><td>119</td><td>77</td><td>w</td></tr><tr><td>0111 1000</td><td>120</td><td>78</td><td>x</td></tr><tr><td>0111 1001</td><td>121</td><td>79</td><td>y</td></tr><tr><td>0111 1010</td><td>122</td><td>7A</td><td>z</td></tr><tr><td>0111 1011</td><td>123</td><td>7B</td><td>{</td></tr><tr><td>0111 1100</td><td>124</td><td>7C</td><td></td></tr><tr><td>0111 1101</td><td>125</td><td>7D</td><td>}</td></tr><tr><td>0111 1110</td><td>126</td><td>7E</td><td>~</td></tr></tbody></table><p><strong>ASCII 码大致由以下两部分组成：</strong></p><ul><li>ASCII 控制字符：ASCII 表上十制进数字 <strong>0-31&#x2F;127</strong> 分配给了控制字符，用于控制计算机或一些外围设备。</li><li>ASCII 显示字符：ASCII 表上十制进数字 <strong>32-126</strong> 分配给了能在键盘上输出的字符，当编写或打印文档时就会出现。</li></ul>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程09：数据类型-实型（float、double）</title>
      <link href="/post/d4eac064.html"/>
      <url>/post/d4eac064.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第二章：数据类型"><a href="#第二章：数据类型" class="headerlink" title="第二章：数据类型"></a>第二章：数据类型</h1><p>C&#x2F;C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量或常量分配内存。</p><h2 id="2-3-实型（浮点型）"><a href="#2-3-实型（浮点型）" class="headerlink" title="2.3 实型（浮点型）"></a>2.3 实型（浮点型）</h2><p><strong>作用：</strong>实型变量表示浮点型（小数）。</p><p>C&#x2F;C++ 中能够表示实型的类型有两种方式，<strong>两者的区别在于有效的数字范围不同：</strong></p><table><thead><tr><th>数据类型</th><th>占用空间</th><th>有效数字范围</th></tr></thead><tbody><tr><td>float（单精度）</td><td>4字节</td><td>7位有效数字</td></tr><tr><td>double（双精度）</td><td>8字节</td><td>15~16位有效数字</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//float（单精度）</span></span><br><span class="line"><span class="type">float</span> fNum = <span class="number">1.341f</span>;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;float  占用空间= &quot;</span>&lt;&lt; <span class="built_in">sizeof</span>(fNum) &lt;&lt;<span class="string">&quot; 字节&quot;</span>&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//double（双精度）</span></span><br><span class="line"><span class="type">double</span> dNum = <span class="number">1.36424</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;double 占用空间= &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(dNum) &lt;&lt; <span class="string">&quot; 字节&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//科学计数法</span></span><br><span class="line"><span class="type">float</span> fNum02 = <span class="number">4e2</span>;<span class="comment">//4\*10^2 = 400</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;fNum02= &quot;</span> &lt;&lt; fNum02 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> dNum02 = <span class="number">3e-2</span>;<span class="comment">//3\*0.1^2 = 0.03</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;dNum02= &quot;</span> &lt;&lt; dNum02 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://image.camcad.cn/2020/05/2020051815055579.jpg"><img src="http://image.camcad.cn/2020/05/2020051815055579.jpg"></a></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程08：sizeof 关键字</title>
      <link href="/post/2f84322d.html"/>
      <url>/post/2f84322d.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第二章：数据类型"><a href="#第二章：数据类型" class="headerlink" title="第二章：数据类型"></a>第二章：数据类型</h1><h2 id="2-2-sizeof-关键字"><a href="#2-2-sizeof-关键字" class="headerlink" title="2.2 sizeof 关键字"></a>2.2 sizeof 关键字</h2><p><strong>作用：</strong>利用sizeof关键字可以统计数据类型所占内存大小。</p><p><strong>语法：</strong>sizeof（数据类型&#x2F;变量）</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Windows10 64位 操作系统\\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//short（短整型) -32768~-32767</span></span><br><span class="line"><span class="type">short</span> sNum = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;short(短整型)占用空间= &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; <span class="string">&quot;字节&quot;</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//int（整型）-2147483648~2147483647</span></span><br><span class="line"><span class="type">int</span> iNum = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;int(整型)占用空间= &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(iNum) &lt;&lt; <span class="string">&quot;字节&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//long（长整型）-2147483648~2147483647 </span></span><br><span class="line"><span class="type">long</span> lNum = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long(长整型)占用空间= &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span>) &lt;&lt; <span class="string">&quot;字节&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//long long（长长整型）-9223372036854775808~9223372036854775807</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> llNum = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long long(长长整型)占用空间= &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span> <span class="type">long</span>) &lt;&lt; <span class="string">&quot;字节&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://image.camcad.cn/2020/05/2020051814290662.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程07：数据类型-整型（short、int、long、long long）</title>
      <link href="/post/145d1acc.html"/>
      <url>/post/145d1acc.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第二章：数据类型"><a href="#第二章：数据类型" class="headerlink" title="第二章：数据类型"></a>第二章：数据类型</h1><p>C&#x2F;C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量或常量分配内存。</p><h2 id="2-1-整型"><a href="#2-1-整型" class="headerlink" title="2.1 整型"></a>2.1 整型</h2><p><strong>作用：</strong>整型变量表示的是整数类型的数据。</p><p>C&#x2F;C++中能够表示整型的类型有以下几种方式，<strong>区别在于所占内存空间不同：</strong></p><table><thead><tr><th>数据类型</th><th>占用空间</th><th>取值范围</th></tr></thead><tbody><tr><td>short（短整型）</td><td>2字节</td><td>（-2^15~2^15-1）</td></tr><tr><td>int（整型）</td><td>4字节</td><td>（-2^31~2^31-1）</td></tr><tr><td>long（长整型）</td><td>Windows为4字节，Linux为4字节（32位），8字节（64位）</td><td>（-2^31~2^31-1）</td></tr><tr><td>long long（长长整型）</td><td>8字节</td><td>（-2^63~2^63-1）</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\\t\\tWindows10 64位 操作系统&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//short（短整型) -32768~-32767</span></span><br><span class="line"><span class="type">short</span> sNum = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;short(短整型)赋值= &quot;</span> &lt;&lt; sNum &lt;&lt; <span class="string">&quot;\\t\\t占用空间= &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; <span class="string">&quot;字节&quot;</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//int（整型）-2147483648~2147483647</span></span><br><span class="line"><span class="type">int</span> iNum = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;int(整型)赋值= &quot;</span> &lt;&lt; iNum &lt;&lt; <span class="string">&quot;\\t\\t占用空间= &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span>) &lt;&lt; <span class="string">&quot;字节&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//long（长整型）-2147483648~2147483647 </span></span><br><span class="line"><span class="type">long</span> lNum = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long(长整型)赋值= &quot;</span> &lt;&lt; lNum &lt;&lt; <span class="string">&quot;\\t\\t占用空间= &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span>) &lt;&lt; <span class="string">&quot;字节&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//long long（长长整型）-9223372036854775808~9223372036854775807</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> llNum = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long long(长长整型)赋值= &quot;</span> &lt;&lt; llNum &lt;&lt; <span class="string">&quot;\\t\\t占用空间= &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span> <span class="type">long</span>) &lt;&lt; <span class="string">&quot;字节&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://image.camcad.cn/2020/05/2020051813090512.jpg"><img src="http://image.camcad.cn/2020/05/2020051813090512.jpg"></a></p><h3 id="整型结论：short-lt-int-lt-x3D-long-lt-x3D-long-long"><a href="#整型结论：short-lt-int-lt-x3D-long-lt-x3D-long-long" class="headerlink" title="整型结论：short &lt; int &lt;&#x3D; long &lt;&#x3D; long long"></a>整型结论：short &lt; int &lt;&#x3D; long &lt;&#x3D; long long</h3>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程06：标识符命名规则</title>
      <link href="/post/6cc951e8.html"/>
      <url>/post/6cc951e8.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第一章：C-初识"><a href="#第一章：C-初识" class="headerlink" title="第一章：C++初识"></a>第一章：C++初识</h1><h2 id="1-6-标识符命名规则"><a href="#1-6-标识符命名规则" class="headerlink" title="1.6 标识符命名规则"></a>1.6 标识符命名规则</h2><p><strong>作用：</strong>C++规定给标识符（变量、常量）命名时，有一套自己的规则。</p><ul><li>标识符不能是关键字</li><li>标识符只能由字母、数字、下划线组成</li><li>第一个字符必须为字母或下划线</li><li>标识符中字母区分大小写</li></ul><h3 id="建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读。"><a href="#建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读。" class="headerlink" title="建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读。"></a>建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读。</h3><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1、标识符不能是关键字</span></span><br><span class="line"><span class="comment">//double int = 10.0;//错误</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、标识符只能由字母、数字、下划线组成</span></span><br><span class="line"><span class="type">int</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> num01 = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> \_2num = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、第一个字符必须为字母或下划线</span></span><br><span class="line"><span class="comment">//int 2num = 20;//错误</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4、标识符中字母区分大小写</span></span><br><span class="line"><span class="type">int</span> num1 = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num= &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;num= &quot; &lt;&lt; Num1 &lt;&lt; endl;//错误，num1和Num1不是同一个名称</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程05：C/C++中常用的编程关键字</title>
      <link href="/post/b90c4483.html"/>
      <url>/post/b90c4483.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第一章：C-初识"><a href="#第一章：C-初识" class="headerlink" title="第一章：C++初识"></a>第一章：C++初识</h1><h2 id="1-5-关键字"><a href="#1-5-关键字" class="headerlink" title="1.5 关键字"></a>1.5 关键字</h2><p><strong>作用：</strong>关键字是C++中预先保留的单词（标识符）</p><ul><li><strong>在定义变量或者常量时，不要用关键字</strong></li></ul><p>C&#x2F;C++关键字如下：<br><img src="http://image.camcad.cn/2020/05/2020051711522463.jpg"></p><p><strong>提示：</strong>在给变量或者常量起名时，不要用C++的关键字，否则会产生岐义。</p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程04：常量与变量的区别/变量的使用</title>
      <link href="/post/8fe4479e.html"/>
      <url>/post/8fe4479e.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第一章：C-初识"><a href="#第一章：C-初识" class="headerlink" title="第一章：C++初识"></a>第一章：C++初识</h1><h2 id="1-4-常量"><a href="#1-4-常量" class="headerlink" title="1.4 常量"></a>1.4 常量</h2><p><strong>作用：</strong>用于记录程序中不可更改的数据。<br>C++定义常量的两种方式</p><p>1、<code>#define</code> 宏常量：#define 常量名 常量值</p><ul><li>通常在文件上方定义，表示 一个常量。</li></ul><p>2、<code>const</code> 修饰的变量： const 数据类型 常量名 &#x3D; 常量值</p><ul><li>通常在变量定义前加关键字const，修饰该变量为常量，不可修改。</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、#define 宏常量：#define 常量名 常量值</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> months 12</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//months=13;//错误，宏常量不可修改。</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一年有 = &quot;</span> &lt;&lt; months &lt;&lt;<span class="string">&quot; 个月&quot;</span>&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、const 修饰的变量： const 数据类型 常量名 = 常量值</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> iHour = <span class="number">24</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//int iHour = 25;//错误，const修饰的变量也称为常量。</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一天有 = &quot;</span> &lt;&lt; iHour &lt;&lt; <span class="string">&quot; 小时&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程03：变量的意义/变量的使用</title>
      <link href="/post/6e88c124.html"/>
      <url>/post/6e88c124.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第一章：C-初识"><a href="#第一章：C-初识" class="headerlink" title="第一章：C++初识"></a>第一章：C++初识</h1><h2 id="1-3-变量"><a href="#1-3-变量" class="headerlink" title="1.3 变量"></a>1.3 变量</h2><p><strong>作用：</strong>给一段指定的内存空间起名，方便操作这段内存空间。</p><p><strong>语法：</strong>数据类型 变量名 &#x3D; 初始值；</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//变量的定义</span></span><br><span class="line"><span class="comment">//语法：数据类型 变量名 = 初始值;</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> iNum = <span class="number">20</span>;<span class="comment">//数据类型为 整数，变量名为 iNum，初始值 20。</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;iNum= &quot;</span> &lt;&lt; iNum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程02：单行注释/多行注释</title>
      <link href="/post/5a50df31.html"/>
      <url>/post/5a50df31.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第一章：C-初识"><a href="#第一章：C-初识" class="headerlink" title="第一章：C++初识"></a>第一章：C++初识</h1><h2 id="1-2-注释"><a href="#1-2-注释" class="headerlink" title="1.2 注释"></a>1.2 <strong>注释</strong></h2><p><strong>作用：</strong>在代码中做一些说明和解释，方便自己或其他程序员阅读代码（<strong>两种格式</strong>）</p><p>1、<strong>单行注释：</strong> <code>// 描述信息</code>（快捷键 Ctrl+K，Ctrl+C ）</p><ul><li>通常放在一行代码的上方，或者一条语句的未尾，对该行代码说明。</li></ul><p>2、<strong>多行注释：</strong> <code>\* 描述信息\*</code></p><ul><li>通常放在一段代码的上方，对该段代码做整体说明。</li></ul><h3 id="提示：编译器在编译代码时，会忽略注释的内容。"><a href="#提示：编译器在编译代码时，会忽略注释的内容。" class="headerlink" title="提示：编译器在编译代码时，会忽略注释的内容。"></a>提示：编译器在编译代码时，会忽略注释的内容。</h3><p><a href="http://image.camcad.cn/2020/05/202005170445144.jpg"><img src="http://image.camcad.cn/2020/05/202005170445144-1024x401.jpg"></a></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++语言 零基础入门教程01：第一个C++程序“HelloWorld”</title>
      <link href="/post/b896bb48.html"/>
      <url>/post/b896bb48.html</url>
      
        <content type="html"><![CDATA[<h3 id="教程目录《C-基础教程》"><a href="#教程目录《C-基础教程》" class="headerlink" title="教程目录《C++基础教程》"></a>教程目录《<a href="https://notes.camcad.cn/post/b2d53884.html">C++基础教程</a>》</h3><h1 id="第一章：C-初识"><a href="#第一章：C-初识" class="headerlink" title="第一章：C++初识"></a>第一章：C++初识</h1><h2 id="1-1-第一个C-程序"><a href="#1-1-第一个C-程序" class="headerlink" title="1.1 第一个C++程序"></a>1.1 第一个C++程序</h2><p>编写一个C++程序总共分为4个步骤</p><ul><li>创建项目</li><li>创建文件</li><li>编写代码</li><li>运行文件</li></ul><h3 id="1-1-1-创建项目"><a href="#1-1-1-创建项目" class="headerlink" title="1.1.1 创建项目"></a>1.1.1 创建项目</h3><p>Visual Studio 是我们用来编写C&#x2F;C++程序的主要工具，我们先将它打开。</p><p><a href="http://image.camcad.cn/2020/05/2020051702465231.jpg"><img src="http://image.camcad.cn/2020/05/2020051702465231-1024x739.jpg"></a><a href="http://image.camcad.cn/2020/05/2020051702461712.jpg"><img src="http://image.camcad.cn/2020/05/2020051702461712-1024x760.jpg"></a></p><h3 id="1-1-2-创建文件"><a href="#1-1-2-创建文件" class="headerlink" title="1.1.2 创建文件"></a>1.1.2 创建文件</h3><p>点击”源文件“–&gt;右键”源文件“–&gt;选择”添加“–&gt;点击“新建项”</p><p><a href="http://image.camcad.cn/2020/05/2020051703011331.jpg"><img src="http://image.camcad.cn/2020/05/2020051703011331-1024x593.jpg"></a></p><h3 id="1-1-3-编写代码"><a href="#1-1-3-编写代码" class="headerlink" title="1.1.3 编写代码"></a>1.1.3 编写代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;Hello World&quot;</span> &lt;&lt; endl;</span><br><span class="line">  <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-1-4-运行程序"><a href="#1-1-4-运行程序" class="headerlink" title="1.1.4 运行程序"></a>1.1.4 运行程序</h3><p><a href="http://image.camcad.cn/2020/05/2020051703141939.jpg"><img src="http://image.camcad.cn/2020/05/2020051703141939-1024x724.jpg"></a><a href="http://image.camcad.cn/2020/05/2020051703143081.jpg"><img src="http://image.camcad.cn/2020/05/2020051703143081-1024x274.jpg"></a></p>]]></content>
      
      
      <categories>
          
          <category> C/C++语言 零基础入门教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 蚂蚁Emmet </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
